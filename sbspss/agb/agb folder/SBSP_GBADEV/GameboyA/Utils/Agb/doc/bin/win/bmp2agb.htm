<html>

	<head>
		<link rel="stylesheet" type="text/css" href="../../html/agb.css">
		<!-- Edited by Ron D. 12/17/1999 -->
		<title>bmp2agb</title>
	</head>

	<body>
		<h2>bmp2agb<font size="3"> [Tool Command]</font></h2>
		<p><font color="red">Converts bitmap into text or binary for output.</font></p>
		<h3>Syntax</h3>
		<pre>
<code>bmp2agb [-bi/-bm|c/-f/-h/-d 8|16/-r/-l search/-h 4|8/-np/-o offset] input-file.bmp</code>
</pre>
		<h3>Description</h3>
		<p>Converts bitmap into text or binary for output.</p>
		<p>The command arguments are described below:</p>
		<dl>
			<dt><b>input-file </b>
			<dd>The input bitmap file. Supports 4bit, 8bit, and 24bit.
		</dl>
		<dl>
			<dt><b>-bi</b>
			<dd>Output as a binary file.
		</dl>
		<dl>
			<dt><b>-bm</b>
			<dd>Output in bitmap format. Invalid for 4bit images. Selected by default for 24bit images.
		</dl>
		<dl>
			<dt><b>-c</b>
			<dd>Output in character format. Selected by default for 4bit and 8bit images. Invalid for 24bit images.
		</dl>
		<dl>
			<dt><b>-f</b>
			<dd>Flip horizontally (mirror) and output.
		</dl>
		<dl>
			<dt><b>-h</b>
			<dd>Attach 4Byte header to unconverted data so it can be recognized.
		</dl>
		<dl>
			<dt><b>-d bitSize (8|16)</b>
			<dd>Output difference-converted data. For expansion, use Diff8BitUnFilterWram(), Diff8BitUnFilterVram(), or Diff16BitUnFilter().
		</dl>
		<dl>
			<dt><b>-r</b>
			<dd>Output using run-length compression. For expansion, use RLUnCompVram() or RLUnCompWram().
		</dl>
		<dl>
			<dt><b>-l search (&gt;0)</b>
			<dd>Output using LZ77 compression. For expansion, use LZ77UnCompVram() or LZ77UnCompWram(). For data to be expanded with LZ77UnCompVram(), specify 2 or greater for &quot;search.&quot;
		</dl>
		<dl>
			<dt><b>-h bitSize (4|8)</b>
			<dd>Output using Huffman compression. For expansion, use HuffUnComp().
		</dl>
		<dl>
			<dt><b>-np</b>
			<dd>Do not output palettes.
		</dl>
		<dl>
			<dt><b>-o offset</b>
			<dd>Shift the image by the &quot;offset&quot; value only.
		</dl>
		<h3>Example</h3>
		<p>In this example, the converted data is output in the following order: original data with attached header -&gt; LZ77 compression -&gt; Huffman compression
		<p>bmp2agb -h -l 2 -h 4 input-file.bmp</p>
		<p><br>
	</body>

</html>
