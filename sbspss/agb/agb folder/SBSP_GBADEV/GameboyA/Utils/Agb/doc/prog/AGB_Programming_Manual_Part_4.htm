<html>

	<head>
		<link rel="stylesheet" type="text/css" href="style.css">
		<!--
Editors' comments:
mm/dd/yy  Created by * using w2w 2.0
mm/dd/yy Edited by * -->
		<title>Communication Functions</title>
	</head>

	<body bgcolor="white">
		<h1><a name="T1"></a>13 Communication Functions</h1>
		<p>AGB provides the following five functions.</p>
		<p>1. 8-Bit/32-Bit Normal Communication Function</p>
		<p><u>Using a cable is prohibited for Normal Communication.</u> <u>It is possible to communicate with accessories that do not use cables.</u> (When communicating with AGB using a cable, Multi Player Communication is used.) Due to the voltage difference, it is not possible to communicate with CGB. 8-bit communication handles 8-bit data with a transfer-enable flag. 32-bit communication handles 32-bit data with a transfer-enable flag.</p>
		<p>2. 16-Bit Multi-player Communication Function</p>
		<p>This multiple/simultaneous communication function uses UART system to enable communication of up to 4 AGB units.</p>
		<p>A special cable for Multi-player communication is necessary.</p>
		<p>3. UART Communication Function</p>
		<p>Enables high-speed communication by UART system.</p>
		<p>4. General Purpose Communication Function</p>
		<p>Enables communication by any protocol through direct control of the communication terminal.</p>
		<p>5. JOY Bus Communication Function</p>
		<p>Enables communication using Nintendo&#146;s standardized Joy bus.</p>
		<ul>
			<h3>
			<h3><b><a name="T2"></a>Selecting Communication Function</b></h3>
			</h3>
			<p>All the communication functions use an external expansion 6-pin connector. Communication functions are switched by the communication function set flag of the communication control register R (2-bit) and the communication mode set flag of the serial communication control register SCCNT_L (2-bit), which are described later.</p>
		</ul>
		<center>
			<p>
			<table width="509" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="33%" valign="middle" rowspan="2" bgcolor="white">
						<center>
							Communication Functions&nbsp;</center>
					</td>
					<td valign="middle" colspan="2" bgcolor="white">
						<center>
							R&nbsp;</center>
					</td>
					<td valign="middle" colspan="2" bgcolor="white">
						<center>
							SCCNT_L&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="17%" valign="middle" bgcolor="white">
						<center>
							d15&nbsp;</center>
					</td>
					<td width="17%" valign="middle" bgcolor="white">
						<center>
							d14&nbsp;</center>
					</td>
					<td width="17%" valign="middle" bgcolor="white">
						<center>
							d13&nbsp;</center>
					</td>
					<td width="17%" valign="middle" bgcolor="white">
						<center>
							d12&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="33%" valign="middle">
						<center>
							General Purpose&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="33%" valign="middle">
						<center>
							JOY Bus&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="33%" valign="middle">
						<center>
							8-Bit Serial&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="33%" valign="middle">
						<center>
							32-Bit Serial&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="33%" valign="middle">
						<center>
							16-Bit Serial&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="33%" valign="middle">
						<center>
							UART&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							*&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="17%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
				</tr>
			</table>
			</p>
		</center>
		<ul>
			<p>When changing communication modes, change only the communication mode set flag first. Do not start a communication at the same time as you change modes. This may cause a malfunction.</p>
		</ul>
		<h2>
		<h2>
		<h2>
		<h2><b><a name="T3"></a>13.1 8-Bit/32-Bit Normal Serial Communication </b></h2>
		</h2>
		</h2>
		</h2>
		<ul>
			<p>Serial transfer sends/receives simultaneously.</p>
			<p>If data is set in the data register and the serial transfer is started, received data is set in the data register when the transfer is complete.</p>
			<h3><b><a name="T4"></a>Connecting During Normal Serial Communication</b></h3>
		</ul>
		<center>
			<p><img src="Image99.gif" width="258" height="125"></p>
		</center>
		<ul>
			<p>Master (internal clock mode) will output the shift clock from SC terminal. SD terminal will become an input terminal with pull-up.</p>
			<p>In the case of a slave(external clock mode), SC terminal will become an input terminal with pull-up. SD terminal will go to LO output.</p>
			<p>The set data will be left-shifted by the falling of the shift clock, and will be output from the SO terminal in order starting from the most significant bit. The data input from SI terminal will be input to the least significant bit with the rising of the shift clock.</p>
			<h3><b><a name="T5"></a>SIO Timing Chart</b></h3>
		</ul>
		<center>
			<p><img src="Image100.gif" width="513" height="227"></p>
		</center>
		<ul>
			<h3><b><a name="T6"></a>8 bit Normal Serial Communication Data Register</b></h3>
			<p>8-bit transfer mode uses SCCNT_H as a data register. Upper 8-bits will become disabled.</p>
		</ul>
		<center>
			<p><img src="Image101.gif" width="572" height="46"></p>
		</center>
		<ul>
			<h3><b><a name="T7"></a>32-bit Normal Serial Communication Data Register </b></h3>
			<p>32-bit transfer mode uses [120h:SCD0] and [122h:SCD1] as data registers.(These data registers are used for 16-bit multi-player communication also.)</p>
			<p>The most significant bit will be d15 in the register SCD1, and the least significant bit will be d0 in the register SCD0.</p>
		</ul>
		<center>
			<p><img src="Image102.gif" width="572" height="115"></p>
		</center>
		<ul>
			<h3><b><a name="T8"></a>Control Register</b></h3>
			<p>When Register R (d15) = (0), the mode will be 8-bit normal serial communication mode by setting to Register SCCNT_L (d13, d12) = (0,0), and the mode will be 32-bit normal serial communication mode by setting to SCCNT_L (d13, d12) = (0, 1).</p>
		</ul>
		<center>
			<p><img src="Image103.gif" width="612" height="461"></p>
		</center>
		<ul>
			<p>SCCNT_L [d14] Interrupt Request Enable Flag</p>
			<ul>
				<p>If 0 is set, an interrupt request will not be made.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>If 1 is set, an interrupt request will be made immediately after transfer is complete.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d12] Transfer Length Setting Flag</p>
			<ul>
				<p>Sets bit length of transfer data.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>If 0, 8-bit transfer is carried out. If 1, 32-bit transfer is carried out.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d07] Start Bit</p>
			<ul>
				<p>With a setting of 1, a serial transfer starts. The bit is automatically reset after transfer completion.</p>
			</ul>
			<p>SCCNT_L [d03] Transfer Enable Flag Send</p>
			<ul>
				<p>A setting of 0 enables transfer; 1 disables it.</p>
				<p>This flag is output from the SO terminal until the start of a transfer. When the transfer starts, serial data are output from the SO terminal.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d02] Transfer Enable Flag Receive</p>
			<ul>
				<p>It is possible to read the status of SI terminal (transfer-enable flag transmitting of the other party's hardware) before communication starts.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>It becomes invalid after communication has started.(receive data bit during communication is reflected.)</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d01] Internal Shift Clock Selection</p>
			<ul>
				<p>If 0, 256KHz is selected for the shift clock.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>If 1, 2MHz is selected for the shift clock.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d00] Shift Clock Selection</p>
			<ul>
				<p>If 0, an external clock is used as a shift clock (slave).</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>The external clock is input by the SC terminal from another hardware unit. SD terminal will go to LO output.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>If 1, an internal clock is used as a shift clock (master).</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>The internal clock is output from the SC terminal, and SD terminal will be in the pull-up input status.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p><b>[Note]</b></p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>The shift clock should be selected before the start bit of the SCCNT_L register is set. Extra shift operations may result if the serial transfer is started before or at the same time as the shift clock is selected.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>The SCCNT_L register should not be accessed while its start bit is set.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>The 8 bit transfer mode is compatible in terms of modes with DMG/CGB, but the voltage with the communication terminal varies. Therefore, communication between AGB and DMG/CGB is not possible.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>For normal communication, use of cable is prohibited.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>In order to communicate between AGBs, use the Multi player communication functions discussed later.</p>
			</ul>
		</ul>
		<ul>
			<h3><b><a name="T9"></a>Normal Serial Communication Flow (Example)</b></h3>
		</ul>
		<center>
			<p><img src="Image104.gif" width="463" height="780"></p>
		</center>
		<h2>
		<h2><b><a name="T10"></a>13.2 16-Bit Multi-player Communication</b></h2>
		</h2>
		<ul>
			<p>AGB enables multi-player communication between up to 4 units using a special cable.</p>
			<p>Depending on the connection status, 1 unit is established as the master and transfers data to slaves in order, one after another.</p>
			<h3><b><a name="T11"></a>Connection Status During Multi-player Communication</b></h3>
		</ul>
		<center>
			<p><img src="Image105.gif" width="517" height="108"></p>
		</center>
		<ul>
			<p>In multi-player communication mode the SC and SD become pull-up input terminals. Immediately following a reset or in another communication mode, LO is output from the SD terminal. Once the SD terminal becomes HI, you can tell that all connected terminals have entered multi-player communication mode.</p>
			<p>The SI terminal is in pull-up input, but due to the multi-player communication cable it becomes pull-down. Thus, once all of the terminals are in multi-player mode, the terminal that is LO input to the SI terminal becomes the master. The terminal that is HI input to the SI terminal becomes the slave.</p>
			<p>If you set the start bit of Register SCCNT_L of the master, the data registers SCD0, SCD1, SCD2, and SCD3 of the master are initialized to FFFFh.</p>
			<p>Additionally, the &quot;SYNC signal&quot; (LOW level) is output from the SC terminal. At the same time, the &quot;Start bit&quot; (LO level) is output from the SD terminal. Next, the data from Register SCCNT_H is output and a &quot;&quot;Stop bit&quot; (HI level) is output.</p>
			<p>After this is done, the master makes the SD terminal become pull-up input, and LO is output from the SO terminal.</p>
			<p>Each slave detects the &quot;SYNC Signal&quot; output from the master and initializes all of the data registers (SCD0, SCD1, SCD2, and SCD3) to FFFFh. The data output from the master is stored in the master and each slave&#146;s SCD0 register.</p>
			<p>If LO is input to the SI terminal of the slave which was connected immediately following the master, a &quot;Start bit&quot; (LO level) is output from the SD terminal. Next, data from Register SCCNT_H is output, and lastly a &quot;Stop bit&quot; (HI level) is output.</p>
			<p>After this, the SD terminal goes to pull-up input and LO is output from the SO terminal.</p>
			<p>At this point, the data output from the first slave is stored in the master and each slave's SCD1 Register.</p>
			<p>In this way, each slave is sent and all transmissions are carried out.</p>
			<p>In the following situations the master produces a &quot;SYNC Signal&quot; (pull-up input after the output of a 5 cycle HI interval of source oscillation) and the transmission ends:</p>
			<ul>
				<li>After the master outputs its own &quot;Stop bit&quot;, the next &quot;Start bit&quot; is not input after a certain period of time.
				<li>After a &quot;Stop bit&quot; is received from the first or second slave, a &quot;Start bit&quot; is not input after a certain period of time.
				<li>A &quot;Stop bit&quot; is received from the third slave.
			</ul>
		</ul>
		<ul>
			<p>Once the transmission ends, the received data is stored in each of the data registers (SCD0, SCD1, SCD2, and SCD3). If there is a terminal that is not connected the initial data FFFFh is stored.</p>
			<h3><b><a name="T12"></a>Multi-player Communication Timing Chart</b></h3>
		</ul>
		<center>
			<p><font size="3"><img src="Image106.gif" width="570" height="661"></font></p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T13"></a>Multi Player Communication Cable Connecting Diagram</b></h3>
			</h3>
		</ul>
		<center>
			<p><font size="3"><img src="Image107.gif" width="456" height="117"></font></p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T14"></a>Data Registers</b></h3>
			</h3>
			<ul>
				<p>The data send is stored in the Register SCCNT_H.</p>
			</ul>
		</ul>
		<center>
			<p><img src="Image108.gif" width="570" height="72"></p>
		</center>
		<ul>
			<ul>
				<p>After completion of multi-player communication ends, the send data for the master is in SCD0.</p>
			</ul>
		</ul>
		<center>
			<p><img src="Image109.gif" width="570" height="216"></p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T15"></a>Control Register</b></h3>
			</h3>
			<ul>
				<p>If you set Register SCCNT_L (d13,d12) = (1,0) when Register R (d15) = (0), you will go to 16-bit multi-player communication mode.</p>
			</ul>
		</ul>
		<center>
			<p><img src="Image110.gif" width="570" height="391"></p>
		</center>
		<ul>
			<p>SCCNT_L [d14] Interrupt Request Enable Flag</p>
			<ul>
				<p>When set to 0, no interrupt request is generated.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 1, an interrupt request is generated upon the completion of multi-player communication.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d07] Start Bit/Busy Flag</p>
			<p><b>1)Master (d00 is 1)</b></p>
			<ul>
				<p>When set to 0, no data is transferred.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 1, a data transfer is started. Upon completion of data transfer, it is automatically reset.</p>
			</ul>
		</ul>
		<ul>
			<p><b>2)Slave (d00 is 0)</b></p>
			<ul>
				<p>Set during input of transmit start bit (LO source oscillation cycle &times; 3 (approx. 180ns)), and reset when transfer is complete.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d06] Communication Error Flag</p>
			<ul>
				<p>The communication status can be confirmed.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>If the status for this bit is 0, there is no error. If it is 1, it means an error has occurred.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>This error flag is automatically set in the following situations:</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>- The SI Terminal does not become LO during the interval when the &quot;SYNC signal&quot; is being input (the master is outputting).</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>- The stop bit for the receive data is not HI (Framing Error)</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>However, even if an error occurs, the communication continues, and invalid data is stored in SCD0-SCD3.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d05-d04] Multi-player ID Flag</p>
			<ul>
				<p>When multi-player communication ends, an ID code will be stored which specifies the order that each particular machine was connected.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d03] SD Terminal</p>
			<ul>
				<p>The status of the SD Terminal can be read.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>If all of the connected terminals enter multi-player communication mode, it becomes HI status.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d02] SI Terminal</p>
			<ul>
				<p>The status of the SI Terminal can be read.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When all of the connected terminals are in multi-player communication mode, this shows that the terminal which is LO input to the SI terminal is the master. HI input means that it is a slave.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>Prior to communication starting, it is not possible to determine the number order of a particular slave.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d01-d00] Baud Rate</p>
			<ul>
				<p>Sets the communication baud rate.</p>
			</ul>
		</ul>
		<center>
			<p>
			<table width="169" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="36%" valign="middle" bgcolor="white">
						<center>
							Setting&nbsp;</center>
					</td>
					<td width="64%" valign="middle" bgcolor="white">
						<center>
							Baud Rate&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							00&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							9600 bps&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							01&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							38400 bps&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							10&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							57600 bps&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							11&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							115200 bps&nbsp;</center>
					</td>
				</tr>
			</table>
			</p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T16"></a>Multi-player Communication Flow (Example)</b></h3>
			</h3>
		</ul>
		<center>
			<p><img src="Image111.gif" width="577" height="752"></p>
		</center>
		<h2><b><a name="T17"></a>13.3 UART Communication Functions</b></h2>
		<ul>
			<p>UART communications can be illustrated using the following drawing.</p>
		</ul>
		<center>
			<p><img src="Image112.gif" width="212" height="79"></p>
		</center>
		<ul>
			<p>In UART communication mode, a HI level is output from the SD terminal.</p>
			<p>When the receive data register (or the receive FIFO) is full, a HI is output from the SD terminal. When it is not full, a LO is output from the SD terminal if the receive enable flag is set. A HI is output if it is reset.</p>
			<p>The output of the SD terminal of the other machine is input to the SC terminal.</p>
			<p>Once data is written to the send data register, data is sent after a &quot;Start bit&quot; (1 bit) is sent from the SO terminal. However, when the CTS flag for the Control Register is set, data can be sent only when there is a LO input to the SC terminal. The Stop bit is a fixed 1 bit.</p>
			<p>When sending or receiving, there are 4 bytes of FIFO. By using the FIFO enable flag for the control register SCCNT_L, you can select whether to use or not use FIFO.</p>
			<p><b>If you are not using FIFO</b>, when you write to Register SCCNT_H, data is written to the send data register. When a read is done, data is read from the receive data register. (Only the lower 8 bits are valid.)</p>
			<p><b>If you are using FIFO, </b>when you write to Register SCCNT_H, data is written to the send data FIFO. When a read is done, data is read from the receive FIFO. (Only the lower 8 bits are valid.)</p>
		</ul>
		<ul>
			<h3>
			<h3><b><a name="T18"></a>Data Register</b></h3>
			</h3>
		</ul>
		<center>
			<p><font size="3"><img src="Image113.gif" width="572" height="85"></font></p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T19"></a>Control Register</b></h3>
			</h3>
			<p>If Register SCCNT_L (d13,d12) = (1,1) is set when Register R (d15) = (0), you will go to UART communication mode.</p>
		</ul>
		<center>
			<p><img src="Image114.gif" width="575" height="721"></p>
		</center>
		<ul>
			<p>SCCNT_L [d14] Interrupt Request Enable Flag</p>
			<ul>
				<p>When set to 0, an interrupt request is not generated.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 1, an interrupt request is generated when a communication error occurs and when the transmission(send/receive) ends.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d11] Receive Enable Flag</p>
			<ul>
				<p>Controls the receive enable/disable.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>If the receive enable flag is set when the receive data register (or the receive FIFO) is not full, a LO is output from the SD terminal, and a HI is output if it is reset.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p><u>You must first set the receive enable flag and send enable flag to 0 [Disable] before going from UART communication mode to a different communication mode.</u></p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d10] Send Enable Flag</p>
			<ul>
				<p>Controls the send enable/disable.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p><u>You must first set the receive enable flag and send enable flag to 0 [Disable] before going from UART communication mode to a different communication mode.</u></p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d09] Parity Enable Flag</p>
			<ul>
				<p>Controls the parity enable/disable.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d08] FIFO Enable Flag</p>
			<ul>
				<p>Controls the send of the 8 bit wide &times; 4 depth and the receive FIFO enable/disable.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p><u>When using FIFO, first you need to go into UART mode in a status of 0 [FIFO Disable]. By disabling FIFO in UART mode the FIFO sequencer is initialized.</u></p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d07] Data Length</p>
			<ul>
				<p>Select data length as 8 bits or 7 bits.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d06] Error Flag</p>
			<ul>
				<p>By referring to this error flag, the status of communication errors can be determined.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When it is 0, no errors have occurred. When it is set to 1, an error has occurred. By reading Register SCCNT_L, this error flag is reset.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>Additionally, when there has been an error, the data from the Receive Shift Register is not written to the Receive Data Register. The conditions associated with each error are described below.</p>
			</ul>
		</ul>
		<center>
			<p>
			<table width="497" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="27%" valign="top">Framing Error&nbsp;</td>
					<td width="73%" valign="top">The receive data stop bit is not 0&nbsp;</td>
				</tr>
				<tr>
					<td width="27%" valign="top">Parity Error&nbsp;</td>
					<td width="73%" valign="top">When parity is enabled, there is an error in the parity for the receive data &nbsp;</td>
				</tr>
				<tr>
					<td width="27%" valign="top">Overrun Error&nbsp;</td>
					<td width="73%" valign="top">The following receive ends(a stop bit is detected) when the receive data is in a status of not empty. &nbsp;</td>
				</tr>
			</table>
			</p>
		</center>
		<ul>
			<p>SCCNT_L [d05] Receive Data Flag</p>
			<ul>
				<p>When set to 0, there is still data present.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 1, it is empty.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d04] Send Data Flag</p>
			<ul>
				<p>When set to 0, it is not full.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>After one send operation ends this is reset.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 1, it is full.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>Set during a write of data to the lower 8 bits of the Send Data Register SCCNT_H.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d03] Parity Control</p>
			<ul>
				<p>Switches between even parity and odd parity.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d02] CTS Flag</p>
			<ul>
				<p>The SD terminal of the other machine (receive enable/disable) is input to the SC terminal.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 0, a send is always possible independent of the SC Terminal.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 1, a send is only possible when a LO is being input to the SC Terminal.</p>
			</ul>
		</ul>
		<ul>
			<p>SCCNT_L [d01-d00] Baud Rate</p>
			<ul>
				<p>Sets communication baud rate.</p>
			</ul>
		</ul>
		<center>
			<p>
			<table width="169" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="36%" valign="middle" bgcolor="white">
						<center>
							Setting&nbsp;</center>
					</td>
					<td width="64%" valign="middle" bgcolor="white">
						<center>
							Baud Rate&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							00&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							9600 bps&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							01&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							38400 bps&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							10&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							57600 bps&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="36%" valign="middle">
						<center>
							11&nbsp;</center>
					</td>
					<td width="64%" valign="middle">
						<center>
							115200 bps&nbsp;</center>
					</td>
				</tr>
			</table>
			</p>
		</center>
		<h2>
		<h2><b><a name="T20"></a>13.4 General Purpose Communication</b></h2>
		</h2>
		<ul>
			<p>Setting (d13, d12) = (1, 0) initiates the general purpose communication mode.</p>
			<p>In this mode, all of the terminals SI, SO, SC, and SD become pull-up and operate as general purpose input/output terminals. Each of the communication terminals SI, SO, SC, and SD can be directly controlled.</p>
		</ul>
		<center>
			<p><img src="Image115.gif" width="570" height="204"></p>
		</center>
		<ul>
			<p>R [d15-d14] Communication Function Set Flag</p>
			<ul>
				<p>When set to 00 or 01, operates as a serial communication(8-bit/16-bit serial communication, multi-player communication, UART communication function) terminal.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 10, can be used as a general purpose input/output terminal.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 11, can be used as a JOY Bus communication terminal.</p>
			</ul>
		</ul>
		<ul>
			<p>R [d08] Interrupt Request Enable Flag</p>
			<ul>
				<p>When general purpose input/output is set(R[d15,d14]=[1,0]) with the communication function set flag, a 1 causes an interrupt request to be generated with the falling of the SI Terminal(edge detect).</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 0, no interrupt request is generated.</p>
			</ul>
		</ul>
		<ul>
			<p>R [d07-d04] Input/Output Selection Flag</p>
			<ul>
				<p>When general purpose input/output is set(R[d15,d14]=[1,0]) with the communication function set flag, a setting of 0 allows the corresponding terminal to be used as an input terminal. A setting of 1 allows the corresponding terminal to be used as an output terminal.</p>
			</ul>
		</ul>
		<ul>
			<p>R [d03-d00] Data Bit</p>
			<ul>
				<p>When the corresponding terminal is set for input, the status(HI/LO) of the terminal can be confirmed. If the corresponding terminal is set for output, the status of the set bit is output.</p>
			</ul>
		</ul>
		<h2>
		<h2><b><a name="T21"></a>13.5 JOY Bus Communication</b></h2>
		</h2>
		<ul>
			<p>By setting the communication function set flag to 11 for Register R, JOY Bus communication mode is selected. In JOY Bus communication mode, the SI Terminal is for input, and SO Terminal is for output. SD and SC Terminals go to LO output.</p>
		</ul>
		<center>
			<p><img src="Image116.gif" width="570" height="95"></p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T22"></a>JOY Bus Communication Control</b></h3>
			</h3>
		</ul>
		<center>
			<p><img src="Image117.gif" width="570" height="209"></p>
		</center>
		<ul>
			<p>HS_CRTL [d05] Interrupt Request Enable Flag</p>
			<ul>
				<p>When set to 0, an interrupt request is not generated.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When set to 1, an interrupt request is generated once a device reset command is received.</p>
			</ul>
		</ul>
		<ul>
			<p>HS_CRTL [d02] Send Complete Flag</p>
			<ul>
				<p>Set upon completion of send operation.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When this is set, if you write a 1, a reset can be done.</p>
			</ul>
		</ul>
		<ul>
			<p>HS_CRTL [d01] Receive Complete Flag</p>
			<ul>
				<p>Set upon completion of receive operation.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When this is set, if you write a 1, a reset can be done.</p>
			</ul>
		</ul>
		<ul>
			<p>HS_CRTL [d00] Device Reset Signal Receive Flag</p>
			<ul>
				<p>Set when a device reset command is received.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>When this is set, if you write a 1, a reset can be done.</p>
			</ul>
		</ul>
		<ul>
			<h3>
			<h3><b><a name="T23"></a>Receive Data Register</b></h3>
			</h3>
		</ul>
		<center>
			<p><img src="Image118.gif" width="572" height="102"></p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T24"></a>Send Data Register</b></h3>
			</h3>
		</ul>
		<center>
			<p><img src="Image119.gif" width="570" height="103"></p>
		</center>
		<ul>
			<h3>
			<h3><b><a name="T25"></a>Receive Status Register</b></h3>
			</h3>
			<p>The lower 8-bits of the receive status register JSTAT is returned as the communication status.</p>
		</ul>
		<center>
			<p><img src="Image120.gif" width="570" height="171"></p>
		</center>
		<ul>
			<p>JSTAT [d05,d04] General Purpose Flag</p>
			<ul>
				<p>This flag is not assigned.</p>
			</ul>
		</ul>
		<ul>
			<ul>
				<p>The user can set the use of this flag arbitrarily.</p>
			</ul>
		</ul>
		<ul>
			<p>JSTAT [d03] Send Status Flag</p>
			<ul>
				<p>When an AGB write data signal is received, this is set. If a word read is done with the JOYRE Register it is reset.</p>
			</ul>
		</ul>
		<ul>
			<p>JSTAT [d01] Receive Status Flag</p>
			<ul>
				<p>When a word write is done with the JOYTR Register, this is set. If an AGB read data signal is received it is reset.</p>
			</ul>
		</ul>
		<ul>
			<h3>
			<h3><b><a name="T26"></a>JOY Bus Communication Operations</b></h3>
			</h3>
			<p>AGB JOY Bus communication recognizes four commands sent from the host (N64, etc.): [Device Reset], [Type/Status Data Request], [AGB Data Write], and [AGB Data Read]. AGB operates based on the particular signal received.</p>
			<p>The transfer of the bit data for JOY Bus communication is done in units of bytes and in the order of MSB first.</p>
		</ul>
		<ul>
			<li>
			<h3>
			<h3><b><a name="T27"></a>[Device Reset] Command(FFh) Received</b></h3>
			</h3>
			<p>The device reset signal receive flag for Register HS_CTRL is set.</p>
			<p>If the interrupt request enable flag for the same register is also set, a JOY Bus interrupt request is generated.</p>
		</ul>
		<center>
			<p>
			<table width="533" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="11%" valign="middle" bgcolor="white">
						<center>
							Direction&nbsp;</center>
					</td>
					<td width="8%" valign="middle" bgcolor="white">
						<center>
							Order&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d7&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d6&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d5&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d4&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d3&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d2&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d1&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d0&nbsp;</center>
					</td>
					<td width="23%" valign="middle" bgcolor="white">
						<center>
							Remarks&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="11%" valign="middle">
						<center>
							Receive&nbsp;</center>
					</td>
					<td width="8%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="23%" valign="middle">
						<center>
							Command 255(FFh)&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="11%" valign="middle" rowspan="3">
						<center>
							Send&nbsp;</center>
					</td>
					<td width="8%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="23%" valign="middle" rowspan="2">
						<center>
							Type Number</center>
						<center>
							<p>0400h&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="8%" valign="middle">
						<center>
							2&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
				</tr>
				<tr height="16">
					<td width="8%" valign="middle" height="16">
						<center>
							3&nbsp;</center>
					</td>
					<td valign="middle" colspan="8" height="16">
						<center>
							Lower 8 bits of Register JSTAT&nbsp;</center>
					</td>
					<td width="23%" valign="middle" height="16">
						<center>
							Communication Status&nbsp;</center>
					</td>
				</tr>
			</table>
			</p>
		</center>
		<ul>
			<li>
			<h3>
			<h3><b><a name="T28"></a>[Type/Status Data Request] Command(00h) Received</b></h3>
			</h3>
			<p>Returns 2 byte type number(0004h) and 1 byte communication status.</p>
		</ul>
		<center>
			<p>
			<table width="533" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="9%" valign="middle" bgcolor="white">
						<center>
							Direction&nbsp;</center>
					</td>
					<td width="9%" valign="middle" bgcolor="white">
						<center>
							Order&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d7&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d6&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d5&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d4&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d3&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d2&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d1&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d0&nbsp;</center>
					</td>
					<td width="23%" valign="middle" bgcolor="white">
						<center>
							Remarks&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							Receive&nbsp;</center>
					</td>
					<td width="9%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="23%" valign="middle">
						<center>
							Command 0(00h)&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle" rowspan="3">
						<center>
							Send&nbsp;</center>
					</td>
					<td width="9%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="23%" valign="middle" rowspan="2">
						<center>
							Type Number</center>
						<center>
							<p>0400h&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							2&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
				</tr>
				<tr height="16">
					<td width="9%" valign="middle" height="16">
						<center>
							3&nbsp;</center>
					</td>
					<td valign="middle" colspan="8" height="16">
						<center>
							Lower 8 bits of Register JSTAT&nbsp;</center>
					</td>
					<td width="23%" valign="middle" height="16">
						<center>
							Communication Status&nbsp;</center>
					</td>
				</tr>
			</table>
			</p>
		</center>
		<ul>
			<li>
			<h3>
			<h3><b><a name="T29"></a>[AGB Data Write] Command(15h) Received</b></h3>
			</h3>
			<p>Receives the 4 bytes of data sent following this command, and stores them in Register JOYRE. Once the receive is completed a 1 byte communication status is returned, and the receive complete flag for Register HS_CTRL is set. Also, if the interrupt request enable flag for the same register is set, a JOY Bus interrupt request is generated.</p>
		</ul>
		<center>
			<p>
			<table width="533" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="9%" valign="middle" bgcolor="white">
						<center>
							Direction&nbsp;</center>
					</td>
					<td width="9%" valign="middle" bgcolor="white">
						<center>
							Order&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d7&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d6&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d5&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d4&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d3&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d2&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d1&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d0&nbsp;</center>
					</td>
					<td width="23%" valign="middle" bgcolor="white">
						<center>
							Remarks&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							Receive&nbsp;</center>
					</td>
					<td width="9%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="23%" valign="middle">
						<center>
							Command 21(15h)&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle" rowspan="4">
						<center>
							Receive&nbsp;</center>
					</td>
					<td width="9%" valign="middle">
						<center>
							2&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Lower 8 bits of receive data Register JOYRE_L&nbsp;</center>
					</td>
					<td width="23%" valign="middle" rowspan="4">
						<center>
							Receive Data&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							3&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Upper 8 bits of receive data Register JOYRE_L&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							4&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Lower 8 bits of receive data Register JOYRE_H&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							5&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Upper 8 bits of receive data Register JOYRE_H&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							Send&nbsp;</center>
					</td>
					<td width="9%" valign="middle">
						<center>
							6&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Lower 8 bits of Register JSTAT&nbsp;</center>
					</td>
					<td width="23%" valign="middle">
						<center>
							Communication Status&nbsp;</center>
					</td>
				</tr>
			</table>
			</p>
		</center>
		<ul>
			<li>
			<h3>
			<h3><b><a name="T30"></a>[AGB Data Read] Command(14h) Received</b></h3>
			</h3>
			<p>4 bytes of data stored in Register JOYTR and the 1 byte communication status are sent, and the send complete flag for Register HS_CTRL is set.</p>
			<p>Also, if the interrupt request enable flag for the same register is set, a JOY Bus interrupt request is generated.</p>
		</ul>
		<center>
			<p>
			<table width="533" border="1" cellspacing="0" cellpadding="3">
				<tr>
					<td width="9%" valign="middle" bgcolor="white">
						<center>
							Direction&nbsp;</center>
					</td>
					<td width="9%" valign="middle" bgcolor="white">
						<center>
							Order&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d7&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d6&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d5&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d4&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d3&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d2&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d1&nbsp;</center>
					</td>
					<td width="7%" valign="middle" bgcolor="white">
						<center>
							d0&nbsp;</center>
					</td>
					<td width="23%" valign="middle" bgcolor="white">
						<center>
							Remarks&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							Receive&nbsp;</center>
					</td>
					<td width="9%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							1&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="7%" valign="middle">
						<center>
							0&nbsp;</center>
					</td>
					<td width="23%" valign="middle">
						<center>
							Command 20(14h)&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle" rowspan="5">
						<center>
							Send&nbsp;</center>
					</td>
					<td width="9%" valign="middle">
						<center>
							2&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Lower 8 bits of send data Register JOYTR_L&nbsp;</center>
					</td>
					<td width="23%" valign="middle" rowspan="4">
						<center>
							Send Data&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							3&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Upper 8 bits of send data Register JOYTR_L&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							4&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Lower 8 bits of send data Register JOYTR_H&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							5&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Upper 8 bits of send data Register JOYTR_H&nbsp;</center>
					</td>
				</tr>
				<tr>
					<td width="9%" valign="middle">
						<center>
							6&nbsp;</center>
					</td>
					<td valign="middle" colspan="8">
						<center>
							Lower 8 bits of Register JSTAT&nbsp;</center>
					</td>
					<td width="23%" valign="middle">
						<center>
							Communication Status&nbsp;</center>
					</td>
				</tr>
			</table>
			</p>
		</center>
		<h2>
		<h2><b><a name="T31"></a>13.6 Communication Cable</b></h2>
		</h2>
		<ul>
			<p>When communicating between AGB units, the communication cable to be used will vary depending upon the type of Game Pak used.</p>
		</ul>
		<center>
			<p><font size="3"><img src="Image121.gif" width="571" height="757"></font></center>
	</body>

</html>
