Archive member included       because of file (symbol)

../../../lib/libagbsyscall.a(AgbSyscall.o)
                              main.o (DivRem)

Allocating common symbols
Common symbol       size              file

Cont                0x4               main.o
Trg                 0x4               main.o
IntrMainBuf         0x800             main.o
OamBak              0x400             main.o
BgBak               0x800             main.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD crt0.o
LOAD main.o
LOAD data.o
LOAD ../../../lib/libagbsyscall.a
LOAD ../../../lib/libisagbprn.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/libgcc.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/../../../../thumb-elf/lib/libg.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/../../../../thumb-elf/lib/libc.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/libgcc.a
Address of section .text set to 0x8000000
Address of section .bss set to 0x3000000
                0x00008000                .=0x8000

.interp
 *(.interp)

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.init
 *(.init)

.plt
 *(.plt)

.text           0x08000000      0x634
 *(.text)
 .text          0x08000000      0x224 crt0.o
                0x08000000                _start
                0x080000c0                start_vector
                0x080000fc                intr_main
 .text          0x08000224      0x350 main.o
                0x080004b4                IntrDummy
                0x08000448                VBlankIntr
                0x08000488                KeyRead
                0x080004b8                ObjSnakeMove
                0x08000224                AgbMain
 .text          0x08000574       0xc0 ../../../lib/libagbsyscall.a(AgbSyscall.o)
                0x080005be                BitUnPack
                0x080005e2                SoundBiasChange
                0x080005aa                ArcTan2
                0x080005d6                Diff8bitUnFilterWram
                0x08000612                MusicPlayerOpen
                0x080005de                Diff16bitUnFilter
                0x08000606                SoundDriverVSyncOff
                0x080005f6                SoundDriverMode
                0x0800061a                MusicPlayerStop
                0x08000574                SoftReset
                0x080005da                Diff8bitUnFilterVram
                0x080005f2                SoundDriverInit
                0x080005d2                RLUnCompVram
                0x080005ec                SoundBiasReset
                0x080005ba                ObjAffineSet
                0x080005b2                CpuFastSet
                0x0800060e                MidiKey2Freq
                0x08000616                MusicPlayerStart
                0x08000588                IntrWait
                0x0800059c                DivRemArm
                0x080005ce                RLUnCompWram
                0x08000596                DivRem
                0x080005a6                ArcTan
                0x08000584                RegisterRamReset
                0x0800061e                MusicPlayerContinue
                0x080005b6                BgAffineSet
                0x08000602                SoundChannelClear
                0x080005e6                SoundBiasSet
                0x0800060a                SoundDriverVSyncOn
                0x0800058e                Div
                0x080005fe                SoundDriverVSync
                0x08000622                MusicPlayerFadeOut
                0x080005c2                LZ77UnCompWram
                0x080005fa                SoundDriverMain
                0x08000626                MultiBoot
                0x080005ae                CpuSet
                0x08000592                DivArm
                0x080005ca                HuffUnComp
                0x080005a2                Sqrt
                0x080005c6                LZ77UnCompVram
 *(.text.*)
 *(.stub)
 *(.gnu.warning)
 *(.gnu.linkonce.t*)
 *(.glue_7t)
 *(.glue_7)
                0x08000634                _etext=.
                0x08000634                PROVIDE (etext, .)

.fini
 *(.fini)

.rodata         0x08000634     0x2340
 *(.rodata)
 .rodata        0x08000634       0x38 main.o
                0x08000634                IntrTable
 .rodata        0x0800066c     0x2308 data.o
                0x08000b6c                OamData_Sample
                0x08000b74                PlttData_Sample
                0x08000d74                CharData_Sample
                0x0800066c                BgScData_Sample
 *(.rodata.*)
 *(.gnu.linkonce.r*)

.rodata1
 *(.rodata1)
                0x08002a74                .=(ALIGN(0x100)+(.&0xff))

.data           0x08002a74        0x0
 *(.data)
 *(.data.*)
 *(.gnu.linkonce.d*)

.data1
 *(.data1)

.ctors
 EXCLUDE_FILE ( *crtend.o )*(.ctors)
 *(SORT(.ctors.*))
 *crtend(.ctors)

.dtors
 EXCLUDE_FILE ( *crtend.o )*(.dtors)
 *(SORT(.dtors.*))
 *crtend.o(.dtors)

.got
 *(.got.plt)
 *(.got)

.dynamic
 *(.dynamic)

.sdata
 *(.sdata)
 *(.sdata.*)
                0x08002a74                _edata=.
                0x08002a74                PROVIDE (edata, .)
                0x08002a74                __bss_start=.
                0x08002a74                __bss_start__=.

.sbss
 *(.sbss)
 *(.scommon)

.bss            0x03000000     0x1410
 *(.dynbss)
 *(.bss)
 *(.bss.*)
 *(COMMON)
 COMMON         0x03000000     0x1410 main.o
                                  0x0 (size before relaxing)
                0x03000000                Cont
                0x03000004                Trg
                0x03000010                IntrMainBuf
                0x03000810                OamBak
                0x03000c10                BgBak
                0x03001410                .=ALIGN(0x4)
                0x03001410                .=ALIGN(0x4)
                0x03001410                _end=.
                0x03001410                _bss_end__=.
                0x03001410                __bss_end__=.
                0x03001410                PROVIDE (end, .)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o

.debug_pubnames
                0x00000000       0xfd
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x9c main.o
 .debug_pubnames
                0x0000009c       0x61 data.o

.debug_info     0x00000000     0x5d33
 *(.debug_info)
 .debug_info    0x00000000     0x3034 main.o
 .debug_info    0x00003034     0x2cff data.o

.debug_abbrev   0x00000000      0x265
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x16b main.o
 .debug_abbrev  0x0000016b       0xfa data.o

.debug_line     0x00000000      0x280
 *(.debug_line)
 .debug_line    0x00000000      0x280 main.o

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x00080000        0x0
                0x00080000                _stack=.
 *(.stack)
OUTPUT(reintr.elf elf32-littlearm)
