Archive member included       because of file (symbol)

../../../lib/libagbsyscall.a(AgbSyscall.o)
                              objmove.o (DivRem)

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD crt0.o
LOAD main.o
LOAD sub.o
LOAD title.o
LOAD objmove.o
LOAD bgmove.o
LOAD data.o
LOAD ../../../lib/libagbsyscall.a
LOAD ../../../lib/libisagbprn.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/libgcc.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/../../../../thumb-elf/lib/libg.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/../../../../thumb-elf/lib/libc.a
LOAD C:\PROGRA~1\CYGNUS\THUMBELF-000512\H-I686-CYGWIN32\BIN/../lib/gcc-lib/thumb-elf/2.9-arm-000512/libgcc.a
                0x00008000                .=0x8000

.interp
 *(.interp)

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.init
 *(.init)

.plt
 *(.plt)

.text           0x08000000      0xa2c
 *(.text)
 .text          0x08000000      0x1d4 crt0.o
                0x08000000                _start
                0x080000c0                start_vector
                0x080000fc                intr_main
 .text          0x080001d4      0x130 main.o
                0x080001d4                AgbMain
 .text          0x08000304       0xd0 sub.o
                0x08000304                IntrDummy
                0x08000308                KeyRead
                0x08000334                ObjCursolMove
 .text          0x080003d4      0x128 title.o
                0x080004c8                TitleVBlankIntr
                0x080003d4                Title
 .text          0x080004fc      0x28c objmove.o
                0x080006bc                ObjMoveVBlankIntr
                0x080004fc                ObjMove
                0x080006dc                ObjSnakeMove
 .text          0x08000788      0x1e4 bgmove.o
                0x08000788                BgMove
                0x080008e4                BgMoveVBlankIntr
                0x08000904                BgSnakeMove
 .text          0x0800096c       0xc0 ../../../lib/libagbsyscall.a(AgbSyscall.o)
                0x080009b6                BitUnPack
                0x080009da                SoundBiasChange
                0x080009a2                ArcTan2
                0x080009ce                Diff8bitUnFilterWram
                0x08000a0a                MusicPlayerOpen
                0x080009d6                Diff16bitUnFilter
                0x080009fe                SoundDriverVSyncOff
                0x080009ee                SoundDriverMode
                0x08000a12                MusicPlayerStop
                0x0800096c                SoftReset
                0x080009d2                Diff8bitUnFilterVram
                0x080009ea                SoundDriverInit
                0x080009ca                RLUnCompVram
                0x080009e4                SoundBiasReset
                0x080009b2                ObjAffineSet
                0x080009aa                CpuFastSet
                0x08000a06                MidiKey2Freq
                0x08000a0e                MusicPlayerStart
                0x08000980                IntrWait
                0x08000994                DivRemArm
                0x080009c6                RLUnCompWram
                0x0800098e                DivRem
                0x0800099e                ArcTan
                0x0800097c                RegisterRamReset
                0x08000a16                MusicPlayerContinue
                0x080009ae                BgAffineSet
                0x080009fa                SoundChannelClear
                0x080009de                SoundBiasSet
                0x08000a02                SoundDriverVSyncOn
                0x08000986                Div
                0x080009f6                SoundDriverVSync
                0x08000a1a                MusicPlayerFadeOut
                0x080009ba                LZ77UnCompWram
                0x080009f2                SoundDriverMain
                0x08000a1e                MultiBoot
                0x080009a6                CpuSet
                0x0800098a                DivArm
                0x080009c2                HuffUnComp
                0x0800099a                Sqrt
                0x080009be                LZ77UnCompVram
 *(.text.*)
 *(.stub)
 *(.gnu.warning)
 *(.gnu.linkonce.t*)
 *(.glue_7t)
 *(.glue_7)
                0x08000a2c                _etext=.
                0x08000a2c                PROVIDE (etext, .)

.fini
 *(.fini)

.rodata         0x08000a2c     0x3cc0
 *(.rodata)
 .rodata        0x08000a2c       0x38 title.o
                0x08000a2c                TitleIntrTable
 .rodata        0x08000a64       0x38 objmove.o
                0x08000a64                ObjMoveIntrTable
 .rodata        0x08000a9c       0x38 bgmove.o
                0x08000a9c                BgMoveIntrTable
 .rodata        0x08000ad4     0x3c18 data.o
                0x08000ad4                LinkData_Title
                0x08000cec                BgScData_Title
                0x080011ec                BgScData_ObjMove
                0x080020ec                BgScData_BgMove2
                0x080016ec                BgScData_BgMove0
                0x08000ce4                OamData_Sample
                0x08000ae4                PlttData_Sample
                0x08002aec                CharData_Sample
                0x080025ec                BgScData_BgMove3
                0x08001bec                BgScData_BgMove1
 *(.rodata.*)
 *(.gnu.linkonce.r*)

.rodata1
 *(.rodata1)
                0x080046ec                .=ALIGN(0x4)
                0x080046ec                __load_start_data=.

.data           0x02000000       0x10 load address 0x080046ec
 *(.data)
 .data          0x02000000       0x10 main.o
                0x02000000                DataSecDummy
 *(.data.*)
 *(.gnu.linkonce.d*)
                0x080046fc                __load_stop_data=(LOADADDR(.data)+SIZEOF(.data))

.data1
 *(.data1)

.ctors
 EXCLUDE_FILE ( *crtend.o )*(.ctors)
 *(SORT(.ctors.*))
 *crtend(.ctors)

.dtors
 EXCLUDE_FILE ( *crtend.o )*(.dtors)
 *(SORT(.dtors.*))
 *crtend.o(.dtors)

.got
 *(.got.plt)
 *(.got)

.dynamic
 *(.dynamic)

.sdata
 *(.sdata)
 *(.sdata.*)
                0x02000010                _edata=.
                0x02000010                PROVIDE (edata, .)
                0x02000010                __bss_start=.
                0x02000010                __bss_start__=.

.sbss
 *(.sbss)
 *(.scommon)

.bss0           0x03000000      0xc04
 title.o(.bss)
 .bss           0x03000000      0xc04 title.o
                0x03000800                TitleOamBak
                0x03000000                TitleBgBak
                0x03000c00                Cursolp
                0x03000000                __load_start_bss0=LOADADDR(.bss0)
                0x03000c04                __load_stop_bss0=(LOADADDR(.bss0)+SIZEOF(.bss0))

.bss1           0x03000000      0xc00 load address 0x03000c04
 objmove.o(.bss)
 .bss           0x03000000      0xc00 objmove.o
                0x03000400                ObjMoveBgBak
                0x03000000                ObjMoveOamBak
                0x03000c04                __load_start_bss1=LOADADDR(.bss1)
                0x03001804                __load_stop_bss1=(LOADADDR(.bss1)+SIZEOF(.bss1))

.bss2           0x03000000     0x2010 load address 0x03001804
 bgmove.o(.bss)
 .bss           0x03000000     0x2010 bgmove.o
                0x03000000                BgMoveOffsetBak
                0x03000010                BgMoveBgBak
                0x03001804                __load_start_bss2=LOADADDR(.bss2)
                0x03003814                __load_stop_bss2=(LOADADDR(.bss2)+SIZEOF(.bss2))
                0x03002010                .=(ADDR(.bss0)+((SIZEOF(.bss0)7SIZEOF(.bss1))7SIZEOF(.bss2)))
                0x03002010                .=ALIGN(0x4)

.bss            0x03002010      0x844 load address 0x03003814
 *(.dynbss)
 *(.bss)
 .bss           0x03002010      0x844 main.o
                0x03002018                IntrTableBuf
                0x03002012                Cont
                0x03002014                Trg
                0x03002010                SceneNo
                0x03002054                IntrMainBuf
 *(.bss.*)
 *(COMMON)
                0x03002854                .=ALIGN(0x4)
                0x03002854                .=ALIGN(0x4)
                0x03002854                _end=.
                0x03002854                _bss_end__=.
                0x03002854                __bss_end__=.
                0x03002854                PROVIDE (end, .)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 sub.o
 .debug_aranges
                0x00000040       0x20 title.o
 .debug_aranges
                0x00000060       0x20 objmove.o
 .debug_aranges
                0x00000080       0x20 bgmove.o

.debug_pubnames
                0x00000000      0x2ec
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x6d main.o
 .debug_pubnames
                0x0000006d       0x3e sub.o
 .debug_pubnames
                0x000000ab       0x6e title.o
 .debug_pubnames
                0x00000119       0x7d objmove.o
 .debug_pubnames
                0x00000196       0x7a bgmove.o
 .debug_pubnames
                0x00000210       0xdc data.o

.debug_info     0x00000000    0x11b05
 *(.debug_info)
 .debug_info    0x00000000     0x2f80 main.o
 .debug_info    0x00002f80     0x2dcf sub.o
 .debug_info    0x00005d4f     0x2f76 title.o
 .debug_info    0x00008cc5     0x2f72 objmove.o
 .debug_info    0x0000bc37     0x3064 bgmove.o
 .debug_info    0x0000ec9b     0x2e6a data.o

.debug_abbrev   0x00000000      0x7fd
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x14f main.o
 .debug_abbrev  0x0000014f      0x157 sub.o
 .debug_abbrev  0x000002a6      0x178 title.o
 .debug_abbrev  0x0000041e      0x16f objmove.o
 .debug_abbrev  0x0000058d      0x16f bgmove.o
 .debug_abbrev  0x000006fc      0x101 data.o

.debug_line     0x00000000      0x85e
 *(.debug_line)
 .debug_line    0x00000000      0x17b main.o
 .debug_line    0x0000017b      0x14a sub.o
 .debug_line    0x000002c5      0x174 title.o
 .debug_line    0x00000439      0x218 objmove.o
 .debug_line    0x00000651      0x20d bgmove.o

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x00080000        0x0
                0x00080000                _stack=.
 *(.stack)
Address of section .text set to 0x8000000
OUTPUT(overlay.elf elf32-littlearm)
