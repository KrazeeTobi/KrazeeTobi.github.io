
Allocating common symbols
Common symbol       size              file

Cont                0x4               main.o
Trg                 0x4               main.o
IntrMainBuf         0x800             main.o
OamBak              0x400             main.o
BgBak               0x800             main.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD crt0.o
LOAD main.o
LOAD data.o
LOAD Ld937728.o
LOAD ../../../lib/libagbsyscall.a
LOAD ../../../lib/libisagbprn.a
LOAD C:/PROGRA~1/Cygnus/thumbelf-981216/H-i586-cygwin32/lib/gcc-lib/thumb-elf/2.9-armelf-981216//libgcc.a
LOAD C:/PROGRA~1/Cygnus/thumbelf-981216/H-i586-cygwin32/thumb-elf/lib//libg.a
LOAD C:/PROGRA~1/Cygnus/thumbelf-981216/H-i586-cygwin32/thumb-elf/lib//libc.a
LOAD C:/PROGRA~1/Cygnus/thumbelf-981216/H-i586-cygwin32/lib/gcc-lib/thumb-elf/2.9-armelf-981216//libgcc.a
Address of section .text set to 0x8000000
Address of section .bss set to 0x2000000
                0x00008000                .=0x8000

.interp
 *(.interp)

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.init
 *(.init)

.plt
 *(.plt)

.text           0x08000000      0x404
 *(.text)
 .text          0x08000000      0x1d0 crt0.o
                0x08000000                _start
                0x080000c0                start_vector
                0x080000fc                intr_main
 .text          0x080001d0      0x234 main.o
                0x080002ec                IntrDummy
                0x080002ac                VBlankIntr
                0x080002f0                KeyRead
                0x08000378                FontDisplay
                0x080001d0                AgbMain
                0x0800031c                FontSpread
 *(.text.*)
 *(.stub)
 *(.gnu.warning)
 *(.gnu.linkonce.t*)
 *(.glue_7t)
 *(.glue_7)
                0x08000404                _etext=.
                0x08000404                PROVIDE (etext, .)

.fini
 *(.fini)

.rodata         0x08000404      0x738
 *(.rodata)
 .rodata        0x08000404       0x38 main.o
                0x08000404                IntrTable
 .rodata        0x0800043c      0x700 data.o
                0x0800093c                PlttData_Sample
                0x0800043c                BgScData_Sample
 *(.rodata.*)
 *(.gnu.linkonce.r*)

.rodata1
 *(.rodata1)
                0x08000c3c                .=(ALIGN(0x100)+(.&0xff))

.data           0x08000c3c    0x11e68
 *(.data)
 .data          0x08000c3c    0x11e68 Ld937728.o
                0x08012aa4                _binary_Ld937728_dat_end
                0x08000c3c                _binary_Ld937728_dat_start
 *(.data.*)
 *(.gnu.linkonce.d*)

.data1
 *(.data1)

.ctors
 EXCLUDE_FILE ( *crtend.o )*(.ctors)
 *(SORT(.ctors.*))
 *crtend(.ctors)

.dtors
 EXCLUDE_FILE ( *crtend.o )*(.dtors)
 *(SORT(.dtors.*))
 *crtend.o(.dtors)

.got
 *(.got.plt)
 *(.got)

.dynamic
 *(.dynamic)

.sdata
 *(.sdata)
 *(.sdata.*)
                0x08012aa4                _edata=.
                0x08012aa4                PROVIDE (edata, .)
                0x08012aa4                __bss_start=.
                0x08012aa4                __bss_start__=.

.sbss
 *(.sbss)
 *(.scommon)

.bss            0x02000000     0x1420
 *(.dynbss)
 *(.bss)
 .bss           0x02000000        0x4 main.o
 *(.bss.*)
 *(COMMON)
 *fill*         0x02000004        0xc
 COMMON         0x02000010     0x1410 main.o
                                  0x0 (size before relaxing)
                0x02000010                Cont
                0x02000014                Trg
                0x02000020                IntrMainBuf
                0x02000820                OamBak
                0x02000c20                BgBak
                0x02001420                .=ALIGN(0x4)
                0x02001420                .=ALIGN(0x4)
                0x02001420                _end=.
                0x02001420                _bss_end__=.
                0x02001420                __bss_end__=.
                0x02001420                PROVIDE (end, .)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o

.debug_pubnames
                0x00000000       0xe4
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xaa main.o
 .debug_pubnames
                0x000000aa       0x3a data.o

.debug_info     0x00000000     0x5cd4
 *(.debug_info)
 .debug_info    0x00000000     0x3035 main.o
 .debug_info    0x00003035     0x2c9f data.o

.debug_abbrev   0x00000000      0x27b
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x181 main.o
 .debug_abbrev  0x00000181       0xfa data.o

.debug_line     0x00000000      0x270
 *(.debug_line)
 .debug_line    0x00000000      0x270 main.o

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.stack          0x00080000        0x0
                0x00080000                _stack=.
 *(.stack)
OUTPUT(font_sample.elf elf32-littlearm)
