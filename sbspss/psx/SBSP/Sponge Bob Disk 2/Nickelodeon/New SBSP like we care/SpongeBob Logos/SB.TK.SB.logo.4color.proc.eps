%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (MTV, VH1, Nickelodeon, MTVN,) (or Viacom)%%Title: (SB logo 4/c process)%%CreationDate: (5/1/00) (10:13 AM)%%BoundingBox: 165 371 468 590%%HiResBoundingBox: 165.9004 371.5098 467.8232 589.499%%DocumentProcessColors: Black%%DocumentFonts: Helvetica%%DocumentNeededFonts: Helvetica%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_typography_AI5 1.0 1%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%DocumentCustomColors: (SB Aqua 1a)%%+ (SB Aqua 1b)%%+ (SB Aqua 2a)%%+ (SB Aqua 2b)%%+ (SB Blue)%%+ (SB Yellow)%%CMYKCustomColor: 0 0.51 0.87 0 (PANTONE Orange 021 CVC)%%+ 0.85 0.05 0.3 0.05 (SB Aqua 1a)%%+ 0.5 0 0.15 0 (SB Aqua 1b)%%+ 0.7 0 0.3 0 (SB Aqua 2a)%%+ 0.3 0 0.2 0 (SB Aqua 2b)%%+ 1 0.6 0 0.1 (SB Blue)%%+ 0 0 1 0 (SB Yellow)%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 131071 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 306.5 395.5 306.5 395.5%AI3_TileBox: 9 9 598 776%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 612 792%AI5_RulerUnits: 0%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 2%AI8_OpenToView: -267 969 0.86 1009 720 18 0 1 7 40 0 0%AI5_OpenViewLayers: 77%%PageOrigin:9 9%%AI3_PaperRect:-9 776 603 -16%%AI3_Margin:9 -9 -14 16%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 92 8%%BeginData: 14638 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD51FF5A54072F0729072F07292FA9FD71FF7E2F0607060706352E%352E3506070653A8FD6DFFA9072F072F2E6035603560356035603535062F%84FD6BFF5A060706593559355F0D59355F3535355F3559060784FD69FF30%072935845F603536072F07603560356035603560072FA9FD66FFA82F062F%5F845F84355F06352F070D5F3535355F35353559062FFD37FFA9A9A8FD2B%FFA92F07595F845F845F6035362F600760356007070660355F355A0784FD%32FFA8532F060706070607075359FD25FFA82F06595F845F842F590D5F0C%2F352F0D350635350D0C35353B590707FD30FF7E2F0729072F0729072F07%29072F075AA8FD22FF5A076083845F840D2F072F2F5A0760076007363560%07303560358435297EFD2DFFA9070706072E5A5984838483845959060706%0753FD20FF7E06595F845F842E2F5F840D2F07070C2F0D070D5F07070D5F%35355960062FFD2CFF5A062F2F8484AE84AE84AE84AE83AE84845F600707%2FFD1EFFAF065A83845F845F5A0D845F6035360D60062F352F062F355F35%6035605F5A07FD2AFFA854062F59AE838483AE8384838A838459605F6059%60060729FD1DFF292F5F845F845F84352906590C0706070D350C070DFD08%355F35075AFD29FF54077E84AE84AE84AE84AE84AE84AE60846084608460%84352F2FFD1BFF53295F8A83845F845F845F840D60356007360D60076035%603560356035605F84075AFD28FF5A065A84A883AE838483AE83845F845F%605F605F6059605F602E0729FD19FF5A0759845F845F845F845F84355F35%2F065F06070D350635355F353535605F5F592F06AFFD26FFA9075A84AE84%AE84AE84AE84AE60845F8460845F8460605F8460602E2F29AFFD16FF7E07%358483845F845F845F845F602F2F0D602F2F0D2F355A075F3560355F3584%5F60592F5AFD26FF2F2F83A883AE838483AE838459845F6059605F605960%5960596059603507067EFD14FF2F0735845F845F845F845F83355F352F0C%5F350D0C5F0635352F0DFD04355F595F595F0C077EFD24FFA92F84AE84AE%84AE84AE848A6084608460846084608460845F8460605F845F53072F7EFD%10FF84295A59845F8A83845F845F843B603560076035600760353607602F%36356035605F845F605F84072953FD23FF5A2EAE84A8597E2F592E5A3560%5F845F605F845F6059605F6059605F6059845F5F0607077EA8FD0AFFAF5A%2F063559845F845F845F845F84355F35600D070D59062F355F350D06070D%3535605F5F59605F5F59602E0706072F2F2F5307070607060706535384A8%FD12FF078484AE59527AABA5A580822E2F358460845F8460605F8460605F%84608A83605F605960070707545A7E7EA95A7E2F2F072F2F8483845F8483%845F845F843560356035600D070636355F3560355F356035605F845F605F%605F605F6035592E5A2F352E592F352E592F2F062F07072FA9FD0FFF592F%83A85852FD08FE575A59605F605960596059605960598483605960596035%603535060706070607062F2E605F845F845F845F845F845F603559355F35%59355F0D350D590D350C350D353560595F595F595F595F595FFD0C35135F%355F35350607062FA8FD0DFF2F59AE847EA5FD08FE7C3684608460846084%5F8460605FAE84845F8460605F605F605F605F6059848384838A8384838A%83845F8A83845F84596035603560356035600759577C5782577C0D845F60%5F845F605F845F603560353B35602F3B353B353535605F605F605F603559%072FA9FD0BFF5306AE84A82EA5FEFEA4A5A4FEFEFE575A5F845F6059605F%6059605F8483842F352E362F5A59605960596059605F845F845F845F5A35%845F84062F0C2F0D60072F0607062F065F352EFD07FE812E605F5F59605F%5F355F3535062F2D2E570DFD07355F355F355F355F352F062FA8FD08FFA9%5A078484AE848480FEFE292F5A297CFE8236845F84366035845A605F8A84%5A2D8281A57A82582F2F605F6059608384838483845F2F2E7C57592EFEFE%FE58602DCCFD05FEA506602EFEFE822ECCFEFEFE2F5F845F605F605F3B35%5F3558FD04FE073BFD04355F6035605F5F35605F5F3535077EFD07FF842F%06845FA883AE597BFEFE05355984352F055A052E2D7C577B56582D2F585A%56FD07FEA4070C362E2F065A5F845F845F5A51FD08FE5806AAFD07FE580C%2EFEFE273580FEFEFE51592E2F062E272E060D0C352DFEFEFE802FFD0435%135F355F355F355F355F355F350706FD05FFA92F295984608460AE84AE2E%FEFEFE7B592F8460846053FD08FEA4592FFEFECC587C7BFEFEFE2E3657A5%FE595984838A83842FABFEFEFEAB7BFEFEFE2E2FFECCA5A5FD04FE7B5A2E%FEFE5935A5FEFEFE7C5959A4FD06FE820D53FEFEFEA50D3B353535605F60%5F605F6035605F6035602F297EFFFFA82F066060845F8460845F8A605A2D%CCFEFEFEA52D2F35842DFD04FE582D52A4FE2D2FFEFE56602F2FA4FEFE7C%06A5FEFE7A7C572E055A5F2FFEFEFEA50C2EFEFEFE2F2DFE2D600707FEFE%FEA50C2EFEFE2D2FA4FEFEFE2D3580FEAA7C7AABFEFEFE2F2DFEFEFE57FD%04355F355F355F355F355F355F355F3535062FFFA82F3584608460846084%6084608460840D7CA5FEFEFE7B2F5F59FD04FE2F8A2FABFE7C07FEFE7C2F%602FA5FEFE5736A4FD07FE515A2EFEFEFEA55A2DFEFEFE0759FE7C2D7CA5%FD04FE2F2DFEFE817BCCFEFEFE592FA5FEA52F6007FEFEFE0759FEFEFE82%2F350D3635600D36355F35605F5F35603B5F352F07FF2F2E845F845F845F%845F845F60345A5F602E352DFEFEFE573627FD04FE2F592F80FE512FFEFE%7A35352FFEFEFE2E06AAFD07FEAA0C2EFEFEFEA52E2EFEFEFE2F27FEA4A5%80A57A7B272F0D7BFD06FE562E2E3580FE7A35350DFEFEFE0D06FEFEFE51%2E578180580D3506070D5F355F355F355F355F0607842F84608460846084%60846084605A52530D5A2F2F57FEFEA52F59FD04FE817C57CCFE532FCCFE%CC2F6029FEFEFE2E2FFEFEFEA557CCFEFEFE2F29FEFEFEA42F2EFEFEFE0D%82FEA507360D2F07360D6057FD06FEA5065A2FA5FEAB2F602EFEFEFE072F%FD09FE2F5960596035605F6035603B60352F072F7E5F8460845F8460845F%8460842EA5FEFEA4A5A4FD04FE2F2DFD09FE053580FEFE2F05A5FEFEFE2F%2DFEFEFE065956FEFEFE062FA4FEFEFEA4A5FEFEAA2F2DFEFE2F0C2FA4A5%8058077CFECCA4FD05FE2D5A7AFEFE2F0D7CFEFEA42F06FEFEA580A5FD04%FE065F355F355F355F355F355F355F06072F84AE60846084608460846084%605AA4FD08FEA52F53FEFE07592D592E5327603581FD07FEA50D82FEFEFE%2F597CFEFEFE2F355981A5A4FD05FE0753FEFEA5A5A4FEFEFE2D6057FE57%5A2F2F0D82FEA52F82FEFEA4CCFEFEFEA62F2FFECC07350DABFEFEFE2F5F%5F35605F5F35603B5F356035070606AE83A85F845F845F845F605F842EA5%FD08FE275A2DFEFE2F838483845F60596051FD07FE513656FEFEFE065A57%FEFEFE0C842E2F0C592E2FFEFEFE2F27FD08FE0D0C7CFE7B2E60595F05FE%FE2F27FD07FE053506FE802F352F7AFEFEA5065F355F355F355F355F355F%3535062F2F84AE84AE8484608460846084605AA5FEFEFEA5ABA57C065A60%53FEFE2F8A83AE848A5F846059FD06FEA42F2FABFEFEFE2F597CFEFEA55A%2FAB577C068429FEFEFE073657ABFD05FEA50D6057FE57592E532E82FEFE%0D2FFD06FE7B36352FFEAB072F2EFEFEFE815A5F6035605F6035603B6035%600D297E068484A883AE60845F8460845F84352F062F2F352E5A2F605960%2DFEFE5283848384836059602F58A4FEFEFE7A2F592FFD04FE068457FEFE%7B352FFEFEFE58352EFEFEFE2F35590C35060D06350D350D7CFD09FE2F2F%2F57818081512F353506FD08FE7C0D5F355F355F355F355F355F2E0707FF%0759AE84AE848A608460846084608460845F8460845F8460605F59FEFE2D%8A848A838A606059605936072F2F3659602EFEFEABA52F3559577C05842F%FEFECC2E5380FEFEFE0D8435603560355F3560355F57FD09FE2E605F6035%36356035353559FD07FECC295F35605F5F35603B5F3560350706A9FF2F07%83AE83A85F845F605F845F6059845F8459605F605960595A052E2D078384%83848384596059605960356059600D2F062F0C350D605F5A35845F2FA4FD%07FE7A3559843535355FFD04350D7BFD04FE80A5567B5107595F355F595F%355F35350C2F052E277C572E0559355F355F355F355F355F3407065AFFFF%84078484AE84AE608460846084608460AE84AE6084608460845F8460605F%AE848A838A848A5F605F605F605F6059605F6059605F60598A83845F8A2F%A5FEFEFECC81822E2F5F845F8435603560356035600659072F0D5A356035%845F605F605F605F605F60353B3535353B353535605F6035605F6035603B%5F2F2F07A9FD04FF2F06A884A85F8460845F845F605FAE8384838A5F6059%605F6059605F60598483848384836059605960596059603560595F356035%5F35845F845F84052E052F2F5A35845F5F5F8435350C5F0D350D5F353535%5F353535605F5F59605F5F5960595F355F59FD0A355F355F355F355F3535%060753FD06FFA8072EAE848460846084608460AE835A2F5A2F5A2F36FD04%2F0DFD052F07FD062F362F362F60356035605F6059605960358483845F84%5F845F845F845F84352F062F0707062F0707062F072F072F0D352F362F36%2F362F362F362F362F360D2F072F072F062F0D3B35605F5F3560352F0654%A8FD08FF530759845F605F845F605984835A060706070607060706070607%060706070607060706070607060706070607060706070607062F062F062F%062F062F062F062F0607060706070607060751A580A50507060706070607%0607060706070607060706070607060706070607062F355F355F355F3407%0684FD0BFF532F598460846084608A84AE5A2F0729072F0729072F072907%2F2953072F0729072F2929072F0729072F0729072F0729072F0729072F07%29072F0729072F0729072F0729072F0729A4FD04FECC07292E59527C572F%2E532E2F0729072F0729072F0729072F0729072F073535605F6035352FFD%0EFF53072E845F845F8483AE835A0607067BA4FEA47C05070652A4FEFEA5%2D0706FEFEA527A5567C0507062E51582707062F577C272F06070607052E%2D2E27070658577C577C050706A5FD05FEA506A5FD04FE06A5FEFE0607FE%FEFE2F06070607062E572F060706073535355F350729FD10FF592F078460%8A84AE83AE2F0706A5FD05FEA5062F81FD04FECC062FFEFEA459FEFEFE59%29CCFD04FE272F2EFEFECCFEFE7A2F0781FD04FE052FA5FD04FE81062F52%522D82FEFEA42F57FD04FE5357FEA50706FEFEFE062F07072DCCFEFEFEA5%2E070635353B355907AFFD11FF7E2F062F838A8384835A060780FEFEA5A4%FE800706FEFEAAA4FEFE2E06FEFEFE27FEFEFE062EFD06FE052EFD06FE27%07A4FD04FE7B06A5FD05FE7B0607060727FEFEA5067CFD04FE517BFEA506%07FEFEFE07060706FD06FE7C06070C35135F067EFD14FF5A075A84AE84AE%842907CCFEFE07ABFEA50759FEFE5782FEFE572FFEFEA459FEFEFE2F2ECC%A5ABFEFEFE592EFEFEABA5FEFE5952FEFEABFEFEFE59A5FEFE82A4FEA52F%077C57ABFEFEA52F52FD04FE7C57FEA52957FEFECC2E590729FEFEA47CFE%FE5729073535352F2FFD16FF2F065A8384838A0607A4FEA40756A57B0751%FEFE7C2DFEFE7C06FEFEFE06FEFEFE060706070681FEFE2D2EFEFE577CFE%FE2DA5FEFE2DA5FEFE2DA5FEFE2DFEFEA50652FD05FEA5067CFEA5FEFEA4%7CFEA506FD06FE7C27FEFEA506FEFE7C06070C35350D53FD16FF84072EAE%84AE832F07A5FEFE8152062F07A5FEFE2E58FEFE8107FEFEFE07FEFEFE07%062F072F7AFEFE532DFEFE7C57FEFE5380FEFE53A4FEFE2FA4FEFE53FEFE%FE077AFD05FEA50757FEA5FEFECC57FEA42FFD06FE5759FEFEA42F577C2D%2F072F35350784FD17FF062F838483842E0756FD04FEAA2D0780FEFE2E2D%FEFEA506FEFEFE06FEFEFE06077AFD05FE2D2EFEFE577BFEFE2DA5FD06FE%06A5FEFE2DFEFEFE06AAFEFE7AFEFEA5067BFEA580FEFE7CFEA506A5FEFE%A4A5805806FEFEFEA47C050706070635120784FD17FF2F2FAE84AE842F07%53A5FD04FEAB07A5FEFE2E53FEFEA429FEFEFE29FEFEA52907CCFD05FE53%06FEFE7C57FEFE5357FD05FE5729A5FEFEA5A4FEFE53FEFEA553FEFEA529%57FEA5A6FEFEA5FEA52F07FEFEAB0729072FA5FD05FE2E2F072F356007A9%FD17FF0759838A8384060706072D81FEFEFE297AFEFE2E2DFEFEA506FEFE%FE06FEFEA5062EFD06FE512FFEFE572E5758067CFD04FE805206A5FD05FE%812DFEFEA52DFEFEFE067CFEFE51FEFECCFEA50607FEFE802F2D2F062F57%FD04FE810607063513077EFD17FF2F59AE83AE5A0706ABFEA506ABFEFE2D%82FEFE2D59FEFE572FFEFEFE2FFEFEA42F57FEFE5957FEFE8207FEFE8207%07062F57FEFE590707062FA5FD05FE2759A4FEFECCFEFEFE2F57FEFE59FD%04FEA50706FEFEA57BFEA5072D592E58FEFEFE07062F3535067EFD17FF06%8483845935060780FEFE0780FEFE2E56FEFE2E27FEFE2E06FEFEFE06FEFE%FE06A5FEFE277CFEFE5607FEFE80070607067CFEFE2707060706A5FEFE7A%58050706A5FD06FE067CFEFE06FD04FEA50607FEFE807BFEA506FEFEA506%AAFEFE06070635132F29FD16FFA82F84AE60842F2907ABFEFE7BCCFEFE2E%82FEFE81ABFEFE072FFEFEFEA6FEFEFE2F7BFEFEABA5FEFE8207FEFEAB07%29072F57FEFECCA5A5522FA5FEFE820729072F52FD06FE2F57FEA42FA4FE%FEFEA52907FEFEFE57FEA529FEFEFE29FEFEFE29072F35352F2FA9FD15FF%7E068A5F605907060780FD06FE0705FD05FEA40706FD07FE062FFD06FE57%07FEFE80070607062FFD05FE7C06A5FEFE570706070607AAFE7ACCFEFE05%7CFEFE06A5FEFEFEA50607FD05FEA506FEFEFEA4FEFEFE06070635353506%7EFD15FF5A075F846084062F077CA4FD04FEA607072DFD04FEAB070751FD%06FE0706CCFD05FE7C06FEFEAB062F0707067CFD04FE5707A4FEFE58062F%0707062F0707062F070757FEFE0751ABA5A57B2F07FD05FE802FFD06FE80%2F07353560350D07FD15FF5A066059602E070607060751A5572E06070607%052E7AFEA4070607052E0558567C060756FD05FE570780A5FE0706070607%06A5FEFEFE7C06AAFEFE5107060706070607060706070629272E06070607%0607060727587AA55129065880FEFEFEA429060D135F355F0607A8FD14FF%5A29608460840D2F0729072F0729072F0729072F077CFECC2E29072F0729%072F07290759525307592E53072F0729072F0729072F0729072F0729072F%0729072F0729072F0729072F0729072F0729072F0729072F0729072F0729%072F07292E590729072F2F6035603B590784FD14FF7E066059605F602F2F%060706070607060706070607062F06070607060706070607060706070607%0607060706070607060706070607060706070607060706070607060D062F%062F06350D2F062F06070607060706070607060706070607060706070607%065F355F355F0C0759FD14FFA82F59845F8460605F8436842F5AFD042F07%07062F0707062F0707062F0707062F0707062F0707062F292F07FD042F5A%2F5A2F5A358435602F5F3560355F3560353B35605F605F605F605F605F60%596035602F600D2F0D2F0D2F072F0707062F072F3560355F35590784FD15%FF062959605960596059605F84838483845F848384345A595A2E59355A34%5A355A0C60355F355F355F355F355F5F845F5F59845F5F59605F5F3559FD%0735592E2F062F062F062F2E35355F595F355F355F133535351335353512%351335135F355F355F355F0C07A8FD15FFA90784608460845F84608A838A%848A838A848A838A8484838A83845984596059605F605960596035605984%5F845F845F845F845F845F845F6035603560355A072F0729072F0729072F%0729072F075335605F605F3B3535353BFD05356035603B6035603B603535%29FD17FF2F066059605F6059605F8483848384838483845F8483842E2F06%07060706072E60355F3560355F35845F845F845F5F5F845F5F5F845F5F35%5F3535060706072F7E84FD05FFA8A97E7E2F290607062F2EFD0935135F35%5F355F355F355F3535067EFD17FFA82F29605F8460605F606084838A8484%838A83845F5A072F5AAFFFFFA8A82F07065F596035605F845F845F845F84%5F845F845F845F845F8435600707077EFD0FFFAF7E5A072F07FD07355F5F%35603B5F3560355F3560072FA9FD18FFA829065F5960596059605F845F84%83845F5A06072F84FD08FFA85A0607065F35845F835F845F5F59845F5F59%605F5F5960592F060759FD15FF7E5A060706353535135F355F355F355F35%5F353506075AFD1AFFA92F076059845F846060838A847E2F590754A8FD0D%FF5329075A5F845F845F845F845F845F845F845F8459530730A9FD19FF7E%5A0729075A356035603B6035603B59072F53FD1CFFA95A06070607063506%2F0607060753A9FD10FFA82F06072F845F845F5F5F845F5F5F845F5F2E07%0653A8FD1DFF5A2F0607062F0C3535350C2F060753FD20FF7E5A2907062F%075359A9FD15FFA9072F075A5F845F845F845F845F600D07065AFD21FFA9%532F0707062F0707075AA9FD42FF5907060706352F5935352E0706070784%FD26FFA8A884A9A8FD46FFA95A072F0729072F0729072F7EFD76FF7E7E2F%2F2F5A5AA9FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFD06FFA87D52FD0FFF7DFD05FF7DFFFFFF7DFD0BFF7DFD08FF7DFD4E%FF7DA8FFA87D7DFFFD057DFF7D7DFF7D7D527DFF7D7DFF527DFFFF7D7D7D%FF7D52A87D7DFFFFA852FFFFFF7D7DA87DFF7DA87DFF52FFFF7D7DFF52FF%7DA8FF7D7DA87DFF7D7DA87DA8FD36FFA8A8527D52FF527DFF7DFF7D52FF%527D525252FF527DFF7D52FF52FF527DFF7D52A87D7DFF7DFF5252FF527D%FFFF52FF527D52FF527DFFFF52FF527D52FF527DFFFF277D527D7DA87DA8%FD36FFA8527DA85252A87D7D52FF7DA85252A87D7D527DA8527DA85252A8%FF7D527DA87D52A87D7DA8FFA852A8FFA87D527D7DA8527D7DA852FFFF52%52A87DA8527DA87D527D7DFF527D7D7D52FD3AFF52FD07FFA87D7DFD11FF%5252A8FD15FF52FD26FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 1%%CreationDate:(6/10/1996) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 68 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/havefont{	systemdict /languagelevel known		{		/Font resourcestatus dup			{ exch pop exch pop }		if		}		{		systemdict /FontDirectory get 1 index known			{ pop true }			{			systemdict /fileposition known				{				dup length 6 add exch				Ss 6 250 getinterval				cvs pop				Ss exch 0 exch getinterval				status					{ pop pop pop pop true }					{ false }				ifelse				}				{				pop false				}			ifelse			}		ifelse		}	ifelse} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def/subststring {	exch 2 index exch search	{		exch pop		exch dup () eq		{			pop exch concatstring		}		{			3 -1 roll			exch concatstring			concatstring		} ifelse		exch pop true	}	{		pop pop false	} ifelse} def/concatstring {	1 index length 1 index length	1 index add	string	dup 0 5 index putinterval	dup 2 index 4 index putinterval	4 1 roll pop pop pop} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	2 index havefont	{		3 index		255 string		cvs				dup		(_Symbol_)		eq		{			pop			2 index			findfont					}		{			1 index 0 eq			{				dup length 1 sub				1 exch				getinterval								cvn				findfont			}			{				pop 2 index findfont			} ifelse		} ifelse	}	{		dup 1 eq		{			2 index 64 string cvs			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring			{				exch pop dup havefont				{					findfont false				}				{					pop true				} ifelse			}			{				pop	dup				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring				{					exch pop dup havefont					{						findfont false					}					{						pop true					} ifelse				}				{					pop pop true				} ifelse			} ifelse			{				1 index 1 eq				{					/Ryumin-Light-Ext-RKSJ-V havefont					{/Ryumin-Light-Ext-RKSJ-V}					{/Courier}					ifelse				}				{					/Ryumin-Light-83pv-RKSJ-H havefont					{/Ryumin-Light-83pv-RKSJ-H}					{/Courier}					ifelse				} ifelse				findfont				[1 0 0.5 1 0 0] makefont			} if		}		{			/Courier findfont		} ifelse	} ifelse	_wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 10 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontScript exch def	/FontDirection exch def	/FontRequest exch def	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{W B} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{W F } def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{W S} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat	_shift aload pop _lineorientation 1 eq { exch } if translate	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	1 index type /nametype eq	{		dup 0.75 mul 1 index 0.25 mul neg	} if	/_fontDescent exch ddef	/_fontAscent exch ddef	/_fontSize exch ddef	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef	/_fontHeight _fontSize ddef	findfont _fontSize scalefont setfont} def/Tl{	pop neg 0 exch	_leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	0 exch	_shift astore pop	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	count 1 eq { 100 } if	100 div exch 100 div exch	_scale astore pop	iTm} def/TA{	pop} def/Tq{	pop} def/Tg{	pop} def/TG{	pop} def/Tv{	/_lineorientation exch ddef} def/TV{	/_charorientation exch ddef} def/Ty{	dup /_yokoorientation exch ddef 1 sub neg Tv} def/TY{	pop} def/T~{	Tx} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	_fontSize mul 1000 div	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse	rmoveto	pop} def/TK{	2 npop} def/T*{	_leading aload pop	_lineorientation 0 ne { exch } if	Td} def/T*-{	_leading aload pop	_lineorientation 0 ne { exch } if	exch neg exch neg	Td} def/T-{	_ax neg 0 rmoveto	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ findfont _fontSize scalefont setfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%/X^{	currentfont 5 1 roll	dup havefont		{		findfont _fontSize scalefont setfont		}		{		pop		exch		} ifelse	2 index 0 eq	{		Tx	}	{		Tj	} ifelse	pop	pop	setfont} def/T^	/X^	load def%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Helveticauserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI55J_Tsume: None%AI3_BeginEncoding: _Helvetica Helvetica[/_Helvetica/Helvetica 0 0 1 TZ%AI3_EndEncoding AdobeType[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal181/mu/partialdiff/summation/product/pi/integral 189/Omega 195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple/_Symbol_/Symbol 0 0 0 TZ%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7834.75 8587 m-7834.75 8563 L-7884.75 8563 L-7884.75 8587 L-7834.75 8587 Lnu0 Ap0 O1 g-7854.75 8585 m-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 CF-7844.75 8585 m-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 CF-7884.75 8565 m-7864.75 8560 -7854.75 8590 -7834.75 8585 CF-7874.75 8565 m-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 CF-7864.75 8565 m-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 CF-7844.75 8565 m-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 CF-7874.75 8585 m-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 CF-7844.7817 8565.125 m-7850.9009 8563.6162 -7854.7817 8565.125 V-7858.877 8563.6484 -7864.7817 8565.125 V-7869.7446 8563.4492 -7874.7817 8565.125 V-7880.7969 8563.5742 -7884.7817 8565.125 V-7884.7817 8584.8096 L-7881.6958 8585.7842 -7878.2969 8585.9912 -7874.3799 8584.9082 C-7868.2134 8586.4912 -7864.4634 8584.9082 V-7859.4634 8586.4912 -7854.3799 8584.8242 V-7850.0474 8586.4082 -7844.3799 8584.9082 V-7838.8799 8586.3242 -7834.7817 8585.125 V-7834.7817 8565.4404 L-7837.5254 8564.4287 -7840.6514 8563.9287 -7844.7817 8565.125 Cf0 R0 G1 J 1 j 0.5 w-7864.75 8585 m-7872.54 8586.9473 -7878.813 8583.585 -7884.75 8579.0488 CS-7854.75 8585 m-7866.96 8588.0527 -7875.4434 8578.0605 -7884.75 8570.9512 CS-7844.75 8585 m-7861.1279 8589.0947 -7870.8008 8569.7227 -7884.75 8565.3154 CS-7884.75 8565 m-7864.75 8560 -7854.75 8590 -7834.75 8585 CS-7874.75 8565 m-7858.3721 8560.9053 -7848.6992 8580.2773 -7834.75 8584.6846 CS-7864.75 8565 m-7852.54 8561.9473 -7844.0566 8571.9395 -7834.75 8579.0488 CS-7854.75 8565 m-7846.96 8563.0527 -7840.687 8566.415 -7834.75 8570.9512 CS-7844.75 8565 m-7841.1279 8564.0947 -7837.835 8564.3408 -7834.75 8565.3154 CS-7874.75 8585 m-7878.3721 8585.9053 -7881.665 8585.6592 -7884.75 8584.6846 CSUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7884 8586 m-7819.187 8586 L-7819.187 8521.9023 L-7884 8521.9023 L-7884 8586 Lnu0 O0 g-7849.6978 8544.4297 m-7851.6094 8521.9023 L-7853.5215 8544.4297 L-7852.9033 8544.3066 -7852.2642 8544.2402 -7851.6094 8544.2402 c-7850.9551 8544.2402 -7850.3159 8544.3066 -7849.6978 8544.4297 Cf-7861.2402 8552.3975 m-7884 8554.3301 L-7861.1138 8556.2734 L-7861.2856 8555.5469 -7861.3848 8554.793 -7861.3848 8554.0156 c-7861.3848 8553.4629 -7861.3281 8552.9248 -7861.2402 8552.3975 Cf-7856.519 8545.5723 m-7870.1626 8536.8047 L-7860.2153 8549.377 L-7859.3574 8547.791 -7858.0718 8546.4766 -7856.519 8545.5723 Cf-7853.481 8563.6074 m-7851.5786 8586 L-7849.6768 8563.5967 L-7850.3018 8563.7227 -7850.9473 8563.791 -7851.6094 8563.791 c-7852.25 8563.791 -7852.873 8563.7246 -7853.481 8563.6074 Cf-7841.9609 8555.5068 m-7819.187 8553.5732 L-7842.083 8551.6289 L-7842.083 8551.8506 L-7841.9258 8552.5488 -7841.834 8553.2695 -7841.834 8554.0156 c-7841.834 8554.5234 -7841.8848 8555.0195 -7841.9609 8555.5068 Cf-7860.1138 8558.8262 m-7870.1641 8571.5293 L-7856.2778 8562.6055 L-7857.8823 8561.7305 -7859.2114 8560.416 -7860.1138 8558.8262 Cf-7842.9961 8549.3945 m-7832.875 8536.6055 L-7846.7666 8545.5313 L-7845.1768 8546.4414 -7843.8633 8547.7793 -7842.9961 8549.3945 Cf-7846.6895 8562.4512 m-7832.873 8571.3281 L-7842.9658 8558.5732 L-7843.8198 8560.1895 -7845.1152 8561.5313 -7846.6895 8562.4512 Cf-7842.8887 8558.6133 m-7842.3862 8557.6641 -7842.043 8556.6211 -7841.875 8555.5195 c-7841.7993 8555.0293 -7841.748 8554.5273 -7841.748 8554.0156 c-7841.748 8553.2637 -7841.8398 8552.5352 -7841.998 8551.8311 c-7842.1958 8550.957 -7842.5049 8550.124 -7842.918 8549.3545 c-7843.7954 8547.7246 -7845.1191 8546.374 -7846.7241 8545.4561 c-7847.6294 8544.9375 -7848.6226 8544.5537 -7849.6802 8544.3457 c-7850.3047 8544.2207 -7850.9497 8544.1523 -7851.6094 8544.1523 c-7852.2695 8544.1523 -7852.915 8544.2207 -7853.5391 8544.3457 c-7854.623 8544.5605 -7855.6382 8544.957 -7856.5625 8545.4961 c-7858.1313 8546.4102 -7859.4282 8547.7363 -7860.291 8549.335 c-7860.7969 8550.2695 -7861.145 8551.2969 -7861.3262 8552.3828 c-7861.415 8552.916 -7861.4727 8553.459 -7861.4727 8554.0156 c-7861.4727 8554.8008 -7861.3711 8555.5605 -7861.1978 8556.293 c-7860.981 8557.207 -7860.6406 8558.0732 -7860.187 8558.8701 c-7859.2793 8560.4727 -7857.939 8561.8008 -7856.3174 8562.6826 c-7855.4487 8563.1553 -7854.5 8563.498 -7853.4961 8563.6934 c-7852.8848 8563.8115 -7852.2554 8563.8779 -7851.6094 8563.8779 c-7850.9414 8563.8779 -7850.29 8563.8086 -7849.6602 8563.6826 c-7848.5786 8563.4668 -7847.5664 8563.0654 -7846.6455 8562.5273 c-7845.0566 8561.5977 -7843.751 8560.2441 -7842.8887 8558.6133 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 3)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7874.75 8587 m-7874.75 8563 L-7884.75 8563 L-7884.75 8587 L-7874.75 8587 Lnuu0 Ap0 O1 g-7875.4058 8578.5361 m-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 c-7877.897 8566.9736 -7881.0898 8565 -7884.75 8565 C-7884.75 8585 L-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 c-7881.9121 8584.7754 -7880.1807 8584.0645 -7878.7441 8582.9824 c-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 cf0 R0 G1 J 1 j 0.5 w-7884.75 8565.3174 m-7881.7207 8566.2744 -7878.8926 8567.9326 -7876.1543 8569.9072 CS-7884.75 8570.9512 m-7881.5991 8573.3564 -7878.543 8576.0869 -7875.4058 8578.5361 CS-7878.7441 8582.9824 m-7880.8105 8581.8916 -7882.7993 8580.5342 -7884.75 8579.043 CS-7883.8018 8584.9521 m-7884.1191 8584.8682 -7884.4375 8584.7852 -7884.75 8584.6865 CS-7878.7441 8582.9824 m-7880.1807 8584.0645 -7881.9121 8584.7744 -7883.8018 8584.9521 CS-7875.4058 8578.5361 m-7874.9878 8577.4355 -7874.75 8576.2471 -7874.75 8575 c-7874.75 8573.1377 -7875.2681 8571.4004 -7876.1543 8569.9072 CS-7884.75 8585 m-7884.4297 8585 -7884.1143 8584.9814 -7883.8018 8584.9521 CS-7878.7441 8582.9824 m-7877.2471 8581.8545 -7876.0801 8580.3184 -7875.4058 8578.5361 CS-7876.1543 8569.9072 m-7877.8975 8566.9736 -7881.0898 8565 -7884.75 8565 CSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 5)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7726.3994 8587 m-7726.3994 8573.4199 L-7885 8573.4199 L-7885 8587 L-7726.3994 8587 Lnuu0 O0.285 0.228 0.171 0 k-7741.0786 8585.4844 m-7741.043 8586.6895 L-7727.5103 8587.5176 -7726.8418 8586.2822 v-7726.7441 8586.1016 -7726.647 8585.7148 -7726.561 8585.1934 C-7728.584 8585.8242 -7738.291 8585.5713 -7741.0786 8585.4844 Cf0.44 0.352 0.264 0 k-7741.4063 8574.0234 m-7741.3711 8575.2676 L-7738.4912 8575.0488 -7728.1914 8574.3164 -7726.543 8574.8652 C-7726.7031 8574.2188 -7726.9199 8573.7646 -7727.2046 8573.6152 c-7728.8306 8572.7656 -7741.4063 8574.0234 Yf0.145 0.116 0.087 0 k-7741.3711 8575.2676 m-7741.0786 8585.4844 L-7738.291 8585.5713 -7728.584 8585.8242 -7726.561 8585.1934 C-7726.1519 8582.7773 -7725.9258 8577.3604 -7726.543 8574.8652 C-7728.1914 8574.3164 -7738.4912 8575.0488 -7741.3711 8575.2676 CfUu0.155 0.124 0.093 0 k-7766.9375 8579.2734 m-7765.897 8579.6563 L-7747.0728 8575.1465 L-7747.481 8574.3145 L-7766.3633 8576.7246 L-7767.252 8577.0059 L-7767.6504 8576.8936 -7768.1934 8576.8242 V-7767.6094 8577.2373 -7767.1426 8578.1406 -7766.9375 8579.2734 Cfu0.085 0.068 0.051 0 k-7771.7993 8583.666 m-7772.5977 8583.7217 -7769.749 8583.6641 Y-7770.3481 8583.0176 -7770.771 8581.8203 -7770.8105 8580.4375 c-7770.8169 8580.2246 -7770.8105 8580.0176 -7770.7993 8579.8135 C-7771.041 8579.707 -7771.0918 8579.7734 -7771.6289 8579.5645 C-7771 8583.6113 -7771.7993 8583.666 vf0.305 0.244 0.183 0 k-7770.3442 8576.8672 m-7770.5527 8576.8105 -7770.4937 8578.9307 Y-7769.4785 8579.7588 L-7767.8359 8578.9434 L-7766.9375 8579.2734 L-7767.1426 8578.1406 -7767.6094 8577.2373 -7768.1934 8576.8242 C-7768.6094 8576.7715 -7769.874 8576.7998 -7770.3442 8576.8672 CfU0.115 0.092 0.069 0 k-7766.9375 8579.2734 m-7767.8359 8578.9434 L-7769.4785 8579.7588 L-7770.4937 8578.9307 L-7770.793 8579.708 -7770.7993 8579.8135 V-7769.5137 8580.3789 -7768.1831 8580.7402 -7766.8398 8580.9258 C-7766.79 8580.7275 -7766.7842 8580.543 -7766.79 8580.3369 c-7766.7998 8579.9717 -7766.8218 8579.6182 -7766.9375 8579.2734 Cf0.41 0.328 0.246 0 k-7747.4512 8575.3965 m-7749.377 8576.6426 -7758.3862 8582.0986 -7766.8398 8580.9258 C-7766.9038 8582.0928 -7767.248 8583.0908 -7767.75 8583.6631 C-7767.1895 8583.6621 L-7746.7402 8586.7559 L-7747.0366 8576.4258 L-7747.0728 8575.1465 L-7747.2046 8575.2373 -7747.4512 8575.3965 vf0.395 0.316 0.237 0 k-7770.8105 8580.4375 m-7770.771 8581.8203 -7770.3481 8583.0176 -7769.749 8583.6641 C-7767.6807 8583.6631 L-7767.1782 8583.0908 -7766.8218 8582.0713 -7766.8398 8580.9258 C-7768.1831 8580.7402 -7769.5137 8580.3789 -7770.7993 8579.8135 C-7770.8105 8580.0176 -7770.8169 8580.2246 -7770.8105 8580.4375 cfUu0 0 0 0.11 k-7741.2642 8574.2012 m-7740.2407 8574.0352 L-7741.2642 8574.2012 L-7741.2642 8574.2012 Lf0 0 0 0.34 k-7747.481 8574.3145 m-7747.0728 8575.1465 L-7745.6714 8574.918 L-7744.5234 8574.7314 L-7742.6758 8574.4307 L-7741.2642 8574.2012 L-7740.2407 8574.0352 L-7740.2954 8573.7168 -7740.3672 8573.498 -7740.4648 8573.4199 C-7747.481 8574.3145 Lf0 0 0 0.32 k-7745.8042 8579.207 m-7746.041 8586.8613 L-7740.7144 8587 L-7739.7266 8583.5146 -7740.1816 8579.1543 V-7745.8042 8579.207 LfU0.025 0.02 0.015 0 k-7739.3223 8576.3848 m-7736.373 8576.9199 -7733.2402 8577.1602 -7730.3159 8576.3613 c-7730.2856 8576.3496 -7730.2754 8576.3184 -7730.2871 8576.2969 c-7730.2881 8576.2656 -7730.3198 8576.2559 -7730.3418 8576.2559 c-7733.2422 8577.0645 -7736.375 8576.8242 -7739.3042 8576.2783 c-7739.3262 8576.2793 -7739.3574 8576.291 -7739.3672 8576.3223 c-7739.3662 8576.3438 -7739.355 8576.375 -7739.3223 8576.3848 c-7739.3223 8576.3848 lf-7737.8374 8575.3076 m-7737.7295 8575.3789 -7737.6313 8575.4941 -7737.5234 8575.502 c-7733.7886 8575.832 -7730.1631 8575.7813 -7726.4746 8575.6641 c-7726.4526 8575.6641 -7726.4209 8575.6426 -7726.4214 8575.6211 c-7726.4214 8575.5879 -7726.4551 8575.5684 -7726.4766 8575.5684 c-7729.3223 8575.6816 -7732.1401 8575.6992 -7735.0039 8575.5352 c-7735.9336 8575.4766 -7736.9082 8575.7402 -7737.7778 8575.2207 c-7737.7993 8575.2109 -7737.8306 8575.2109 -7737.8506 8575.2334 c-7737.8618 8575.2559 -7737.8594 8575.2871 -7737.8374 8575.3076 c-7737.8374 8575.3076 lf-7733.373 8577.3672 m-7731.5098 8578.6797 -7729.3022 8579.374 -7727.1001 8579.8867 c-7727.0679 8579.8965 -7727.0474 8579.8848 -7727.0366 8579.8535 c-7727.0273 8579.8203 -7727.0488 8579.8008 -7727.0703 8579.79 c-7729.2617 8579.2656 -7731.459 8578.6035 -7733.3105 8577.2803 c-7733.3433 8577.2598 -7733.375 8577.2715 -7733.3848 8577.293 c-7733.4058 8577.3145 -7733.3945 8577.3457 -7733.373 8577.3672 c-7733.373 8577.3672 lf-7738.9321 8584.0566 m-7736.7295 8584.5703 -7734.5298 8585.0303 -7732.2798 8585.2754 c-7732.2598 8585.2852 -7732.229 8585.2637 -7732.229 8585.2422 c-7732.2183 8585.209 -7732.2407 8585.1777 -7732.2729 8585.1787 c-7734.5122 8584.8809 -7736.7305 8584.5176 -7738.9126 8583.9502 c-7738.9351 8583.9512 -7738.9673 8583.9629 -7738.9766 8583.9941 c-7738.9751 8584.0156 -7738.9648 8584.0479 -7738.9321 8584.0566 c-7738.9321 8584.0566 lf-7738.439 8583.3604 m-7736.3457 8584.1973 -7734.1016 8583.9297 -7731.9023 8583.9629 c-7731.8706 8583.9609 -7731.8496 8583.9395 -7731.8506 8583.9082 c-7731.8521 8583.875 -7731.873 8583.8555 -7731.8945 8583.8555 c-7734.0928 8583.8438 -7736.3374 8584.0996 -7738.4209 8583.2529 c-7738.4434 8583.2539 -7738.4746 8583.2656 -7738.4834 8583.2969 c-7738.4834 8583.3184 -7738.4722 8583.3506 -7738.439 8583.3604 c-7738.439 8583.3604 lf-7737.707 8584.7051 m-7736.3833 8584.752 -7735.1504 8584.5469 -7733.8271 8584.209 c-7733.3594 8584.0996 -7732.9199 8584.2266 -7732.4609 8584.2129 c-7731.897 8584.1973 l-7731.874 8584.1963 -7731.8633 8584.1855 -7731.8535 8584.1738 c-7731.834 8584.1523 -7731.8442 8584.1211 -7731.8662 8584.0996 c-7732.0625 8583.9453 l-7732.0742 8583.9453 -7732.085 8583.9355 -7732.0962 8583.9355 c-7732.5 8583.9473 l-7733.9551 8584.1914 -7735.457 8584.6719 -7736.8926 8584.0742 c-7736.9258 8584.0645 -7736.957 8584.0859 -7736.9673 8584.1074 c-7736.9673 8584.1396 -7736.9551 8584.1602 -7736.9336 8584.1709 c-7735.647 8584.6992 -7734.1714 8584.4756 -7732.8818 8584.0547 c-7732.0918 8584.043 L-7732.124 8584.0332 L-7731.9282 8584.1875 L-7731.8984 8584.0898 L-7732.4639 8584.1064 l-7732.9321 8584.1406 -7733.3848 8583.9834 -7733.8398 8584.1035 c-7735.1543 8584.4609 -7736.3975 8584.625 -7737.71 8584.5986 c-7737.7422 8584.5996 -7737.7642 8584.6211 -7737.7617 8584.6533 c-7737.7617 8584.6855 -7737.7402 8584.7061 -7737.707 8584.7051 c-7737.707 8584.7051 lf-7738.5718 8585.0605 m-7735.8711 8586.2207 -7732.9023 8585.5703 -7730.1279 8585.1816 c-7729.7832 8585.2891 l-7729.7617 8585.2988 -7729.7417 8585.2871 -7729.7207 8585.2656 c-7729.71 8585.2441 -7729.7217 8585.2129 -7729.7422 8585.2021 c-7730.0801 8585.0098 l-7732.7754 8584.3926 -7735.5391 8584.7813 -7738.271 8584.7852 c-7738.3022 8584.7871 -7738.3232 8584.8086 -7738.3223 8584.8398 c-7738.3198 8584.8721 -7738.2983 8584.8926 -7738.2681 8584.8926 c-7735.6738 8584.9355 -7733.0303 8584.4434 -7730.4727 8585.0742 c-7729.7954 8585.2891 L-7729.7534 8585.1914 L-7730.1406 8585.0859 l-7732.9058 8585.4424 -7735.8418 8586.1348 -7738.5313 8584.9746 c-7738.5537 8584.9648 -7738.585 8584.9648 -7738.5962 8584.998 c-7738.6055 8585.0195 -7738.605 8585.0508 -7738.5718 8585.0605 c-7738.5718 8585.0605 lf-7735.6895 8578.3945 m-7734.3945 8578.9004 -7732.9834 8578.6465 -7731.6802 8578.3438 c-7731.647 8578.3418 -7731.6367 8578.3203 -7731.6382 8578.2891 c-7731.6504 8578.2568 -7731.6714 8578.2461 -7731.7031 8578.248 c-7732.998 8578.5303 -7734.377 8578.8154 -7735.6504 8578.2969 c-7735.6826 8578.2871 -7735.7144 8578.2988 -7735.7246 8578.3311 c-7735.7222 8578.3525 -7735.7114 8578.3848 -7735.6895 8578.3945 c-7735.6895 8578.3945 lf-7736.1401 8580.2207 m-7734.2266 8580.6895 -7732.3145 8581.1035 -7730.355 8581.3242 c-7730.3242 8581.334 -7730.3022 8581.3125 -7730.293 8581.2803 c-7730.2954 8581.2598 -7730.3159 8581.2285 -7730.3374 8581.2285 c-7732.2959 8581.0078 -7734.209 8580.582 -7736.1206 8580.1133 c-7736.1426 8580.1152 -7736.1738 8580.126 -7736.1831 8580.1582 c-7736.1831 8580.1797 -7736.1719 8580.2109 -7736.1401 8580.2207 c-7736.1401 8580.2207 lf-7736.9336 8582.6348 m-7734.499 8583.4609 -7731.8647 8583.0547 -7729.3457 8583.0879 c-7729.313 8583.0879 -7729.293 8583.0664 -7729.293 8583.0332 c-7729.2954 8583.0117 -7729.3159 8582.9922 -7729.3481 8582.9922 c-7731.8574 8582.916 -7734.481 8583.3848 -7736.8945 8582.5264 c-7736.9282 8582.5273 -7736.959 8582.5391 -7736.9688 8582.5605 c-7736.9678 8582.5918 -7736.9561 8582.624 -7736.9336 8582.6348 c-7736.9336 8582.6348 lf-7732.0542 8583.8496 m-7730.6582 8584.5449 -7729.0503 8584.4033 -7727.5342 8584.4668 c-7727.502 8584.4648 -7727.4824 8584.4434 -7727.4824 8584.4121 c-7727.4834 8584.3906 -7727.5054 8584.3594 -7727.5366 8584.3594 c-7729.0137 8584.2207 -7730.6489 8584.5234 -7732.0039 8583.7617 c-7732.0366 8583.7529 -7732.0679 8583.7637 -7732.0786 8583.7861 c-7732.0879 8583.8076 -7732.0767 8583.8398 -7732.0542 8583.8496 c-7732.0542 8583.8496 lf-7731.3418 8580.4248 m-7730.3926 8580.3975 -7729.4336 8580.3701 -7728.4839 8580.3428 c-7728.4526 8580.3418 -7728.4312 8580.3203 -7728.4336 8580.2881 c-7728.4336 8580.2559 -7728.4551 8580.2354 -7728.4878 8580.2363 c-7729.437 8580.2637 -7730.397 8580.291 -7731.3457 8580.3184 c-7731.377 8580.3184 -7731.3975 8580.3418 -7731.3975 8580.373 c-7731.397 8580.4043 -7731.374 8580.4258 -7731.3418 8580.4248 c-7731.3418 8580.4248 lf-7729.1592 8578.0361 m-7728.6895 8578.0645 -7728.209 8578.0723 -7727.7383 8578.0918 c-7727.7168 8578.0908 -7727.6855 8578.0684 -7727.6865 8578.0371 c-7727.687 8578.0039 -7727.71 8577.9844 -7727.7417 8577.9844 c-7728.2114 8577.9873 -7728.6816 8577.9375 -7729.1514 8577.9395 c-7729.1831 8577.9297 -7729.2031 8577.9512 -7729.2134 8577.9844 c-7729.2129 8578.0156 -7729.1914 8578.0371 -7729.1592 8578.0361 c-7729.1592 8578.0361 lf-7736.9702 8580.2344 m-7736.5688 8580.5107 -7736.125 8580.6797 -7735.645 8580.751 c-7735.6113 8580.7607 -7735.5918 8580.7383 -7735.5806 8580.7168 c-7735.5703 8580.6855 -7735.5928 8580.6543 -7735.6152 8580.6543 c-7736.0854 8580.5723 -7736.5176 8580.4023 -7736.9209 8580.1475 c-7736.9521 8580.1377 -7736.9849 8580.1387 -7736.9946 8580.1709 c-7737.0039 8580.1934 -7736.9922 8580.2246 -7736.9702 8580.2344 c-7736.9702 8580.2344 lf-7738.1904 8586.085 m-7735.7344 8586.5273 -7733.2983 8587.001 -7730.7993 8586.7266 c-7730.7778 8586.7266 -7730.7568 8586.7041 -7730.7578 8586.6719 c-7730.7578 8586.6406 -7730.7798 8586.6191 -7730.8022 8586.6191 c-7733.291 8586.873 -7735.7344 8586.4844 -7738.1719 8585.9775 c-7738.1934 8585.9785 -7738.2256 8585.9902 -7738.2344 8586.0215 c-7738.2344 8586.043 -7738.2222 8586.0752 -7738.1904 8586.085 c-7738.1904 8586.085 lf0.195 0.156 0.117 0 k-7738.166 8574.6445 m-7735.7969 8574.2676 -7733.4058 8574.3477 -7731.0298 8574.5898 c-7730.998 8574.5879 -7730.9766 8574.5664 -7730.9766 8574.5352 c-7730.9785 8574.5137 -7731 8574.4824 -7731.0215 8574.4824 c-7733.4082 8574.2422 -7735.791 8574.1602 -7738.1694 8574.5391 c-7738.2026 8574.5391 -7738.2222 8574.5605 -7738.2217 8574.5938 c-7738.2207 8574.625 -7738.1992 8574.6465 -7738.166 8574.6445 c-7738.166 8574.6445 lf0.335 0.268 0.201 0 k-7737.4351 8574.1113 m-7734.9282 8574.1152 -7732.4146 8574.2773 -7729.918 8573.8965 c-7729.8862 8573.8945 -7729.8647 8573.873 -7729.8662 8573.8418 c-7729.8672 8573.8086 -7729.8896 8573.7891 -7729.9209 8573.7891 c-7732.418 8574.1699 -7734.9297 8574.0293 -7737.4375 8574.0059 c-7737.46 8574.0059 -7737.481 8574.0273 -7737.4785 8574.0596 c-7737.4785 8574.0918 -7737.457 8574.1123 -7737.4351 8574.1113 c-7737.4351 8574.1113 lf0.205 0.164 0.123 0 k-7738.9766 8574.3262 m-7737.5039 8574.668 -7736.0078 8574.4023 -7734.5391 8574.2207 c-7734.5078 8574.2207 -7734.4873 8574.1973 -7734.499 8574.166 c-7734.5 8574.1348 -7734.5215 8574.1133 -7734.5537 8574.125 c-7736.0103 8574.2842 -7737.4961 8574.583 -7738.9473 8574.2188 c-7738.9785 8574.2207 -7739.0103 8574.2324 -7739.0098 8574.2637 c-7739.019 8574.2852 -7738.998 8574.3164 -7738.9766 8574.3262 c-7738.9766 8574.3262 lf-7732.3535 8573.7949 m-7731.1978 8573.9219 -7730.0273 8573.8145 -7728.8926 8573.5898 c-7728.8711 8573.5781 -7728.8506 8573.5566 -7728.8618 8573.5244 c-7728.8623 8573.5029 -7728.8945 8573.4824 -7728.916 8573.4941 c-7730.0503 8573.7402 -7731.1914 8573.7939 -7732.3462 8573.6885 c-7732.3794 8573.6895 -7732.3984 8573.7109 -7732.4087 8573.7324 c-7732.4082 8573.7646 -7732.3862 8573.7852 -7732.3535 8573.7949 c-7732.3535 8573.7949 lf0.335 0.268 0.201 0 k-7739.2681 8576.4473 m-7737.9214 8577.1885 -7736.3066 8576.5977 -7734.855 8576.6416 c-7734.8223 8576.6406 -7734.8022 8576.6191 -7734.8022 8576.5859 c-7734.8042 8576.5654 -7734.8262 8576.5449 -7734.8574 8576.5449 c-7736.2886 8576.4902 -7737.8823 8577.0801 -7739.2168 8576.3506 c-7739.2383 8576.3398 -7739.2695 8576.3516 -7739.291 8576.374 c-7739.3008 8576.3955 -7739.2886 8576.4277 -7739.2681 8576.4473 c-7739.2681 8576.4473 lf-7737.8945 8578.5645 m-7735.6719 8579.0449 -7733.3896 8578.6162 -7731.1504 8578.5625 c-7731.1177 8578.5615 -7731.0977 8578.5391 -7731.0977 8578.5078 c-7731.1001 8578.4863 -7731.1318 8578.4668 -7731.1519 8578.4668 c-7733.3833 8578.4775 -7735.6519 8578.9805 -7737.875 8578.457 c-7737.8975 8578.457 -7737.9287 8578.4688 -7737.9375 8578.502 c-7737.9375 8578.5225 -7737.9258 8578.5547 -7737.8945 8578.5645 c-7737.8945 8578.5645 lf-7732.0273 8575.1406 m-7730.3496 8575.9688 -7728.499 8576.502 -7726.603 8576.3613 c-7726.5718 8576.3613 -7726.5513 8576.3389 -7726.5527 8576.3066 c-7726.5527 8576.2754 -7726.5742 8576.2539 -7726.6074 8576.2559 c-7728.481 8576.416 -7730.3198 8575.8604 -7731.9873 8575.0547 c-7732.0078 8575.0449 -7732.041 8575.0449 -7732.0503 8575.0781 c-7732.061 8575.0996 -7732.061 8575.1309 -7732.0273 8575.1406 c-7732.0273 8575.1406 lfu0.5 0.85 1 0.45 k-7885 8581.9082 m-7885.0254 8582.4883 -7884.5664 8583.1875 -7883.167 8583.9902 C-7882.8521 8584.0029 -7881.3945 8584.0234 -7879.0889 8584.0488 C-7879.0889 8581.8223 L-7881.1382 8581.8457 -7883.1177 8581.8867 -7885 8581.9082 Cf-7884.5088 8580.9688 m-7879.0889 8580.8447 L-7879.0889 8579.8145 L-7882.644 8579.959 L-7883.8145 8580.3301 -7884.5088 8580.9688 Vf0.5 0.85 1 0.32 k-7879.0889 8580.8252 m-7884.4746 8580.9434 L-7884.7695 8581.2148 -7884.9849 8581.5566 -7885 8581.9277 C-7883.1177 8581.9063 -7881.1382 8581.8848 -7879.0889 8581.8613 C-7879.0889 8580.8252 Lf0.5 0.85 1 0.45 k-7774.1504 8580.6172 m-7852.3584 8581.541 -7879.1079 8581.8418 V-7879.1079 8584.0488 L-7862.8145 8584.2324 -7803.9902 8584.707 Y-7769.749 8583.6641 L-7770.457 8580.5684 L-7774.1504 8580.6172 Lf0.5 0.85 1 0.12 k-7879.1079 8579.8145 m-7879.1079 8580.8447 L-7770.4258 8579 L-7770.3833 8576.8633 L-7803.6553 8576.7129 L-7879.1079 8579.8145 Lfu0.065 0.052 0.039 0 k-7747.0728 8575.1465 m-7747.0366 8576.4258 L-7747.2954 8575.1172 L-7765.897 8579.6563 L-7766.9375 8579.2734 L-7766.8794 8579.6055 -7766.8398 8579.957 -7766.8306 8580.3223 c-7766.8242 8580.5283 -7766.8281 8580.7285 -7766.8398 8580.9258 C-7758.3862 8582.0986 -7748.9634 8577.6719 -7747.0366 8576.4258 C-7746.7402 8586.7559 L-7746.041 8586.8613 L-7745.8042 8579.207 L-7740.1816 8579.1543 L-7740.0898 8577.0137 -7740.0718 8575.0215 -7740.2407 8574.0352 C-7747.0728 8575.1465 Lf0.4 0.7 1 0 k-7770.457 8580.5879 m-7770.4258 8578.9805 L-7879.1079 8580.8252 L-7879.1079 8581.8613 L-7852.3584 8581.5605 -7770.457 8580.5879 YfUU0.025 0.02 0.015 0 k-7734.7344 8583.0293 m-7734.7344 8583.0625 -7734.7129 8583.082 -7734.6802 8583.082 c-7731.6714 8583.1133 -7729.4214 8582.9453 -7726.415 8582.8594 C-7726.4087 8582.7656 L-7729.3262 8582.8701 -7731.7607 8583.0078 -7734.6841 8582.9746 C-7734.7168 8582.9766 -7734.7358 8582.998 -7734.7344 8583.0293 Cf-7726.3994 8582.7656 m-7726.4082 8582.7441 L-7726.4087 8582.7656 L-7726.4063 8582.7656 -7726.4033 8582.7656 -7726.3994 8582.7656 Cf-7730.4487 8581.4238 m-7731.4458 8581.292 -7732.3394 8581.7656 -7733.2114 8582.1973 C-7733.2441 8582.208 -7733.2534 8582.2402 -7733.2422 8582.2715 C-7733.2305 8582.293 -7733.1982 8582.3027 -7733.1777 8582.291 c-7732.3262 8581.8301 -7731.4312 8581.4199 -7730.4678 8581.5195 c-7729.1079 8581.6621 -7727.9038 8582.375 -7726.5254 8582.4531 C-7726.4463 8582.3594 L-7728.04 8582.2656 -7728.8647 8581.623 -7730.4487 8581.4238 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 6)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7884.75 8563 m-7884.75 8587 L-7874.75 8587 L-7874.75 8563 L-7884.75 8563 Ln0 Ap0 O1 g-7874.75 8565 m-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 c-7877.5879 8565.2256 -7879.3198 8565.9346 -7880.7559 8567.0176 c-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 c-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c-7884.75 8576.8623 -7884.2319 8578.5996 -7883.3457 8580.0918 c-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 C-7874.75 8565 Lf0 R0 G1 J 1 j 0.5 w-7874.75 8584.6816 m-7877.7793 8583.7256 -7880.6074 8582.0674 -7883.3457 8580.0918 CS-7874.75 8579.0488 m-7877.8999 8576.6436 -7880.957 8573.9131 -7884.0942 8571.4639 CS-7880.7559 8567.0176 m-7878.6904 8568.1084 -7876.7017 8569.4668 -7874.75 8570.957 CS-7875.6982 8565.0479 m-7875.3809 8565.1309 -7875.063 8565.2148 -7874.75 8565.3145 CS-7880.7559 8567.0176 m-7879.3193 8565.9355 -7877.5879 8565.2256 -7875.6982 8565.0479 CS-7884.0942 8571.4639 m-7884.5122 8572.5645 -7884.75 8573.7529 -7884.75 8575 c-7884.75 8576.8623 -7884.231 8578.5996 -7883.3457 8580.0918 CS-7874.75 8565 m-7875.0703 8565 -7875.3857 8565.0186 -7875.6982 8565.0479 CS-7880.7559 8567.0176 m-7882.2529 8568.1465 -7883.4199 8569.6816 -7884.0942 8571.4639 CS-7883.3457 8580.0918 m-7881.6025 8583.0273 -7878.4102 8585 -7874.75 8585 CSU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 8)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7883.9521 8584.3125 m-7776.7954 8584.3125 L-7776.7954 8570.1855 L-7883.9521 8570.1855 L-7883.9521 8584.3125 Lnu0 O0 0 0 1 k-7882.2832 8583.623 m-7882.8535 8586 -7882.8184 8582.0039 V-7883.0479 8578.8027 L-7883.6167 8576.4551 L-7883.4502 8574.123 L-7881.9502 8573.4551 -7865.2832 8572.123 V-7858.6167 8570.7891 -7849.6167 8570.7891 V-7784.3936 8571.4766 -7779.4912 8572.8848 v-7820.3882 8570.875 -7822.9688 8571.5117 v-7783.8569 8573.1602 -7780.8545 8574.4316 v-7818.79 8572.5469 -7822.167 8574.1777 v-7787.249 8575.9102 -7783.021 8577.5313 v-7789.7217 8576.8828 -7791.5127 8577.082 v-7788.3896 8577.5703 l-7793.4194 8577.502 l-7796.3218 8577.1289 l-7788.4521 8578.2422 -7787.9033 8578.8086 v-7784.3154 8578.1309 -7798.5186 8578.3848 v-7832.1177 8574.4551 -7882.2832 8583.623 Vf/BBAccumRotation (5.805971) XT0 R0 0 0 0.5 K0.025 w-7883.9502 8573.123 m-7863.667 8571.2949 -7843.9727 8570.2207 v-7801.1514 8570.502 -7796.5737 8570.9004 v-7784.1631 8571.0313 -7776.7959 8572.0273 vS/BBAccumRotation (5.805971) XT0 0 0 1 K-7821.8369 8570.4082 m-7825.2959 8570.0273 -7851.2607 8570.2793 Y-7861.627 8570.1602 -7883.9502 8573.123 YS/BBAccumRotation (5.805971) XT-7820.9873 8573.6641 m-7790.3608 8574.582 -7783.6606 8575.2324 vS/BBAccumRotation (5.805971) XT0 0 0 0.5 K-7829.6201 8578.2051 m-7794.3706 8579.6172 -7791.4058 8580.1406 vS/BBAccumRotation (5.805971) XTUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 10)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7884 8586 m-7833.8921 8586 L-7833.8921 8529.9756 L-7884 8529.9756 L-7884 8586 Lnu0 O0.1 1 1 0 k-7846.9014 8551.5752 m-7848.7178 8545.0957 -7858.8247 8548.4658 Y-7858.791 8548.5303 L-7868.8999 8545.1611 -7870.7144 8551.6396 V-7876.6758 8569.0068 -7871.4922 8575.7451 V-7864.7529 8585.3369 -7860.6055 8585.3369 V-7857.0103 8585.2705 L-7852.8638 8585.2705 -7846.125 8575.6816 Y-7840.9409 8568.9424 -7846.9014 8551.5752 Yfu0 0 0 1 k-7851.3926 8529.9756 m-7852.1167 8531.4199 -7852.9238 8532.4756 V-7852.4058 8532.0635 -7851.5151 8531.1924 -7851.3926 8529.9756 Cf-7865.064 8532.4854 m-7865.8711 8531.4307 -7866.5942 8529.9863 Y-7866.4727 8531.2021 -7865.582 8532.0732 -7865.064 8532.4854 CfU0 0.61 0.74 0 k-7850.5977 8554.4609 m-7851.9038 8549.7959 -7859.1816 8552.2217 Y-7859.1567 8552.2686 L-7866.436 8549.8428 -7867.7417 8554.5078 V-7872.0337 8567.0117 -7868.3018 8571.8633 V-7863.4487 8578.7686 -7860.4634 8578.7686 V-7857.875 8578.7227 L-7854.8887 8578.7227 -7850.0366 8571.8174 Y-7846.3042 8566.9639 -7850.5977 8554.4609 Yfu1 Ap0.73 0.43 1 0.22 k0 R0 0 0 1 K-7854.6226 8557.2754 m-7853.813 8557.2754 -7853.1558 8556.6182 -7853.1558 8555.8096 c-7853.1558 8555 -7853.813 8554.3428 -7854.6226 8554.3428 c-7855.4321 8554.3428 -7856.0889 8555 -7856.0889 8555.8096 c-7856.0889 8556.6182 -7855.4321 8557.2754 -7854.6226 8557.2754 cb-7854.3638 8568.9971 m-7853.0806 8568.9971 -7852.0415 8568.1201 -7852.0415 8567.042 c-7852.0415 8565.9619 -7853.0806 8565.0869 -7854.3638 8565.0869 c-7855.645 8565.0869 -7856.6846 8565.9619 -7856.6846 8567.042 c-7856.6846 8568.1201 -7855.645 8568.9971 -7854.3638 8568.9971 cb-7853.834 8580.7861 m-7852.2817 8580.7861 -7851.0239 8580.1299 -7851.0239 8579.3213 c-7851.0239 8578.5117 -7852.2817 8577.8545 -7853.834 8577.8545 c-7855.3862 8577.8545 -7856.645 8578.5117 -7856.645 8579.3213 c-7856.645 8580.1299 -7855.3862 8580.7861 -7853.834 8580.7861 cb-7849.6104 8552.5264 m-7848.8687 8552.5264 -7848.2671 8551.8154 -7848.2671 8550.9365 c-7848.2671 8550.0596 -7848.8687 8549.3477 -7849.6104 8549.3477 c-7850.353 8549.3477 -7850.9546 8550.0596 -7850.9546 8550.9365 c-7850.9546 8551.8154 -7850.353 8552.5264 -7849.6104 8552.5264 cb-7848.0034 8574.083 m-7848.8818 8573.7354 -7849.1494 8572.335 -7848.603 8570.9541 c-7848.0566 8569.5752 -7846.9014 8568.7363 -7846.0234 8569.085 c-7845.145 8569.4326 -7844.877 8570.833 -7845.4233 8572.2139 c-7845.9702 8573.5947 -7847.125 8574.4316 -7848.0034 8574.083 cbu-7863.0566 8557.1592 m-7863.8662 8557.1592 -7864.5239 8556.502 -7864.5239 8555.6934 c-7864.5239 8554.8828 -7863.8662 8554.2266 -7863.0566 8554.2266 c-7862.248 8554.2266 -7861.5913 8554.8828 -7861.5913 8555.6934 c-7861.5913 8556.502 -7862.248 8557.1592 -7863.0566 8557.1592 cb-7863.3159 8568.8799 m-7864.5991 8568.8799 -7865.6382 8568.0049 -7865.6382 8566.9248 c-7865.6382 8565.8447 -7864.5991 8564.9697 -7863.3159 8564.9697 c-7862.0342 8564.9697 -7860.9951 8565.8447 -7860.9951 8566.9248 c-7860.9951 8568.0049 -7862.0342 8568.8799 -7863.3159 8568.8799 cb-7863.8457 8580.6709 m-7865.3975 8580.6709 -7866.6558 8580.0146 -7866.6558 8579.2041 c-7866.6558 8578.3936 -7865.3975 8577.7383 -7863.8457 8577.7383 c-7862.293 8577.7383 -7861.0352 8578.3936 -7861.0352 8579.2041 c-7861.0352 8580.0146 -7862.293 8580.6709 -7863.8457 8580.6709 cb-7868.0679 8552.4092 m-7868.811 8552.4092 -7869.4121 8551.6982 -7869.4121 8550.8213 c-7869.4121 8549.9443 -7868.811 8549.2334 -7868.0679 8549.2334 c-7867.3262 8549.2334 -7866.7241 8549.9443 -7866.7241 8550.8213 c-7866.7241 8551.6982 -7867.3262 8552.4092 -7868.0679 8552.4092 cb-7869.6758 8573.9678 m-7868.7983 8573.6201 -7868.5298 8572.2188 -7869.0762 8570.8379 c-7869.6226 8569.457 -7870.7778 8568.6201 -7871.6558 8568.9678 c-7872.5342 8569.3164 -7872.8032 8570.7178 -7872.2568 8572.0967 c-7871.7104 8573.4775 -7870.5552 8574.3154 -7869.6758 8573.9678 cbUU0 Ap0 0 0 1 k-7859.1318 8552.6553 m-7859.1318 8585.3145 lFu-7843.3906 8538.5303 m-7844.0815 8537.8369 -7847.019 8538.7021 Y-7848.229 8538.874 -7848.0562 8541.2939 Y-7847.019 8543.3682 -7847.7104 8543.1943 Y-7848.2998 8543.1943 -7849.855 8543.1143 -7850.7822 8543.0635 C-7851.1226 8541.6689 -7852.6128 8540.4756 -7854.7217 8539.7695 C-7852.7578 8536.4775 -7854.5176 8535.7949 -7856.2935 8535.79 C-7856.3096 8535.7021 -7856.332 8535.6162 -7856.3599 8535.5332 C-7854.1089 8535.5791 -7853.6392 8533.2588 Y-7853.4048 8533.0635 -7853.1606 8532.7861 -7852.9238 8532.4756 C-7853.1416 8532.6475 -7853.2944 8532.7393 Y-7854.2583 8532.7393 -7855.8774 8534.4941 -7856.4966 8535.207 C-7856.9194 8534.4434 -7857.853 8533.9111 -7858.9434 8533.9111 c-7860.0698 8533.9111 -7861.0322 8534.4795 -7861.4312 8535.2852 C-7861.9985 8534.624 -7863.6968 8532.751 -7864.6943 8532.751 C-7864.8462 8532.6572 -7865.064 8532.4854 V-7864.8281 8532.7939 -7864.583 8533.0732 -7864.3481 8533.2686 C-7863.8638 8535.6563 -7861.5254 8535.5342 V-7861.5449 8535.5889 -7861.5674 8535.6436 -7861.5806 8535.7021 C-7864.9238 8535.6924 -7863.937 8538.3174 -7863.2104 8539.6602 C-7865.5918 8540.376 -7867.2646 8541.7012 -7867.5239 8543.25 C-7868.4473 8543.2998 -7869.6729 8543.3584 -7870.1802 8543.3584 C-7870.8726 8543.5313 -7869.835 8541.458 V-7869.6626 8539.0391 -7870.8726 8538.8662 V-7873.8096 8538.002 -7874.501 8538.6934 V-7875.1919 8539.5566 -7876.0562 8538.3467 V-7875.1919 8540.0752 -7873.291 8539.5566 V-7870.6982 8538.8662 -7871.3906 8540.5938 V-7871.9087 8544.0498 -7870.1802 8544.7402 V-7868.0342 8545.8545 -7866.2822 8546.0889 V-7865.9087 8546.4141 -7865.4639 8546.7109 -7864.958 8546.9766 C-7867.5562 8547.0469 -7870.2246 8547.9209 -7871.0752 8550.9561 C-7871.5151 8552.2432 -7872.0518 8554.2432 V-7873.1025 8554.8252 -7874.3022 8556.0078 -7875.541 8558.2627 C-7876.394 8561.4502 -7877.167 8556.7129 V-7878.3975 8553.6494 -7879.6504 8553.5381 V-7878.4702 8555.2871 -7878.9038 8556.416 V-7877.2998 8560.917 -7875.6138 8559.8994 V-7874.0986 8559.2197 -7872.688 8556.8154 V-7873.0698 8558.4971 -7873.4326 8560.417 -7873.6743 8562.3906 C-7874.4888 8562.3975 L-7876.3506 8561.4795 -7876.3262 8564.959 V-7877.1226 8568.9453 -7876.3594 8571.6826 V-7875.647 8574.1504 -7878.1274 8572.9307 V-7879.2842 8573.3242 -7879.9839 8572.7881 V-7882.3882 8571.4131 -7884 8573.124 V-7882.147 8572.8799 -7881.4482 8573.417 V-7879.9785 8573.5615 -7879.897 8574.1787 V-7876.9561 8574.8555 -7876.188 8574.0771 V-7874.417 8573.2139 -7875.1304 8570.3604 V-7875.8799 8562.4814 -7874.3198 8564.4053 V-7874.1182 8564.4219 -7873.8784 8564.5176 V-7874.1519 8568.4326 -7873.8018 8572.3252 -7871.9961 8574.8516 C-7875.4536 8567.333 -7870.2974 8552.3037 Y-7868.9609 8547.5303 -7863.127 8548.1016 -7860.145 8548.7344 C-7860.0718 8550.1299 -7859.8374 8551.9492 -7859.1318 8552.6553 C-7858.2134 8550.6963 -7858.2358 8549.0732 V-7857.0762 8548.7217 -7850.2817 8546.8447 -7847.4487 8550.3369 C-7848.4312 8547.8135 -7850.8262 8547.0186 -7853.2007 8546.9189 C-7852.667 8546.6318 -7852.2041 8546.3047 -7851.8257 8545.9502 C-7850.041 8545.7861 -7847.7104 8544.5771 Y-7845.9814 8543.8857 -7846.5015 8540.4307 Y-7847.1919 8538.7021 -7844.5991 8539.3936 Y-7842.7002 8539.9111 -7841.835 8538.1836 Y-7842.7002 8539.3936 -7843.3906 8538.5303 Yf-7837.9082 8572.9521 m-7838.6074 8573.4893 -7839.7632 8573.0938 Y-7842.2446 8574.3135 -7841.5327 8571.8467 Y-7840.769 8569.1104 -7841.564 8565.1221 Y-7841.541 8561.6445 -7843.4014 8562.5596 Y-7844.0342 8562.5557 L-7844.3198 8560.6123 -7844.7046 8558.7549 -7845.0898 8557.1699 C-7843.7129 8559.4199 -7842.2778 8560.0635 Y-7840.5913 8561.082 -7838.9878 8556.5791 Y-7839.4214 8555.4502 -7838.2417 8553.7021 Y-7839.4937 8553.8125 -7840.7246 8556.876 Y-7841.4976 8561.6152 -7842.3511 8558.4268 Y-7843.5776 8556.1904 -7844.769 8555.0098 -7845.814 8554.4229 C-7846.2026 8553.0635 -7846.4858 8552.2393 Y-7846.7002 8551.4727 -7847.0337 8550.8486 -7847.4487 8550.3369 C-7847.3799 8550.5127 -7847.3174 8550.6982 -7847.2632 8550.8916 C-7841.3022 8568.2588 -7846.4858 8574.9971 V-7853.2246 8584.5869 -7857.3721 8584.5869 V-7860.9663 8584.6514 L-7865.1138 8584.6514 -7871.853 8575.0615 Y-7871.9038 8574.9961 -7871.9463 8574.9219 -7871.9961 8574.8516 C-7871.7378 8575.4141 -7871.437 8575.9404 -7871.0752 8576.4092 C-7864.3359 8586 -7860.189 8586 V-7856.5942 8585.9346 L-7852.4482 8585.9346 -7845.709 8576.3447 Y-7843.5801 8573.5771 -7843.3306 8569.0176 -7843.7769 8564.6055 C-7843.6553 8564.5752 -7843.5698 8564.5684 Y-7842.0112 8562.6475 -7842.7598 8570.5244 Y-7843.4746 8573.3789 -7841.7026 8574.2402 Y-7840.9351 8575.0186 -7837.9946 8574.3428 Y-7837.9136 8573.7256 -7836.4434 8573.5811 Y-7835.7446 8573.0449 -7833.8921 8573.2881 Y-7835.5024 8571.5771 -7837.9082 8572.9521 YfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 34)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7884.0254 8586.0264 m-7828.0542 8586.0264 L-7828.0542 8524.5342 L-7884.0254 8524.5342 L-7884.0254 8586.0264 Lnuu0 O0.0745 0.9 0.9019 0.18 k0 R0 0 0 1 K1 J 1 j 0.0518 w-7857.5991 8562.7217 m-7857.3594 8573.5215 -7862.8794 8583.8398 v-7862.4009 8586 -7860.959 8586 v-7861.2002 8582.6406 -7860.2393 8582.1611 v-7855.9199 8570.1602 -7856.6382 8562.2402 v-7857.5991 8562.7217 lb-7857.5991 8562.7217 m-7859.2793 8568 -7871.0391 8569.2012 v-7875.3594 8569.6807 -7875.5991 8571.1211 v-7869.1206 8561.5195 -7868.1602 8561.7607 v-7881.3594 8556.001 -7884 8550.7197 v-7878.959 8553.6006 -7875.5991 8551.4404 v-7867.6802 8551.2012 -7862.6406 8553.3613 v-7858.8008 8555.2813 -7866.7202 8539.2012 v-7862.8794 8550.9609 -7859.2793 8524.5605 v-7858.3198 8529.8408 -7856.8799 8531.2813 v-7850.8799 8538.9609 -7851.8398 8541.1211 v-7852.3198 8544.9609 -7847.7598 8538.7207 v-7848 8548.3213 -7850.4009 8551.6807 v-7852.5591 8555.2813 -7846.5591 8553.1211 v-7840.5591 8551.2012 -7835.2793 8552.8809 v-7829.7598 8554.3203 -7828.0801 8551.4404 v-7839.8398 8563.9209 -7845.5991 8563.6807 v-7843.9194 8567.2813 l-7841.519 8572.0811 -7842 8573.2813 v-7857.2681 8563.8828 -7857.5991 8562.7217 vb-7857.5991 8562.7217 m-7854.959 8544.2402 -7857.5991 8536.5605 v-7859.998 8526.001 -7859.2793 8524.5605 vS-7856.1602 8551.4404 m-7850.1602 8546.6406 -7848.959 8541.3604 vS-7856.1602 8550.7197 m-7865.0391 8543.041 -7866.7202 8539.2012 vS-7828.0801 8551.4404 m-7829.2793 8553.6006 -7857.3594 8561.7607 y-7862.4009 8556.2422 -7873.9199 8553.8408 v-7881.5986 8552.8809 -7884 8550.7197 vS-7874.6382 8569.6807 m-7863.1191 8560.5615 -7857.3594 8561.7607 y-7843.1992 8568 -7842 8573.2813 vSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 36)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7883.8496 8585.9961 m-7833.96 8585.9961 L-7833.96 8534.9258 L-7883.8496 8534.9258 L-7883.8496 8585.9961 Lnu0 O0.025 0.1 0.475 0 k-7862.1504 8553.9043 m-7864.4766 8552.8125 -7866.6914 8552.4434 -7868.373 8552.9238 c-7869.0518 8553.1172 -7869.645 8553.4473 -7870.123 8553.9238 c-7870.6006 8554.4023 -7870.9297 8554.9951 -7871.123 8555.6729 c-7872.0088 8558.7715 -7870.0103 8563.6777 -7865.9233 8567.7666 c-7861.834 8571.8535 -7856.9297 8573.8516 -7853.8286 8572.9668 c-7853.1519 8572.7715 -7852.5586 8572.4424 -7852.0806 8571.9658 c-7851.603 8571.4883 -7851.2754 8570.8955 -7851.082 8570.2168 c-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c-7853.582 8561.21 -7854.791 8559.6133 -7856.2793 8558.123 c-7858.1504 8556.2539 -7860.1914 8554.8242 -7862.1504 8553.9043 cfu0.0035 0.014 0.0665 0 k-7861.2183 8552.9727 m-7863.8306 8552.0215 -7866.3975 8551.9688 -7868.373 8552.9238 C-7866.6914 8552.4434 -7864.4766 8552.8125 -7862.1504 8553.9043 c-7861.6191 8554.1543 -7861.0806 8554.4434 -7860.543 8554.7676 C-7858.8984 8554.0537 L-7859.667 8553.6172 -7860.4434 8553.2539 -7861.2183 8552.9727 cf0.015 0.06 0.285 0 k-7858.8984 8554.0537 m-7860.543 8554.7676 L-7859.0962 8555.6348 -7857.6426 8556.7607 -7856.2793 8558.123 c-7856.1538 8558.25 -7856.0327 8558.3779 -7855.9102 8558.5059 C-7855.2153 8556.8633 L-7856.3706 8555.7236 -7857.6191 8554.7813 -7858.8984 8554.0537 CfUu0.039 0.156 0.741 0 k-7849.687 8541.4043 m-7849.9746 8541.6914 -7861.2183 8552.9727 Y-7860.4434 8553.2539 -7859.667 8553.6172 -7858.8984 8554.0537 C-7845.4146 8540.5703 L-7847.061 8540.0996 -7848.6406 8540.3555 -7849.687 8541.4043 cf0.025 0.1 0.475 0 k-7845.4146 8540.5703 m-7858.8984 8554.0537 L-7857.584 8554.8027 -7856.2969 8555.7754 -7855.1143 8556.957 c-7855.084 8556.9863 -7855.0586 8557.0156 -7855.0278 8557.0449 C-7841.3408 8543.3574 L-7841.5264 8543.1328 -7841.7202 8542.9141 -7841.9302 8542.7012 c-7843.0103 8541.623 -7844.2305 8540.9082 -7845.4146 8540.5703 CfUu0.0115 0.046 0.2185 0 k-7835.9346 8550.3926 m-7833.5337 8547.9893 -7833.335 8544.0898 -7835.1382 8540.6973 C-7836.2954 8541.1182 L-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 cf0.015 0.06 0.285 0 k-7843.5337 8535.5957 m-7842.582 8534.9258 L-7845.2046 8534.3516 -7847.8306 8534.9141 -7849.6206 8536.7061 c-7848.1719 8535.2578 -7845.9082 8534.9307 -7843.5337 8535.5957 Cf0.0295 0.118 0.5605 0 k-7843.5337 8535.5957 m-7845.9082 8534.9307 -7848.1719 8535.2578 -7849.6206 8536.7061 c-7851.019 8538.1055 -7851.3706 8540.2637 -7850.7954 8542.5469 C-7848.8672 8539.5449 -7845.4082 8540.5537 V-7843.585 8535.6309 L-7843.5337 8535.5957 Lf*u0.048 0.192 0.912 0 k1 D-7835.9346 8550.3926 m-7837.2817 8551.7383 -7839.332 8552.1133 -7841.5234 8551.627 C-7851.6714 8561.7734 L-7851.7695 8561.5684 -7851.7695 8561.5684 -7851.6714 8561.7734 c-7850.2246 8564.8145 -7849.9702 8567.916 -7851.082 8570.2168 C-7850.5176 8568.2461 -7851.1226 8565.5449 -7852.6855 8562.7891 c-7853.5054 8561.3438 -7854.5918 8559.8848 -7855.9102 8558.5059 C-7855.2153 8556.8633 L-7855.1816 8556.8945 -7855.1465 8556.9238 -7855.1143 8556.957 c-7855.084 8556.9883 -7855.0566 8557.0176 -7855.0273 8557.0469 c-7855.0278 8557.0469 -7855.0278 8557.0469 -7855.0278 8557.0449 C-7841.3408 8543.3574 L-7836.3262 8541.1289 L-7836.2954 8541.1182 L-7834.0938 8544.4961 -7833.8398 8548.2949 -7835.9346 8550.3926 cf*U0.0215 0.086 0.4085 0 k0 D-7842.582 8534.9258 m-7843.5337 8535.5957 L-7841.6846 8536.1113 -7839.7656 8537.2285 -7838.1138 8538.8828 c-7837.4063 8539.5889 -7836.7998 8540.3418 -7836.2954 8541.1182 C-7835.1382 8540.6973 L-7835.6553 8539.7246 -7836.3374 8538.793 -7837.1802 8537.9512 c-7838.7695 8536.3594 -7840.6758 8535.3428 -7842.582 8534.9258 Cf0.0205 0.082 0.3895 0 k-7836.2954 8541.1182 m-7836.7998 8540.3418 -7837.4063 8539.5889 -7838.1138 8538.8828 c-7839.7656 8537.2285 -7841.6846 8536.1113 -7843.5337 8535.5957 C-7843.585 8535.6309 L-7845.4082 8540.5537 L-7844.2114 8540.9219 -7842.9878 8541.6436 -7841.9302 8542.7012 c-7841.7202 8542.9141 -7841.5264 8543.1328 -7841.3408 8543.3574 C-7836.3262 8541.1289 L-7836.2954 8541.1182 LfUu0.445 0.356 0.267 0 k-7883.8496 8585.9961 m-7861.957 8562.9688 L-7862.2007 8562.6494 -7862.5752 8562.6133 -7862.8887 8562.6592 C-7867.1802 8567.2891 -7878.3145 8579.4561 -7882.7266 8584.2793 C-7883.5649 8585.3516 -7884 8585.9932 -7883.8496 8585.9961 Cf0.15 0.12 0.09 0 k-7883.834 8585.9961 m-7882.6606 8585.7031 -7861.6934 8564.0029 Y-7861.6934 8563.502 -7861.7993 8563.1758 -7861.957 8562.9688 C-7883.8496 8585.9961 L-7883.8442 8585.9961 -7883.8418 8586 -7883.834 8585.9961 cf0.2 0.16 0.12 0 k-7882.7266 8584.2793 m-7878.3145 8579.4561 -7867.1802 8567.2891 -7862.8887 8562.6592 C-7863.2002 8562.7041 -7863.4526 8562.8301 Y-7864.603 8563.1328 -7878.5742 8578.9619 -7882.7266 8584.2793 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 37)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7882.9502 8585.2324 m-7833.0391 8585.2324 L-7833.0391 8521.1152 L-7882.9502 8521.1152 L-7882.9502 8585.2324 Lnu0 O0 0 0 1 k0 R0 0 0 1 K0 w-7833.2358 8521.1152 m-7833.6064 8521.248 -7833.9858 8521.2832 -7834.3833 8521.2031 c-7834.4863 8521.168 l-7834.5254 8521.1602 -7834.5703 8521.1787 -7834.6025 8521.1992 c-7834.9434 8521.3926 l-7838.7129 8523.2959 -7842.0962 8525.8965 -7844.5 8529.4473 c-7845.9634 8531.5918 -7847.123 8533.8789 -7848.7993 8535.8564 c-7849.1729 8536.209 -7849.1758 8536.7725 -7848.834 8537.1309 c-7848.4951 8537.501 -7847.918 8537.5078 -7847.561 8537.165 c-7847.4038 8537.21 l-7847.2642 8537.1289 -7847.0742 8537.0703 -7847.0234 8536.957 c-7845.853 8534.2031 -7845.1895 8531.5137 -7843.4336 8529.1387 c-7841.1719 8526.0947 -7838.1777 8523.9941 -7835.0298 8522.0234 c-7834.3672 8521.6055 L-7834.4966 8521.6348 L-7833.7695 8521.6426 l-7833.791 8521.6113 -7833.8008 8521.5957 -7833.8223 8521.5645 C-7833.6064 8521.5234 -7833.377 8521.4746 -7833.1626 8521.4336 c-7833.0762 8521.4238 -7833.0186 8521.3389 -7833.0391 8521.2383 c-7833.0503 8521.1523 -7833.1382 8521.1084 -7833.2358 8521.1152 c-7833.2358 8521.1152 lb-7849.2222 8534.9951 m-7849.5742 8534.8066 -7849.9658 8534.6719 -7850.248 8534.3887 c-7856.4521 8528.1719 -7866.6802 8527.2734 -7874.0488 8533.6855 C-7874.1582 8533.7813 -7874.1582 8533.957 -7874.063 8534.0645 C-7871.0527 8532.9434 -7862.8838 8534.375 -7859.3223 8537.4121 C-7859.2534 8537.4668 -7859.1465 8537.4531 -7859.1055 8537.3711 C-7859.0503 8537.3047 -7859.0664 8537.1953 -7859.1328 8537.1563 C-7862.5625 8534.0859 -7867.0674 8532.29 -7871.6729 8532.748 C-7868.8535 8531.1855 -7865.6313 8530.4941 -7862.3984 8530.6885 c-7857.7144 8530.9717 -7853.4634 8533.1191 -7849.3711 8535.2793 c-7849.291 8535.3193 -7849.1978 8535.293 -7849.1553 8535.2109 C-7849.1016 8535.1309 -7849.1426 8535.0352 -7849.2222 8534.9951 cb-7858.647 8536.3359 m-7860.2266 8540.3613 -7862.3911 8544.3203 -7865.8018 8547.0762 c-7865.9648 8547.2119 -7865.9946 8547.4492 -7865.8711 8547.6055 c-7865.7344 8547.7676 -7865.5049 8547.7793 -7865.3481 8547.6563 c-7861.123 8545.5967 -7858.1904 8541.1309 -7858.1626 8536.4014 c-7858.1626 8536.4014 l-7858.1328 8536.2676 -7858.2354 8536.1348 -7858.3633 8536.1221 c-7858.5039 8536.1055 -7858.6318 8536.1973 -7858.647 8536.3359 c-7858.647 8536.3359 lb-7852.9414 8541.0176 m-7853.042 8541.1816 -7853.1152 8541.3838 -7853.2617 8541.4824 c-7856.0806 8543.3906 -7858.9785 8544.6309 -7861.8848 8546.1328 c-7862.0503 8546.209 -7862.1118 8546.418 -7862.0313 8546.5703 c-7861.9512 8546.7227 -7861.7559 8546.7793 -7861.5898 8546.7041 c-7858.439 8545.3232 -7854.313 8544.5 -7852.6729 8541.1797 c-7852.6289 8541.1113 -7852.6455 8541.0146 -7852.7266 8540.9648 c-7852.7959 8540.9199 -7852.897 8540.9492 -7852.9414 8541.0176 c-7852.9414 8541.0176 lb-7852.6602 8541.918 m-7852.4438 8542.4297 -7852.1431 8542.8896 -7852.0503 8543.4355 c-7851.2183 8548.2773 -7851.1152 8553.042 -7852.248 8557.6875 c-7852.248 8557.6875 l-7852.3418 8557.9531 -7852.2114 8558.2441 -7851.9438 8558.3389 c-7851.6777 8558.4336 -7851.3882 8558.3125 -7851.2935 8558.0479 c-7849.293 8552.8115 -7849.897 8546.7373 -7852.3711 8541.7832 c-7852.4063 8541.7002 -7852.498 8541.6689 -7852.582 8541.6914 c-7852.6641 8541.7275 -7852.6978 8541.835 -7852.6602 8541.918 c-7852.6602 8541.918 lb-7851.5352 8557.5938 m-7848.8984 8555.2275 -7846.6816 8552.252 -7845.853 8548.7363 c-7845.853 8548.7363 l-7845.7246 8548.1816 -7846.0742 8547.623 -7846.6416 8547.4902 c-7847.1992 8547.375 -7847.7578 8547.7246 -7847.8862 8548.2793 c-7848.5649 8551.5313 -7849.8711 8554.6729 -7851.7954 8557.3867 c-7851.7954 8557.3867 l-7851.8462 8557.4551 -7851.834 8557.5576 -7851.7695 8557.6201 c-7851.6992 8557.6699 -7851.5977 8557.6582 -7851.5352 8557.5938 c-7851.5352 8557.5938 lb-7836.3711 8550.1826 m-7837.7114 8545.8301 -7840.2598 8542.0693 -7843.689 8539.1533 C-7843.729 8539.0723 -7843.8242 8539.0322 -7843.9038 8539.0859 C-7843.9863 8539.127 -7844.0122 8539.2207 -7843.9722 8539.3018 C-7843.957 8539.7891 -7843.7144 8540.2334 -7843.4458 8540.5313 c-7838.4063 8546.1621 -7834.9902 8554.7197 -7837.3433 8561.9551 C-7837.0762 8556.4512 -7838.7241 8550.3008 -7842.1362 8545.6738 c-7843.1606 8544.2695 -7844.7422 8544.1211 -7846.3081 8544.2031 C-7846.4023 8544.1895 -7846.4834 8544.2432 -7846.4961 8544.3369 c-7846.5098 8544.4189 -7846.4551 8544.5137 -7846.3623 8544.5254 C-7843.1479 8545.7695 -7841.4878 8549.2246 -7840.084 8552.1943 c-7838.415 8555.7441 -7837.7017 8559.6387 -7838.0054 8563.5 C-7838.0454 8563.6777 -7838.1138 8565.3975 -7837.9775 8565.4102 C-7837.8306 8565.4395 -7837.709 8565.3438 -7837.6802 8565.1943 C-7837.645 8565.0449 -7834.6426 8555.7988 -7836.3711 8550.1826 cb-7844.4863 8537.4912 m-7843.3945 8533.6211 -7841.1094 8530.251 -7838.4824 8527.2383 c-7838.3306 8527.1045 -7838.3145 8526.8867 -7838.4502 8526.7354 c-7838.5752 8526.6006 -7838.8047 8526.582 -7838.957 8526.7178 c-7842.3306 8529.332 -7843.4487 8533.541 -7844.7954 8537.375 c-7844.7954 8537.375 l-7844.8262 8537.4648 -7844.7754 8537.5586 -7844.6982 8537.5869 c-7844.6094 8537.6191 -7844.5166 8537.5684 -7844.4863 8537.4912 c-7844.4863 8537.4912 lb-7838.5313 8562.1094 m-7838.5991 8562.0566 -7838.707 8562.083 -7838.748 8562.1504 C-7838.9634 8562.4746 -7840.6914 8564.5195 -7841.3926 8565.1406 c-7846.1719 8569.3945 -7849.5137 8573.9609 -7857.5391 8577.7227 c-7864.4512 8580.9639 -7867.1113 8583.5957 -7874.3862 8581.8262 c-7877.687 8581.0293 -7879.0313 8580.5313 -7880.4351 8575.4551 C-7881.9473 8569.2988 -7880.8672 8571.7832 -7881.084 8564.4385 c-7881.2222 8559.6973 -7884 8548.4551 -7871.5254 8534.2598 C-7871.4199 8534.1484 -7871.4336 8533.9961 -7871.5337 8533.9072 C-7871.6328 8533.8027 -7871.7959 8533.8164 -7871.8862 8533.916 C-7877.5786 8538.7168 -7881.0234 8545.6582 -7882.3145 8552.9424 c-7883.2871 8558.4668 -7882.9199 8563.25 -7882.666 8569.6367 c-7882.5688 8572.0938 -7883.6855 8579.0723 -7878.9102 8583.0625 c-7875.3926 8586 -7870.3911 8585.5469 -7866.3545 8584.1563 c-7860.6992 8582.2119 -7855.9727 8579.1465 -7850.8711 8575.6094 c-7847.2656 8573.125 -7839.2881 8563.2852 -7838.4785 8562.3262 C-7838.4351 8562.2588 -7838.4502 8562.1504 -7838.5313 8562.1094 Cb-7873.0503 8549.3057 m-7872.168 8548.5029 -7871.7017 8549.8457 -7871.4297 8550.6016 c-7871.1626 8551.3574 -7870.189 8551.25 -7870.5127 8551.5732 c-7870.8369 8551.8975 -7870.8369 8551.9521 -7871.3232 8551.5195 c-7871.8086 8551.0879 -7871.8086 8551.7363 -7872.5649 8551.25 c-7873.3198 8550.7627 -7873.645 8549.8457 -7873.0503 8549.3057 cb-7865.6519 8553.9492 m-7865.3657 8553.5918 -7864.6802 8553.5723 -7864.4648 8553.8945 c-7864.25 8554.2197 -7863.3306 8554.2734 -7863.4937 8554.5967 c-7863.6543 8554.9219 -7863.6016 8555.1387 -7864.0874 8554.9219 c-7864.5737 8554.7051 -7864.4121 8555.2998 -7864.897 8555.084 c-7865.3833 8554.8672 -7865.8687 8554.2197 -7865.6519 8553.9492 cb-7857.6074 8559.0791 m-7857.1206 8558.7559 -7855.8794 8559.5117 -7856.4727 8559.5117 c-7857.0674 8559.5117 -7856.311 8560.2676 -7856.8521 8560.4834 c-7857.3906 8560.6992 -7857.2832 8560.4297 -7857.6074 8560.6445 c-7857.9297 8560.8613 -7858.3633 8561.2393 -7858.5239 8560.4297 c-7858.6855 8559.6191 -7858.3633 8559.6191 -7857.9849 8559.3496 c-7857.6074 8559.0791 -7857.6074 8559.0791 yb-7872.2402 8559.3496 m-7871.1074 8559.2422 -7871.8633 8559.998 -7871.269 8560.4834 c-7870.6738 8560.9697 -7869.918 8561.6172 -7870.729 8561.4004 c-7871.5391 8561.1855 -7872.9961 8561.6719 -7872.9434 8560.5381 c-7872.8887 8559.4033 -7872.6328 8559.3867 -7872.2402 8559.3496 cb-7866.5703 8567.6113 m-7866.1016 8567.3438 -7866.6802 8567.7197 -7866.0303 8567.6113 c-7865.3833 8567.5039 -7864.7886 8567.6113 -7865.2207 8567.8281 c-7865.6519 8568.0439 -7866.3008 8568.1523 -7866.4634 8567.9893 c-7866.625 8567.8281 -7866.9473 8567.8281 -7866.5703 8567.6113 cb-7857.0674 8567.1797 m-7857.4785 8566.1797 -7856.0962 8566.4238 -7855.4473 8566.7461 c-7854.7998 8567.0723 -7853.8262 8566.4775 -7854.4209 8566.9102 c-7855.0137 8567.3418 -7854.7998 8566.9102 -7855.3926 8567.2334 c-7855.9873 8567.5566 -7856.6895 8568.0977 -7857.0674 8567.1797 cb-7872.6738 8573.0664 m-7872.7222 8572.0752 -7871.8086 8572.957 -7871.269 8573.0117 c-7870.729 8573.0664 -7870.0801 8573.0664 -7870.2432 8573.2813 c-7870.4038 8573.498 -7870.459 8573.498 -7871.1626 8573.7129 c-7871.8633 8573.9297 -7872.6191 8574.1445 -7872.6738 8573.0664 cb-7873.1582 8567.6113 m-7874.0664 8567.9746 -7874.293 8567.8809 -7874.5625 8568.2051 c-7874.834 8568.5293 -7875.1558 8569.2314 -7875.5352 8568.0977 c-7875.9121 8566.9629 -7875.4282 8565.7764 -7875.0479 8565.9375 c-7874.6714 8566.0996 -7874.293 8566.7461 -7873.8618 8566.9629 c-7873.4297 8567.1797 -7872.6191 8567.3945 -7873.1582 8567.6113 cbUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 41)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7884 8586 m-7803 8586 L-7803 8481 L-7884 8481 L-7884 8586 Lnuuu0 O0 0 0 1 k-7865.8057 8498.4258 m-7866.0742 8496.6621 -7867.1602 8495.291 -7868.5239 8495.3965 c-7869.8862 8495.502 -7870.707 8497.0234 -7870.7432 8498.8066 c-7870.748 8499.0693 -7870.6743 8500.2441 -7870.6304 8500.4775 C-7870.6382 8500.582 -7870.6191 8500.6738 -7870.6104 8500.7803 c-7870.5142 8502.0254 -7869.3574 8503.3604 -7867.9414 8503.25 c-7866.5249 8503.1406 -7865.4897 8501.8613 -7865.6367 8500.4727 c-7865.644 8500.4072 -7865.6958 8499.626 -7865.707 8499.5625 C-7865.6816 8499.2852 -7865.7598 8498.7256 -7865.8057 8498.4258 cf-7876.2646 8507.7334 m-7876.9946 8515.916 -7871.5015 8515.1191 v-7868.3682 8514.0186 -7869.4414 8511.1211 v-7869.6426 8509.752 -7871.7847 8508.498 v-7872.146 8508.25 -7872.7632 8507.1016 v-7873.1294 8505.5977 -7874.5186 8505.2979 v-7876.0762 8505.251 -7876.2646 8507.7334 vf-7850.7646 8516.4971 mF-7850.0762 8514.3408 m-7850.7847 8513.1934 -7853.8848 8513.6279 Y-7854.811 8513.6885 -7855.3799 8513.1113 Y-7857.8394 8509.0918 -7861.0386 8509.8857 -7861.4082 8509.9932 C-7861.4097 8509.9863 L-7864.999 8510.6045 -7865.2666 8515.6035 V-7865.4912 8516.3828 -7866.335 8516.7695 V-7869.2695 8517.8613 -7869.3481 8519.208 V-7869.8999 8521.1152 -7867.6006 8521.7422 V-7865.6792 8522.2568 -7863.7886 8519.8945 V-7862.6113 8518.6797 -7859.5762 8517.9395 V-7859.5728 8517.9531 L-7856.3594 8517.0459 -7854.6392 8517.5889 Y-7851.8521 8518.7676 -7850.4063 8517.4014 Y-7848.6826 8515.7559 -7850.0762 8514.3408 Yf-7863.9834 8497.8789 m-7864.5854 8496.2002 -7864.2822 8494.4775 -7863.0327 8493.9229 c-7861.7842 8493.3672 -7860.3384 8494.3164 -7859.4585 8495.8672 c-7859.3286 8496.0957 -7858.8359 8497.165 -7858.7632 8497.3906 C-7858.7065 8497.4785 -7858.6792 8497.5684 -7858.6362 8497.667 c-7858.1289 8498.8086 -7858.5122 8500.5303 -7859.8105 8501.1074 c-7861.1089 8501.6855 -7862.6279 8501.0527 -7863.1582 8499.7617 c-7863.1831 8499.7002 -7863.5078 8498.9883 -7863.5298 8498.9268 C-7863.6831 8498.6963 -7863.8809 8498.166 -7863.9834 8497.8789 cf-7849.7129 8500.9316 m-7845.1802 8507.7822 -7850.3911 8509.6943 v-7853.6714 8510.2168 -7854.103 8507.1572 v-7854.5786 8505.8564 -7853.29 8503.7354 v-7853.0903 8503.3447 -7853.0938 8502.04 v-7853.4858 8500.5449 -7852.4082 8499.6182 v-7851.0591 8498.8359 -7849.7129 8500.9316 vfUu-7824.7358 8550.1074 m-7824.3687 8548.3623 -7824.9048 8546.6963 -7826.2183 8546.3164 c-7827.5322 8545.9375 -7828.8345 8547.0752 -7829.4937 8548.7324 c-7829.5903 8548.9775 -7829.9326 8550.1025 -7829.9746 8550.3369 C-7830.0176 8550.4326 -7830.0322 8550.5244 -7830.0625 8550.6279 c-7830.4087 8551.8271 -7829.7935 8553.4805 -7828.4282 8553.875 c-7827.063 8554.2695 -7825.645 8553.4365 -7825.2969 8552.085 c-7825.2793 8552.0205 -7825.0552 8551.2705 -7825.0425 8551.207 C-7824.9214 8550.9551 -7824.7983 8550.4053 -7824.7358 8550.1074 cf-7838.2705 8554.6172 m-7841.8242 8562.0244 -7836.3999 8563.2061 v-7833.0801 8563.2754 -7833.0688 8560.1846 v-7832.7778 8558.8311 -7834.3433 8556.9072 v-7834.5942 8556.5459 -7834.7695 8555.2539 v-7834.5854 8553.7188 -7835.7793 8552.9492 v-7837.2222 8552.3594 -7838.2705 8554.6172 vf-7817.4648 8571.7695 mF-7816.063 8569.9912 m-7816.3247 8568.6689 -7819.3799 8567.9883 Y-7820.27 8567.7197 -7820.5986 8566.9795 Y-7821.4922 8562.3535 -7824.7666 8561.9746 -7825.1494 8561.9453 C-7825.1494 8561.9395 L-7828.7271 8561.2588 -7830.731 8565.8467 V-7831.2153 8566.4961 -7832.1416 8566.5625 V-7835.272 8566.5557 -7835.8169 8567.7891 V-7837.0039 8569.3809 -7835.0713 8570.7764 V-7833.4526 8571.9316 -7830.853 8570.3818 V-7829.3242 8569.6582 -7826.2222 8570.0293 V-7826.2231 8570.042 L-7822.896 8570.3213 -7821.4766 8571.4326 Y-7819.2793 8573.5146 -7817.4463 8572.7432 Y-7815.2554 8571.8057 -7816.063 8569.9912 Yf-7822.8374 8550.2354 m-7822.813 8548.4512 -7821.9258 8546.9453 -7820.5601 8546.8633 c-7819.1943 8546.7803 -7818.1743 8548.1768 -7817.895 8549.9385 c-7817.854 8550.1973 -7817.7666 8551.3711 -7817.7778 8551.6094 C-7817.7559 8551.7109 -7817.7617 8551.8037 -7817.7559 8551.9121 c-7817.6807 8553.1592 -7818.644 8554.6367 -7820.0625 8554.7217 c-7821.4814 8554.8066 -7822.6826 8553.6826 -7822.7246 8552.2871 c-7822.7271 8552.2217 -7822.7822 8551.4404 -7822.7798 8551.375 C-7822.8433 8551.1045 -7822.8423 8550.54 -7822.8374 8550.2354 cf-7811.0186 8557.5625 m-7809.1777 8565.5684 -7814.7271 8565.5303 v-7817.9834 8564.8691 -7817.3154 8561.8516 v-7817.3032 8560.4668 -7815.353 8558.9326 v-7815.0278 8558.6377 -7814.5742 8557.415 v-7814.417 8555.876 -7813.083 8555.3877 v-7811.5454 8555.1279 -7811.0186 8557.5625 vfUU1 Ap-7884 8586 m-7884 8481 L-7803 8481 L-7803 8586 L-7884 8586 LnUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 42)0 Au0 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7857.4609 8559.085 m-7885 8559.085 L-7885 8586.624 L-7857.4609 8586.624 L-7857.4609 8559.085 Ln0 O0 0.55 1 0.12 k-7871.7598 8577.3623 m-7871.7598 8587 L-7870.6343 8587 L-7870.6343 8577.3623 L-7871.7598 8577.3623 Lf0 0.55 1 0.3 k-7875.4233 8572.876 m-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C-7857.5718 8572.874 L-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 45)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7885 8543.918 m-7885 8587 L-7798.2217 8587 L-7798.2217 8543.918 L-7885 8543.918 Lnuu0 O0 0 0 1 k-7825.2217 8573.2363 m-7825.2217 8581.0742 L-7813.2217 8574.1445 L-7801.2217 8567.2168 L-7813.2217 8560.2891 L-7825.2217 8553.3613 L-7825.2217 8561.4824 L-7883.9351 8547.7168 L-7870.9878 8566.8027 L-7885 8587 L-7825.2217 8573.2363 Lf0 1 1 0.1 k0 R0 0 0 1 K-7823.2217 8570.2363 m-7823.2217 8578.0742 L-7811.2217 8571.1445 L-7799.2217 8564.2168 L-7811.2217 8557.2891 L-7823.2217 8550.3613 L-7823.2217 8558.4824 L-7881.9351 8544.7168 L-7867.2754 8564.3594 L-7881.9351 8584 L-7823.2217 8570.2363 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 50)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7884 8586 m-7756.877 8586 L-7756.877 8538.415 L-7884 8538.415 L-7884 8586 Lnu*u0 O0.9529 0.949 0.1961 0.0745 k-7857.793 8570.417 m-7857.8232 8570.2676 L-7859.9849 8564.3643 -7860.9438 8561.6377 -7861.2754 8560.2891 c-7861.3657 8560.2891 L-7861.6953 8561.6074 -7862.7754 8564.335 -7864.9673 8570.2676 c-7864.9966 8570.417 L-7857.793 8570.417 lf1 D-7868.1182 8578.9678 m-7869.6191 8582.5371 -7870.3994 8584.709 -7868.1182 8584.917 c-7868.1182 8585.9678 L-7870.6992 8585.9375 -7873.5806 8585.917 -7876.3418 8585.917 c-7880.0649 8585.917 -7882.5273 8585.9375 -7884 8585.9678 c-7884 8584.917 L-7882.1064 8584.709 -7881.0542 8582.5674 -7873.5513 8565.5029 c-7861.6953 8538.415 L-7859.8638 8538.415 L-7848.1582 8565.5029 L-7840.8047 8582.5078 -7839.7246 8584.709 -7837.8887 8584.917 c-7837.8887 8585.9678 L-7839.5142 8585.9375 -7841.916 8585.917 -7845.5767 8585.917 c-7848.5488 8585.917 -7851.6694 8585.9375 -7854.7026 8585.9678 c-7854.7026 8584.917 L-7852.481 8584.709 -7853.3218 8582.5078 -7854.7617 8578.9678 C-7868.1182 8578.9678 lf*U*u0 D-7813.0762 8554.0811 m-7813.0762 8550.4717 -7815.3535 8548.0947 -7819.1294 8548.0947 c-7820.2383 8548.0947 -7821.0767 8548.2158 -7821.5273 8548.2451 c-7821.5273 8560.5479 L-7820.8672 8560.6084 -7820.208 8560.6084 -7819.729 8560.6084 c-7818.2002 8560.6084 -7816.7026 8560.127 -7815.6841 8559.4053 c-7814.3945 8558.5332 -7813.0762 8556.7881 -7813.0762 8554.1416 C-7813.0762 8554.0811 lf1 D-7832.0806 8558.3926 m-7832.0806 8542.6445 -7832.0806 8540.4287 -7834.542 8540.2783 c-7834.542 8539.3184 L-7833.042 8539.2588 -7830.3174 8539.1992 -7827.5664 8539.1689 c-7825.6538 8539.1084 -7822.3945 8539.0186 -7820.1479 8538.9775 c-7816.582 8538.9775 -7813.585 8539.4258 -7811.0049 8540.2627 c-7806.353 8541.8477 -7801.9702 8545.8525 -7801.9702 8553.6602 c-7801.9702 8558.7432 -7804.4014 8562.3193 -7806.5034 8564.0605 c-7807.583 8565.0215 -7808.8135 8565.832 -7809.7744 8566.3125 c-7809.7744 8566.4629 L-7807.5234 8569.4912 -7805.6025 8572.0625 -7799.3906 8580.6426 c-7797.5 8583.0645 -7795.9102 8584.7383 -7794.7402 8584.9775 c-7794.7402 8586 L-7796.6602 8586 -7799 8585.8848 -7801.1294 8585.8848 c-7803.3511 8585.8848 -7804.8521 8586 -7806.4424 8586 c-7807.6729 8586 -7808.7241 8585.9404 -7809.5039 8585.2725 c-7813.0151 8579.8477 -7816.9121 8573.7559 -7820.1182 8568.7139 c-7820.5078 8568.7139 -7820.957 8568.7139 -7821.5273 8568.7139 c-7821.5273 8571.2852 L-7821.5273 8582.5264 -7821.437 8584.7686 -7819.1895 8584.9775 c-7819.1895 8585.9697 L-7820.6279 8585.9404 -7823.9194 8585.915 -7826.6992 8585.915 c-7829.9287 8585.915 -7832.8921 8585.9404 -7834.5122 8585.9697 c-7834.5122 8584.9775 L-7832.0518 8584.7686 -7832.0806 8582.5264 -7832.0806 8565.5918 C-7832.0806 8558.3926 lf*U*u0 D-7781.4561 8565.5928 m-7781.4561 8582.4941 -7781.4561 8584.6484 -7784.2832 8584.9775 C-7784.2832 8585.9697 l-7782.3887 8585.9404 -7779.0542 8585.915 -7775.7822 8585.915 c-7772.6294 8585.915 -7769.5688 8585.9404 -7767.2881 8585.9697 C-7767.2881 8584.9775 l-7770.2578 8584.9775 -7770.2881 8582.5244 -7770.2881 8565.5928 C-7770.2881 8548.1514 L-7762.8193 8548.1514 l-7759.999 8548.1514 -7758.5298 8548.96 -7757.8994 8551.2627 C-7756.9072 8551.2627 l-7756.9072 8546.4697 -7756.877 8542.415 -7756.877 8539.1709 c-7761.3486 8539.2012 -7766.748 8539.2314 -7772.0601 8539.2314 C-7779.7446 8539.2314 l-7784.5537 8539.2314 -7789.9966 8539.2012 -7794.9614 8539.1709 c-7794.9614 8542.3848 -7794.9326 8546.4697 -7794.9326 8551.2627 C-7793.9072 8551.2627 l-7793.3657 8549.1094 -7791.771 8548.1514 -7788.9438 8548.1514 C-7781.4561 8548.1514 l-7781.4561 8565.5928 Lf*UUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 62)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7885 8587 m-7885 8548.7305 L-7846.7305 8548.7305 L-7846.7305 8587 L-7885 8587 Ln0 O1 0.14 0.09 0 k-7846.7305 8569.9043 m-7846.7305 8561.3408 L-7885 8561.3408 L-7885 8569.9043 L-7846.7305 8569.9043 Lf-7846.7305 8573.0967 m-7846.7305 8572.4229 L-7885 8572.4229 L-7885 8573.0967 L-7846.7305 8573.0967 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 63)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7885 8587 m-7885 8548.7305 L-7846.7305 8548.7305 L-7846.7305 8587 L-7885 8587 Ln0 O1 0.14 0.09 0 k-7846.7305 8565.8262 m-7846.7305 8574.3896 L-7859.3408 8574.3896 L-7859.3408 8587 L-7867.9038 8587 L-7867.9063 8565.8262 L-7867.9038 8565.8262 L-7867.9038 8565.8252 L-7846.7305 8565.8262 Lf-7846.7305 8563.3076 m-7870.4233 8563.3076 L-7870.4233 8587 L-7871.0967 8587 L-7871.0977 8562.6328 L-7846.7305 8562.6328 L-7846.7305 8563.3076 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 64)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7885 8586.999 m-7885 8548.7285 L-7846.7305 8548.7285 L-7846.7305 8586.999 L-7885 8586.999 Ln0 O1 0.14 0.09 0 k-7846.7305 8561.3389 m-7872.3896 8561.3389 L-7872.3896 8586.999 L-7863.8262 8587 L-7863.8262 8569.9033 L-7846.7305 8569.9033 L-7846.7305 8561.3389 Lf-7846.7305 8572.4219 m-7861.3081 8572.4219 L-7861.3081 8587 L-7860.6338 8587 L-7860.6338 8573.0957 L-7846.7305 8573.0957 L-7846.7305 8572.4219 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 65)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7857.0625 8559.4609 m-7884.6025 8559.4609 L-7884.6025 8587 L-7857.0625 8587 L-7857.0625 8559.4609 Ln0 O0 0.55 1 0.12 k-7856.8418 8572.7002 m-7885 8572.7002 L-7885 8573.8252 L-7856.8418 8573.8252 L-7856.8418 8572.7002 Lfu0 0.55 1 0.3 k-7883.9814 8560.5215 m-7884.4102 8562.5254 -7883.1865 8566.1514 -7880.0874 8569.251 c-7876.9878 8572.3496 -7873.3457 8573.6602 -7871.3594 8573.1455 C-7871.3594 8573.1455 L-7870.875 8571.1895 -7872.1519 8567.5117 -7875.25 8564.4141 c-7878.3457 8561.3184 -7882.0122 8560.1064 -7883.9814 8560.5215 Cf0 0.39 0.7 0.12 k-7883.9814 8585.9912 m-7884.4102 8583.9883 -7883.1865 8580.3613 -7880.0874 8577.2617 c-7876.9878 8574.1641 -7873.3457 8572.8535 -7871.3594 8573.3672 C-7871.3594 8573.3672 L-7870.875 8575.3242 -7872.1519 8579.001 -7875.25 8582.0996 c-7878.3457 8585.1953 -7882.0122 8586.4063 -7883.9814 8585.9912 CfUu0 0.55 1 0.3 k-7870.1782 8585.9912 m-7870.6074 8583.9883 -7869.3838 8580.3613 -7866.2842 8577.2617 c-7863.1855 8574.1641 -7859.543 8572.8535 -7857.5576 8573.3672 C-7857.5566 8573.3672 L-7857.0718 8575.3242 -7858.3496 8579.001 -7861.4473 8582.0996 c-7864.543 8585.1953 -7868.209 8586.4063 -7870.1782 8585.9912 Cf0 0.39 0.7 0.12 k-7870.1782 8560.5215 m-7870.6074 8562.5254 -7869.3838 8566.1514 -7866.2842 8569.251 c-7863.1855 8572.3496 -7859.543 8573.6602 -7857.5576 8573.1455 C-7857.5566 8573.1455 L-7857.0718 8571.1895 -7858.3496 8567.5117 -7861.4473 8564.4141 c-7864.543 8561.3184 -7868.209 8560.1064 -7870.1782 8560.5215 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 67)0 Au0 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7857.4609 8559.085 m-7885 8559.085 L-7885 8586.624 L-7857.4609 8586.624 L-7857.4609 8559.085 Ln0 O0 0.55 1 0.12 k-7871.7598 8577.3623 m-7871.7598 8587 L-7870.6343 8587 L-7870.6343 8577.3623 L-7871.7598 8577.3623 Lf0 0.55 1 0.3 k-7875.4233 8572.876 m-7874.3096 8571.1553 -7870.8809 8569.457 -7866.4966 8569.457 c-7862.1152 8569.457 -7858.6138 8571.1064 -7857.5718 8572.874 C-7857.5718 8572.874 L-7858.6138 8574.6006 -7862.1152 8576.2979 -7866.4966 8576.2979 c-7870.875 8576.2979 -7874.3242 8574.5615 -7875.4233 8572.876 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 69)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7857.4609 8559.4609 m-7885 8559.4609 L-7885 8587 L-7857.4609 8587 L-7857.4609 8559.4609 Ln0 O0 0.55 1 0.3 k-7875.4233 8573.252 m-7874.3096 8571.5313 -7870.8809 8569.833 -7866.4966 8569.833 c-7862.1152 8569.833 -7858.6138 8571.4824 -7857.5718 8573.25 C-7857.5718 8573.25 L-7858.6138 8574.9766 -7862.1152 8576.6738 -7866.4966 8576.6738 c-7870.875 8576.6738 -7874.3242 8574.9375 -7875.4233 8573.252 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 83)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7884 8585.9355 m-7670.4009 8585.9355 L-7670.4009 8578.1348 L-7884 8578.1348 L-7884 8585.9355 Ln0 O0 0 0 1 k-7884 8582.0352 m-7873.9858 8584.5273 -7867.187 8585.875 -7855.2007 8585.9355 c-7842.2183 8586 -7777.2002 8585.9355 y-7712.1816 8586 -7699.2002 8585.9355 v-7687.2129 8585.875 -7680.415 8584.5273 -7670.4009 8582.0352 C-7680.415 8579.543 -7687.2129 8578.1953 -7699.2002 8578.1348 c-7712.1816 8578.0693 -7777.2002 8578.1348 y-7842.2183 8578.0693 -7855.2007 8578.1348 v-7867.187 8578.1953 -7873.9858 8579.543 -7884 8582.0352 CfU%AI8_EndBrushPattern%AI5_End_NonPrinting--2 Bn%AI5_BeginGradient: (SB aqua 1)(SB aqua 1) 0 2 Bd[<80808081818182828283838384848485858586868787878888888989898A8A8A8B8B8B8C8C8C8D8D8E8E8E8F8F8F90909091919192929293939394949595959696969797979898989999999A9A9A9B9B9C9C9C9D9D9D9E9E9E9F9F9FA0A0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A5A6A6A6A7A7A7A8A8A8A9A9AAAAAAABABABACACACADADADAEAEAEAFAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B8B8B8B9B9B9BABABABBBBBBBCBCBCBDBDBDBEBEBFBFBFC0C0C0C1C1C1C2C2C2C3C3C3C4C4C4C5C5C6C6C6C7C7C7C8C8C8C9C9C9CACACACBCBCBCCCCCDCDCDCECECECFCFCFD0D0D0D1D1D1D2D2D2D3D3D4D4D4D5D5D5D6D6D6D7D7D7D8D8D8D9><000000000000000000000101010101010101010101010101010101010101020202020202020202020202020202020202020203030303030303030303030303030303030303030404040404040404040404040404040404040404050505050505050505050505050505050505050506060606060606060606060606060606060606060707070707070707070707070707070707070707080808080808080808080808080808080808080809090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D><262627272727272727282828282828282929292929292A2A2A2A2A2A2A2B2B2B2B2B2B2B2C2C2C2C2C2C2D2D2D2D2D2D2D2E2E2E2E2E2E2E2F2F2F2F2F2F303030303030303131313131313132323232323233333333333333343434343434343535353535353636363636363637373737373738383838383838393939393939393A3A3A3A3A3A3B3B3B3B3B3B3B3C3C3C3C3C3C3C3D3D3D3D3D3D3E3E3E3E3E3E3E3F3F3F3F3F3F3F4040404040404141414141414142424242424242434343434343444444444444444545454545454546464646464647474747474747484848484848484949494949494A4A4A4A4A4A4A4B4B4B4B4B4B4B4C4C4C4C4C4C4D><000000000000000000000101010101010101010101010101010101010101020202020202020202020202020202020202020203030303030303030303030303030303030303030404040404040404040404040404040404040404050505050505050505050505050505050505050506060606060606060606060606060606060606060707070707070707070707070707070707070707080808080808080808080808080808080808080809090909090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>3 %_Br[0.85 0.05 0.3 0.05 (SB Aqua 1a) 0 3 50 100 %_BS%_0.85 0.05 0.3 0.05 (SB Aqua 1a) 0 3 50 100 Bs0.5 0 0.15 0 (SB Aqua 1b) 0 3 50 0 %_BS%_0.5 0 0.15 0 (SB Aqua 1b) 0 3 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (SB aqua 2)(SB aqua 2) 0 2 Bd[<4D4D4D4E4E4F4F4F505051515152525353535454555555565657575758585959595A5A5B5B5B5C5C5D5D5D5E5E5F5F5F606061616162626363636464656565666667676768686969696A6A6B6B6B6C6C6D6D6D6E6E6F6F6F707071717172727373737474757575767677777778787979797A7A7B7B7B7C7C7D7D7D7E7E7F7F7F808081818182828383838484858585868687878788888989898A8A8B8B8B8C8C8D8D8D8E8E8F8F8F909091919192929393939494959595969697979798989999999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3>0<33333333333334343434343434343434353535353535353535353636363636363636363637373737373737373737383838383838383838393939393939393939393A3A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3C3C3D3D3D3D3D3D3D3D3D3D3E3E3E3E3E3E3E3E3E3E3F3F3F3F3F3F3F3F3F3F404040404040404040404141414141414141414142424242424242424242434343434343434343434444444444444444444445454545454545454545464646464646464646464747474747474747474748484848484848484848494949494949494949494A4A4A4A4A4A4A4A4A4A4B4B4B4B4B4B4B4B4B4B4C4C4C4C4C4C4C4C4C4C4D>0<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>3 %_Br[0.7 0 0.3 0 (SB Aqua 2a) 0 3 50 100 %_BS%_0.7 0 0.3 0 (SB Aqua 2a) 0 3 50 100 Bs0.3 0 0.2 0 (SB Aqua 2b) 0 3 50 0 %_BS%_0.3 0 0.2 0 (SB Aqua 2b) 0 3 50 0 BsBD%AI5_EndGradient%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) Pc0 0 0 1 k(C=0 M=0 Y=0 K=100) PcBb2 (SB aqua 1) -7885 8587 0 0 1 0 0 1 0 0 Bg0 BB(SB aqua 1) PcBb2 (SB aqua 2) -7885 8587 0 0 1 0 0 1 0 0 Bg0 BB(SB aqua 2) Pc0.7 0 0.3 0 (SB Aqua 2a) 0 x(SB Aqua 2a) Pc0.5 0 0.15 0 (SB Aqua 1b) 0 x(SB Aqua 1b) Pc0.85 0.05 0.3 0.05 (SB Aqua 1a) 0 x(SB Aqua 1a) Pc0.3 0 0.2 0 (SB Aqua 2b) 0 x(SB Aqua 2b) Pc1 0.6 0 0.1 (SB Blue) 0 x(SB Blue) Pc0 0 1 0 (SB Yellow) 0 x(SB Yellow) Pc0 0.51 0.87 0 (PANTONE Orange 021 CVC) 0 x(PANTONE Orange 021 CVC) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -(tternOnPath Brush Tool/ Rope /) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(6 pt Flat )(1 4 8 10 10 90 90 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(10 pt Oval)(1 1 19 15 15 130 130 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(12 pt Oval )(1 7 17 45 45 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(20 pt Oval)(1 20 20 20 100 40 80 0 2 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(25 pt Round )(1 10 40 100 100 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(50 pt Flat)(1 40 60 0 0 44 44 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Arrow)(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Marker)(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Paintbrush)(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Type)(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -( 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Double Lines)(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -(0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Laurel)(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Rope )(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -(0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Dog Tracks)(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Fall Leaf)(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -(1 1 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Ladybug)(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -(1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Push Pin)(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -( 1.06 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Strawberry)(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -(-75 75.419 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Twinkle Star )(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) LnLB%AI5_EndLayer--%AI5_BeginLayer1 1 1 1 0 0 1 1 255 79 79 0 50 Lb(logos) Ln0 A0 To1 0 0 1 240.5806 374.21 0 Tp0 TvTP0 Tr0 O0 0 0 1 k800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR%_ 0 50 XQ/_Helvetica 12 11.172 -2.7001 Tf0 Ts100 100 Tz0 Tt%_0 0 100 100 Xu%AI55J_GlyphSubst: GlyphSubstNone 1 TA%_ 0 XL0 TY0 TV36 0 XbXB0 0 5 TC100 100 200 TW25 TG0 0 0 Ti0 Ta0 1 2 2 3 Th0 Tq240 Tg0 0 Tl0 Tc0 Tw(Spongebob logo 4-color process) Tx 1 0 Tk(\r) TX TOu*u1 0.6 0 0.1 (SB Blue) 0 x1 D312.9629 549.5845 m303.4824 544.646 290.5977 543.9146 278.9121 547.4507 c273.5938 549.0649 266.2598 553.23 261.9043 557.5854 c258.4063 561.0894 256.0313 564.2144 250.5215 567.7119 c241.4473 573.4893 226.6387 574.7139 216.7617 570.9644 c208.9199 567.9897 199.5859 561.7075 195.752 553.8296 c191.5566 545.2231 190.9922 536.6938 177.4023 531.1094 c166.3477 526.5684 165.5957 516.8071 165.9004 510.936 c166.4766 499.9453 177.4668 489.8403 183.2422 486.5894 c190.8516 482.3105 191.1523 474.4409 188.8457 463.4272 c187.4707 456.8857 188.7695 450.1938 192.3965 445.0747 c195.2988 440.9849 200.6504 433.6987 212.2559 432.021 c231.5137 429.2241 245.1094 444.0527 256.2754 443.7324 c265.2012 443.4868 286.4473 429.8667 y302.5469 420.521 315.1836 427.8413 320.6855 431.3325 c324.8086 433.9585 335.0645 447.5293 357.8242 445.9014 c380.7969 444.2646 399.4727 434.271 404.8457 432.897 c414.7324 430.3716 429.332 428.6792 436.4883 441.6519 c439.7676 447.6089 440.8203 452.5303 439.9941 457.0332 c439.1738 461.4224 433.8027 471.252 435.1855 479.166 c436.0176 483.916 439.2148 491.6943 446.6914 496.5542 c449.4277 498.333 459.5566 503.1733 462.7207 507.0981 c469.877 516.0098 469.127 528.8325 462.8516 537.999 c457.5957 545.6572 446.3633 550.2202 428.3613 548.9546 c414.1035 547.9541 406.3418 548.083 402.8438 560.833 c399.7129 572.2515 392.1113 587.7471 376.8516 589.499 c353.5547 592.1729 338.6914 578.4766 330.5195 567.166 c324.2871 558.541 321.7246 554.1597 312.9629 549.5845 cf/BBAccumRotation (-0.000000) XT*U0 D335.8672 568.0659 m343.4121 576.2051 356.2598 586.1143 374.0781 585.4692 c389.9141 584.8989 396.7012 569.3599 400.1016 557.7065 c401.8496 551.7065 406.9707 545.0747 417.9805 545.4551 c428.5742 545.8096 442.8652 546.4521 451.877 541.6997 c467.2793 533.5732 466.627 510.6875 451.1172 503.1807 c441.0059 498.2949 435.4844 492.4312 432.3613 481.668 c428.9355 469.8999 439.2363 456.9351 434.8516 447.3682 c427.8926 432.1909 415.9043 434.0181 405.8359 436.7012 c393.4395 440.0073 371.9082 452.1313 350.5762 449.999 c330.8164 448.0337 326.6172 441.4141 319.3828 436.1504 c310.8066 429.896 299.2949 426.8979 285.0469 435.3174 c270.1465 444.1465 261.5996 448.3701 251.7637 446.2036 c243.2148 444.3213 229.5957 433.9966 212.9082 436.2061 c194.7246 438.605 190.957 454.2593 192.25 463.5068 c194.75 481.4209 196.1289 483.8755 182.4121 491.5908 c174.75 495.8955 156.7988 519.751 179.7285 529.4111 c195.25 535.9541 192.6074 544.4243 199.623 554.083 c209.2539 567.3379 232.8281 571.9736 248.0254 563.7124 c258.8359 557.8354 257.4082 551.7095 275.875 544.8828 c286.4902 540.957 299.748 540.3716 311.666 545.7466 c325.832 552.1367 327.8359 559.4014 335.8672 568.0659 cBb1 (SB aqua 2) 45.499 499.501 -25.5739 491.114 0.5001 0 0 0.5001 4123.6523 3984.9004 Bg221.5439 -106.022 -94.2002 -196.841 250.2939 652.8242 Xm3603.0964 -1724.297 -94.2002 -196.841 -3352.8027 2377.1211 Bc221.5439 -106.022 -94.2002 -196.841 250.2939 652.8242 Bm3603.0964 -1724.297 -94.2002 -196.841 471.8379 546.8022 Bcf0 BB/BBAccumRotation (-0.000000) XTu1 XR433.125 484.0659 m431.6523 488.5684 429.2402 493.436 426.4473 498.9941 c417.2988 517.1875 427.0742 531.3184 438.8164 545.2124 C431.8164 545.9766 424.25 545.6665 417.9805 545.4551 c415.1328 545.3569 412.6797 545.731 410.5703 546.4385 C403.4727 541.7285 395.8359 536.5508 394.0957 530.8564 c389.9219 517.27 402.4434 508.4614 406.1758 498.5723 c414.3926 476.7803 398.7559 461.3086 385.7852 443.9272 C390.9023 442.0879 395.6172 440.1821 399.7383 438.6836 C401.8027 440.7822 404.4707 442.8564 407.8516 444.8999 c422.3145 453.6812 429.8594 460.7285 432.9492 467.5557 C431.7832 472.2637 431.0195 477.0532 432.3613 481.668 c432.6035 482.4946 432.8574 483.2925 433.125 484.0659 CBb1 (SB aqua 1) 45.499 499.501 -25.5739 491.114 0.5001 0 0 0.5001 4123.6523 3984.9004 Bg221.5439 -106.022 -50.1842 -104.8651 243.9531 639.5747 Xm3415.1433 -1634.3502 -50.1842 -104.8651 -3171.1904 2273.9248 Bc221.5439 -106.022 -50.1842 -104.8651 243.9531 639.5747 Bm3415.1433 -1634.3502 -50.1842 -104.8651 465.4971 533.5527 Bcf0 BB/BBAccumRotation (-0.000000) XT259.1016 545.6328 m260.8965 547.313 262.5449 548.9849 264.043 550.6558 C257.209 555.2363 255.7012 559.5396 248.0254 563.7124 c246.7285 564.4214 245.3672 565.021 243.9609 565.5381 C229.3301 556.6021 210.0781 548.2944 202.0645 533.7603 c200.9492 531.7339 199.8457 530.0415 198.834 528.5737 C195.043 530.6587 191.9023 533.0488 189.4609 535.7134 C187.3242 533.4536 184.3281 531.3535 179.7285 529.4111 c174.6738 527.2866 171.6133 524.4668 169.9824 521.3311 C170.8008 520.6406 171.627 519.9487 172.4668 519.2617 c184.998 509.0337 183.9004 501.9521 177.5527 495.6406 C179.3066 493.7842 181.0215 492.3667 182.4121 491.5908 c185.0352 490.1133 187.1055 488.8291 188.7246 487.5942 C196.25 494.2324 202.2617 501.6299 205.5586 508.2559 C215.0176 500.769 225.5996 491.4692 220.6719 482.5806 c215.1582 472.6274 196.3223 468.9023 192.0859 458.2202 C192.7031 449.2261 197.877 438.188 212.9082 436.2061 c215.8223 435.8115 218.6367 435.8223 221.3535 436.0879 C215.9746 441.7119 211.3965 447.4707 214.3711 454.3501 c218.2012 463.2046 231.0879 465.4033 239.4258 471.0381 c254.0723 480.9194 247.5977 482.9966 240.6934 494.5103 c228.5996 514.6621 241.373 529.1353 259.1016 545.6328 cBb1 (SB aqua 1) 45.499 499.501 -25.5739 491.114 0.5001 0 0 0.5001 4123.6523 3984.9004 Bg221.5439 -106.022 -59.1198 -123.5369 215.6387 580.4087 Xm3592.9846 -1719.4578 -59.1198 -123.5369 -3377.3457 2299.8662 Bc221.5439 -106.022 -59.1198 -123.5369 215.6387 580.4087 Bm3592.9846 -1719.4578 -59.1198 -123.5369 437.1826 474.3867 Bcf0 BB/BBAccumRotation (-0.000000) XT293.6191 540.0181 m293.8652 540.3403 294.9395 541.647 295.2031 541.9556 C288.1191 541.7505 282.0254 542.6079 275.875 544.8828 c272.3926 546.1655 269.623 547.4292 267.3359 548.6689 C263.5078 544.0542 259.6445 539.5703 256.6426 535.2715 c239.7129 510.9956 250.5234 502.5947 273.5391 485.5 c296.541 468.416 276.4609 458.7515 259.8125 446.5718 C265.3496 445.8677 271.1523 443.2412 278.6465 439.0347 C280.4063 441.0508 282.5996 443.022 285.2871 444.9028 c307.2891 460.3037 325.877 470.3125 304.0391 492.7656 c287.8086 509.4507 277.6582 519.7051 293.6191 540.0181 cBb1 (SB aqua 1) 45.499 499.501 -25.5739 491.114 0.5001 0 0 0.5001 4123.6523 3984.9004 Bg221.5439 -106.022 -44.5993 -93.1948 215.9238 581.0044 Xm3532.2239 -1690.3801 -44.5993 -93.1948 -3316.2998 2271.3848 Bc221.5439 -106.022 -44.5993 -93.1948 215.9238 581.0044 Bm3532.2239 -1690.3801 -44.5993 -93.1948 437.4678 474.9824 Bcf0 BB/BBAccumRotation (-0.000000) XT391.6758 558.0439 m393.6602 564.877 391.7402 573.1245 387.9512 579.8809 C384.3281 583.1006 379.7988 585.27 374.0781 585.4692 c365.4688 585.7798 358.627 583.7041 353.3359 581.1919 C356.0645 574.73 358.0254 566.9819 352.1602 558.7939 c345.1797 549.0557 333.3047 544.2275 326.2305 534.6548 c308.7891 511.0679 356.957 503.4771 350.877 481.7905 c347.9746 471.4199 334.2324 468.4087 327.4121 460.0767 c318.6465 449.373 320.5625 445.9658 326.0176 441.4355 C330.7617 445.0713 336.793 448.4556 349.416 449.8794 C350.1191 461.209 365.8809 464.894 373.9414 477.5459 c387.9004 499.4683 342.4023 510.7671 361.8496 529.8071 c372.4199 540.1533 387.2109 542.6689 391.6758 558.0439 cBb1 (SB aqua 1) 45.499 499.501 -25.5739 491.114 0.5001 0 0 0.5001 4123.6523 3984.9004 Bg221.5439 -106.022 -66.892 -139.7777 248.5537 649.1875 Xm3476.0469 -1663.4962 -66.892 -139.7777 -3227.4932 2312.6836 Bc221.5439 -106.022 -66.892 -139.7777 248.5537 649.1875 Bm3476.0469 -1663.4962 -66.892 -139.7777 470.0977 543.1655 Bcf0 BB/BBAccumRotation (-0.000000) XTUu1 0.6 0 0.1 (SB Blue) 0 x1 D0 XR204.7305 547.0381 m204.6191 546.9922 L204.5137 546.9385 L202.5625 545.8296 200.2344 543.4561 200.2324 538.4458 c200.2344 536.1431 200.7129 533.8984 201.6582 531.7617 c202.5156 529.8774 204.4141 528.2529 207.3086 526.9121 c211.1484 525.2598 L213.8164 524.1416 L215.1797 523.5464 215.6934 523.0981 215.8789 522.8989 C215.7129 522.5508 214.6523 522.063 212.0527 522.0737 c209.3691 522.0688 206.2988 522.5903 202.9414 523.6094 C200.7715 524.2749 L200.3379 510.1948 L217.3477 510.876 L219.7852 510.9556 221.9238 511.8193 223.6855 513.4551 c225.4121 515.0625 226.3301 517.2593 226.332 519.8291 c226.332 521.5107 225.918 523.2949 225.1035 525.1201 c224.2461 527.0596 222.2207 528.7808 219.0859 530.2397 C219.0859 530.2397 L214.6035 532.2202 L211.8457 533.4185 L210.002 534.2515 209.4453 534.7651 209.2852 534.9507 C209.3203 536.2856 209.7266 536.9805 211.6426 536.9775 c214.2051 536.9761 217.8398 535.7642 222.4453 533.3662 C224.877 532.0977 L225.4063 545.877 L224.1016 546.2515 L220.0195 547.437 215.7949 548.0371 211.541 548.0371 c208.7012 548.0356 206.4102 547.7041 204.7305 547.0381 Cf/BBAccumRotation (-0.000000) XT288.7012 534.6074 m280.8086 533.1362 L280.8457 531.3931 L280.9277 530.2856 L280.9258 527.9663 280.3184 523.6982 279.1309 517.5864 c276.75 505.4561 L279.0059 505.5771 L289.8262 506.2075 L289.7227 510.6782 L289.9238 517.6274 L290.0273 519.3213 290.1289 520.3232 290.207 520.9336 C291.1152 520.9902 291.6602 521.0259 292.7227 521.084 C292.8398 519.6191 292.9316 517.7026 292.9824 515.4722 C292.9629 511.3745 L292.9844 508.8159 L293.1504 506.7861 295.2891 506.7832 296.3223 506.7861 c298.4844 506.7861 300.0195 506.9102 301.1387 507.165 c302.5645 507.4795 302.9316 508.9229 303.498 512.3872 c303.9395 515.2051 304.1582 517.8594 304.1602 520.2939 c304.1641 524.8379 303.4609 527.417 301.8672 528.6475 C301.25 529.1582 300.002 529.8486 296.1074 530.5112 c294.0527 530.8564 292.2559 531.0205 290.584 531.062 C290.6055 531.5161 291.9316 535.0566 Y288.7012 534.6074 Lf/BBAccumRotation (-0.000000) XT*u358.6484 541.8853 m357.3027 541.6011 L356.6172 502.3511 L382.418 504.9971 L382.373 507.9058 L382.248 511.8472 L382.0703 515.3618 381.4512 518.4424 380.3887 520.9888 C379.752 521.7588 L378.6445 522.5044 377.3906 523.0952 376.0664 523.6016 C376.7227 523.8423 377.3711 524.085 378.084 524.3809 C378.7695 524.8779 L379.5156 525.7754 380.0078 526.9844 380.2207 528.457 C380.6445 533.4814 380.6484 533.6929 v380.6465 534.4541 380.5352 535.3345 380.3066 536.3345 c379.9121 538.1543 379.1875 539.4429 378.1602 540.1685 c378.1406 540.1807 376.668 541.3101 Y375.8867 541.9082 375.0527 542.29 374.2266 542.4453 C374.0957 542.4712 L374.0508 542.4697 L368.6387 542.6616 L364.4297 542.6582 361.0645 542.3989 358.6484 541.8853 Cf/BBAccumRotation (-0.000000) XT0 D367.6016 535.6582 m367.7676 535.6411 367.9121 535.6338 V368.0313 535.0723 368.1816 533.8877 368.1875 531.2476 c368.1855 529.6597 368.0859 528.9233 368.0215 528.5752 C367.8301 528.5308 367.5176 528.4951 366.9453 528.4985 C366.0488 528.5293 365.8711 528.54 V365.8711 530.4146 365.875 533.6763 365.873 535.5249 C366.7344 535.5874 367.6016 535.6582 Yf/BBAccumRotation (-0.000000) XT364.0859 517.9375 m365.9766 517.8042 368.8867 517.5952 Y372.0723 517.3115 373.4473 517.0571 374.0918 516.8975 C374.1777 516.4634 374.2852 515.7866 374.3926 514.728 C374.4199 514.415 374.4453 514.041 V372.248 513.7432 370.1055 513.5547 368.0898 513.5576 C365.8184 513.6084 L364.0332 513.6606 364.0234 513.6606 V364.0449 515.127 364.0645 516.4019 364.0859 517.9375 Cf/BBAccumRotation (-0.000000) XT*U*u1 D383.8242 532.665 m382.5039 531.668 381.9238 529.6753 381.9219 526.1987 c381.9238 523.9453 382.1699 521.2744 382.6836 518.2583 c383.1699 515.397 383.6328 513.4316 384.1426 512.062 c384.75 510.4756 386.4609 509.7686 387.7051 509.3525 c389.2637 508.8525 390.9414 508.6025 392.8164 508.6055 c396.5547 508.6025 399.4004 509.5581 401.2852 511.4438 c402.6816 512.8457 403.7949 514.9829 404.666 517.9868 c405.4609 520.6499 405.8574 523.4053 405.8613 526.168 c405.8574 528.687 405.5703 532.2124 403.0469 533.6885 C403.043 533.6851 L402.6113 533.9385 401.8125 534.2607 399.4004 534.5488 c397.5273 534.7915 395.668 534.9155 393.8438 534.9141 c389.0801 534.9155 385.8027 534.1821 383.8242 532.665 cf/BBAccumRotation (-0.000000) XT0 D390.7988 527.9185 m393.4512 527.7344 L393.4824 527.7344 395.0293 527.6455 395.8691 527.6025 C395.8906 527.4478 395.918 527.2495 395.918 526.9321 c395.918 526.1436 395.7324 524.3457 394.8984 520.2017 C394.8262 519.8599 394.752 519.4761 393.4883 519.4746 c392.7852 519.478 392.0918 519.6235 391.4102 519.8398 C391.3047 520.064 391.1309 520.498 390.9199 521.4014 c390.6172 522.7793 390.457 524.3071 390.4609 525.9395 c390.4531 526.9229 390.5273 527.5352 390.6113 527.9106 C390.6895 527.9092 390.7988 527.9185 Yf/BBAccumRotation (-0.000000) XT*U*u1 D417.9707 540.3267 m417.3359 540.23 L412.9805 539.6973 L412.9766 539.6929 406.0898 539.1714 Y406.3867 537.2935 L406.6426 535.8438 406.8535 532.998 407.0449 528.8252 C407.3574 516.5767 L407.3613 511.0415 407.127 508.9644 406.9297 508.1821 C406.4863 506.4194 L408.2754 506.0605 L412.9668 505.126 417.1406 504.6538 420.6914 504.6504 c424.0156 504.6504 428.5625 505.0205 429.7012 508.2402 c430.1211 509.4033 430.5254 511.2183 430.9297 513.7769 c431.3691 516.6797 431.5918 519.0146 431.5898 520.9336 c431.5859 523.2734 431.2793 524.6309 430.5547 525.4639 c429.8652 526.2817 428.6836 526.7051 427.0703 526.7036 c425.9902 526.7065 424.209 526.4673 421.2773 525.9336 c419.9121 525.6895 418.918 525.5391 418.1484 525.4438 C418.4316 527.7896 418.918 531.8257 Y419.7637 537.4375 L420.2734 540.7114 L417.9707 540.3267 Lf/BBAccumRotation (-0.000000) XT0 D417.041 518.2656 m418.2012 518.2656 419.1523 518.1738 419.9453 517.9868 c419.9609 517.9849 420.0391 517.9619 420.0742 517.9561 C420.084 517.8887 420.1387 516.5337 Y420.1738 515.2588 L420.1719 514.3418 420.084 513.8599 420.0176 513.6113 C419.3203 513.5654 418.2949 513.4272 416.666 513.1616 c415.332 512.9917 414.4141 512.8721 V414.3828 513.5376 414.3535 514.1987 Y414.3516 516.7104 414.625 517.6997 414.7695 518.0479 C415.4141 518.1875 416.1289 518.2676 417.041 518.2656 Cf/BBAccumRotation (-0.000000) XT*U*u1 D333.3027 536.5742 m332.8418 535.8745 332.1602 534.4541 331.5996 530.2578 c331.2363 527.5747 331.0625 524.7783 331.0645 521.6992 c331.0625 515.811 331.7617 513.9966 332.377 513.0757 c333.6621 511.2026 336.8848 510.4097 343.1484 510.4097 C349.0918 510.5859 L352.7734 510.8008 L355.0469 521.3081 L353.8203 521.8984 L353.2695 522.1763 352.5215 522.2866 351.3379 522.2793 C351.2129 522.2852 345.0527 521.8403 Y344.2734 521.8496 343.3086 521.1514 343.3086 519.8677 C343.3633 519.7095 343.3848 519.645 V342.4707 519.6924 340.5137 519.7939 339.2246 519.8569 C339.0918 520.5762 338.9883 521.5889 338.9258 522.4526 C339.2734 522.4385 346.4551 522.8237 349.9902 523.6167 c353.9023 524.499 354.9277 524.9502 355.457 525.6636 C355.4668 525.6816 355.4785 525.6924 355.4941 525.7124 C355.5195 525.7583 355.584 525.7954 355.6055 525.8491 C355.5488 525.792 355.5371 525.7905 V355.7363 526.0684 355.8867 526.4473 355.8867 526.9873 c355.8867 528.2329 355.0859 532.0776 Y354.3633 535.5215 353.6406 537.522 351.9102 538.2646 c350.0566 539.0698 347.2832 539.4243 342.9141 539.4199 c337.6348 539.4229 334.584 538.5161 333.3027 536.5742 cf/BBAccumRotation (-0.000000) XT339.4141 530.0342 m342.6992 529.7749 L343.3184 529.6626 343.6074 529.5845 343.7988 529.5371 C343.7871 529.1475 343.7617 528.8452 343.709 528.6304 C343.5762 528.5566 343.293 528.4263 342.5625 528.2593 c341.3926 528.0059 340.2207 527.8848 338.9727 527.8833 c338.3242 527.8818 337.9551 527.917 337.7305 527.957 C337.6523 528.2822 337.5449 528.7363 Y337.3516 529.5586 L337.3496 529.5923 337.3398 529.7686 Y337.3457 529.8608 337.3516 529.9023 V337.7129 529.9668 338.3242 530.0308 339.4141 530.0342 Cf/BBAccumRotation (-0.000000) XT*U*u322.25 539.2559 m322.25 539.2559 l321.6875 539.2559 320.7305 538.9165 320.3574 537.3149 C319.6641 537.3364 318.752 537.4053 317.3613 537.6064 c314.8496 537.9395 313.4453 538.0713 312.6309 538.0742 c309.4277 538.0713 308.2441 536.6475 307.8262 535.4434 c306.0039 530.3008 305.123 526.5913 305.127 524.0986 c305.1289 521.4399 306.002 519.1372 307.7324 517.2534 c308.6895 516.1885 310.6094 515.6533 314.3438 515.417 C314.3457 515.417 317.8223 515.3311 319.9492 515.2896 C319.9434 512.6738 319.6836 510.6382 319.2383 509.0796 C318.5098 508.9214 317.25 508.7837 316.1602 508.7466 C317.3027 511.1416 317.3535 511.3008 317.3535 511.7627 C317.3496 513.2065 L315.8184 513.4839 L310.2109 514.6147 L308.291 515.0381 307.373 515.2036 306.7402 514.1558 C306.1289 513.3013 305.834 512.0513 305.832 510.1963 c305.832 508.6821 306.0371 506.8428 306.4648 504.3853 c307.0996 501.0054 307.2676 500.0972 308.8203 500.0913 C309.6465 500.1235 311.4863 500.2754 318.4395 501.3721 c327.3379 502.7681 328.0508 503.3418 328.5313 504.0615 C329.3418 504.9941 330.0605 506.8721 330.0625 513.0146 C329.8379 519.8428 L329.8223 520.2158 329.8086 520.6348 329.8145 521.1069 c329.8105 524.1782 330.1387 529.0264 330.3789 530.1553 c330.9512 533.0469 331.2109 535.1777 331.209 536.8765 C331.2188 538.0757 L330.0918 538.501 L328.4551 539.127 325.9629 539.3613 322.25 539.2559 Cf/BBAccumRotation (-0.000000) XT0 D319.3984 530.4604 m319.3516 529.7026 319.2617 527.854 319.2656 526.001 c319.2598 524.5835 319.3164 523.2056 319.4883 522.4189 C319.4883 522.4248 319.5352 522.147 319.5938 521.7959 C319.166 521.9019 318.7402 522.0122 318.3516 522.1563 C318.123 522.2686 317.8848 522.3867 V317.6914 523.106 317.5098 524.0986 317.5098 525.7603 c317.5078 528.917 317.9102 529.9604 318.0801 530.2734 C318.2715 530.3438 318.6797 530.4253 319.3984 530.4604 Cf/BBAccumRotation (-0.000000) XT*U*u1 D255.9551 535.6963 m254.6504 534.5752 254.0723 532.3032 254.0684 528.3237 c254.0664 525.6895 254.334 522.5386 254.8613 518.9683 c255.3652 515.6641 255.8594 513.2905 256.3887 511.709 c256.8457 510.3789 258.0273 509.374 260.0449 508.644 c261.709 508.0381 263.4863 507.7388 265.4863 507.7402 c269.4336 507.7388 272.4453 508.8711 274.4316 511.106 c275.8672 512.7168 277.0098 515.207 277.9258 518.7109 c278.75 521.8374 279.166 525.0635 279.1641 528.2822 c279.1641 532.8828 278.2617 535.6211 276.3223 536.896 C276.3184 536.8945 L275.8652 537.1968 275.0117 537.582 272.4492 537.9272 c270.4785 538.2153 268.4961 538.3657 266.5664 538.3657 c261.5156 538.3613 258.0371 537.4868 255.9551 535.6963 cf/BBAccumRotation (-0.000000) XT0 D263.3496 530.7061 m266.1465 530.4761 L266.1758 530.479 267.8906 530.3687 268.7617 530.3101 C268.8145 530.1045 268.8574 529.7764 268.8555 529.2012 c268.8555 528.2515 268.6719 526.0791 267.7695 521.0991 C267.6523 520.4551 267.4707 520.0039 266.1953 520.0068 c265.4551 520.0054 264.7129 520.1821 263.9844 520.4414 C263.8652 520.7007 263.6465 521.2651 263.3984 522.5044 c263.0586 524.1753 262.8906 526.0425 262.8887 528.0215 c262.8906 529.4355 263.002 530.2197 263.1074 530.6831 C263.2129 530.6904 263.3496 530.7061 Yf/BBAccumRotation (-0.000000) XT*U*u1 D232.5293 535.2485 m229.5938 534.9526 228.7871 534.77 228.2012 534.2515 C227.6074 533.7222 L227.7793 520.1235 L227.7793 511.2183 227.5313 508.0239 227.3242 506.9028 C226.9492 504.8545 L236.0859 504.856 L236.0879 506.5898 L236.0918 511.5356 236.0332 515.0503 235.918 517.4575 C238.3555 516.9312 240.9883 516.5659 243.959 516.5659 c247.0957 516.5674 249.3379 516.8115 250.8105 517.3086 C252.1758 517.752 252.5879 519.3184 252.8691 520.7524 C253.1367 522.25 253.2578 523.8271 253.2598 525.4688 c253.2578 529.8823 252.4785 532.4673 250.8027 533.6099 c248.8379 534.9478 245.2207 535.5693 239.416 535.5645 c237.1328 535.5693 234.8223 535.457 232.5293 535.2485 cf/BBAccumRotation (-0.000000) XT0 D243.334 528.8818 m244.4629 528.8789 244.9961 528.7271 245.2598 528.6182 C245.3145 528.3174 245.3809 527.7051 245.3828 526.438 c245.3789 524.8594 245.2461 524.1245 245.1563 523.77 C244.2324 523.522 243.2949 523.3438 242.3457 523.3394 c241.5566 523.3408 240.9863 523.4756 240.7129 523.689 C240.6445 523.9512 240.5 524.5928 Y240.3027 527.0933 L240.3008 528.0044 240.377 528.3452 240.418 528.5044 C240.8301 528.6641 241.6816 528.8774 243.334 528.8818 Cf/BBAccumRotation (-0.000000) XT*UU0 0 1 0 (SB Yellow) 0 x223.2266 534.8159 m218.3691 537.3428 214.4883 538.6221 211.6172 538.625 c208.8535 538.625 207.5078 537.3057 207.5117 534.6812 c207.5117 533.7959 208.7207 532.8247 211.1113 531.7417 c213.5449 530.6602 215.9727 529.6841 218.3301 528.5703 c221.1582 527.2573 222.8535 525.7739 223.4922 524.3228 c224.1973 522.7334 224.5742 521.1851 224.5762 519.7388 c224.5762 517.6445 223.8672 515.9263 222.4805 514.6436 c221.0703 513.3306 219.3047 512.585 217.2578 512.5098 c202.1055 511.9131 L202.4121 521.8574 L205.9531 520.7788 209.1621 520.2388 212.0293 520.2402 c215.7012 520.2402 217.5879 521.1147 217.6563 522.8345 c217.6934 523.749 216.6465 524.6924 214.4902 525.6421 c212.3301 526.5854 210.1367 527.4307 208.0117 528.4004 c205.4512 529.5874 203.8633 530.9668 203.2188 532.3857 c202.3809 534.2715 201.9414 536.2642 201.9434 538.3564 c201.9434 541.7285 203.084 544.0576 205.3477 545.3369 c206.8027 545.9077 208.8516 546.21 211.5195 546.2144 c215.5996 546.2144 219.6484 545.6392 223.5918 544.4902 C223.2266 534.8159 lf/BBAccumRotation (-0.000000) XT302.4043 520.2095 m302.4082 517.7427 302.1758 515.1777 301.7637 512.5791 c301.3613 510.1211 301.0254 508.8325 300.7168 508.7695 c299.7051 508.5352 298.2227 508.4321 296.2949 508.4307 c294.7949 508.4365 294.7129 508.6284 294.6895 508.8726 c294.5977 509.9814 294.7598 512.1782 294.6934 515.4155 c294.6191 518.9224 294.459 521.3833 294.252 522.8389 c288.8066 522.4937 L288.5371 522.0308 288.3398 520.4077 288.1719 517.6401 c288.0332 515.3125 287.9668 512.9868 287.9707 510.5874 c287.9688 508.9336 287.998 507.9902 288.0605 507.7573 c285.4707 507.6572 282.3965 507.4888 278.8516 507.2124 c279.5371 510.52 280.8145 517.1704 v282.0273 523.4097 282.6348 527.7607 282.6309 530.1938 c282.6309 530.7627 282.6055 531.2397 282.5332 531.6094 c284.252 531.8491 286.4492 532.2495 289.0469 532.8198 c288.9414 532.6543 288.875 532.3477 288.877 531.9824 c288.873 531.1001 288.8477 530.1938 288.75 529.2471 c290.8672 529.353 293.1953 529.144 295.8008 528.7134 c298.3867 528.2715 300.0762 527.7607 300.7813 527.1899 c301.8633 526.3428 302.4043 524.0156 302.4043 520.2095 cf/BBAccumRotation (-0.000000) XT*u1 D358.3672 504.1855 m380.6289 506.4683 l380.5938 508.1943 380.5996 509.9233 380.4941 511.6567 c380.3223 515.1499 379.7031 517.9897 378.7715 520.2295 c377.1719 521.3018 375.3379 522.1104 373.2207 522.6597 c370.9004 523.2456 369.7227 523.5771 369.6211 523.6138 c371.3828 523.7212 373.9863 524.5005 377.4102 525.8994 c377.9297 526.521 378.3164 527.4429 378.4844 528.6152 c378.5547 529.0996 378.6914 530.5693 378.8633 533.1006 c378.9336 533.8818 378.832 534.8008 378.5918 535.8652 c378.2734 537.3027 377.7578 538.2217 377.1367 538.6636 c376.6523 538.9966 376.166 539.4414 375.6504 539.8032 c375.0605 540.248 374.4727 540.541 373.8789 540.647 c372.5977 540.7607 370.8281 540.8345 368.6211 540.8345 c364.4629 540.8311 361.2363 540.5796 358.9844 540.0962 c358.3672 504.1855 Lf/BBAccumRotation (-0.000000) XT0 D369.2441 536.9375 m369.6895 536.2363 369.8965 534.2837 369.8965 531.1553 c369.8965 528.9893 369.7207 527.6606 369.3809 527.2559 c369.0313 526.8491 368.2012 526.668 366.9219 526.6699 c366.498 526.668 365.9492 526.7051 365.2949 526.7402 c364.6289 526.7788 364.2168 526.8169 364.1152 526.8184 C364.1152 537.042 l365.7051 537.229 366.8457 537.3042 367.5742 537.3013 c368.5156 537.3042 369.0684 537.1938 369.2441 536.9375 cf/BBAccumRotation (-0.000000) XT376.2676 512.4238 m373.3301 511.9497 370.5938 511.7319 368.0645 511.7305 c367.2988 511.729 366.2988 511.7627 365.0156 511.8057 c363.7676 511.8442 362.8379 511.8745 362.2422 511.8779 C362.3516 519.7124 l364.2207 519.6436 366.4395 519.4917 369.0293 519.2417 c372.7383 518.9009 374.918 518.5313 375.5117 518.1372 c375.7168 517.6167 375.9238 516.5122 376.0898 514.8232 c376.168 514.1177 376.2344 513.312 376.2676 512.4238 cf/BBAccumRotation (-0.000000) XT*U*u1 D402.1543 532.0991 m401.7637 532.3213 400.7754 532.5439 399.1738 532.7358 c397.4453 532.9609 395.6484 533.0884 393.8164 533.0933 c389.4961 533.0933 386.4863 532.4473 384.8535 531.2002 c384.0488 530.5942 383.6309 528.894 383.6367 526.1035 c383.6328 523.8975 383.8926 521.3389 384.373 518.4497 c384.8203 515.8188 385.2676 513.8691 385.75 512.585 c386.0059 511.9116 386.8398 511.3667 388.2168 510.9219 c389.5957 510.4785 391.0977 510.2471 392.793 510.2456 c396.0293 510.25 398.4629 511.0186 400.0371 512.5864 c401.1816 513.7417 402.1816 515.6592 402.9844 518.3901 c403.752 520.9795 404.1016 523.543 404.0996 526.0728 c404.1016 529.3452 403.4609 531.3271 402.1543 532.0991 cf/BBAccumRotation (-0.000000) XT0 D396.5723 519.7661 m396.2871 518.3579 395.2617 517.6523 393.4688 517.6489 c392.5059 517.6553 391.5156 517.8042 390.5215 518.1616 c390.0391 518.3228 389.5938 519.2539 389.2051 520.9214 c388.8535 522.4878 388.6934 524.1553 388.6953 525.8535 c388.6934 527.4844 388.8848 528.606 389.2422 529.2119 c389.3613 529.4404 389.8809 529.5708 390.7773 529.5693 c391.3262 529.5679 392.2539 529.502 393.5957 529.3682 c394.9102 529.2778 395.8398 529.2104 396.3867 529.2148 c397.2129 529.2163 397.627 528.4155 397.6348 526.8447 c397.6348 525.5942 397.2793 523.2285 396.5723 519.7661 cf/BBAccumRotation (-0.000000) XT*U*u1 D420.3203 519.5898 m419.3594 519.8105 418.2676 519.9121 417.0195 519.9106 c415.8633 519.915 414.8711 519.8169 414.0371 519.5898 c413.082 519.3628 412.5938 517.5435 412.5918 514.1099 c412.5938 513.0562 412.6289 512.0986 412.7305 511.2256 c412.7578 511.0342 413.0137 510.936 413.5273 510.9375 c414.043 510.939 415.1602 511.0679 416.9219 511.3516 c418.6836 511.6494 419.8672 511.8135 420.4766 511.8057 c421.4023 511.8071 421.8887 512.9224 421.8828 515.1714 c421.8848 515.6548 421.8555 516.2886 421.8203 517.1182 c421.7891 517.9883 421.7598 518.5327 421.7539 518.8198 c421.7559 519.2725 421.2754 519.3613 420.3203 519.5898 cf/BBAccumRotation (-0.000000) XT0 D417.1777 531.9854 m416.5918 527.9233 416.3125 525.1001 416.1543 523.4648 c417.1133 523.4326 418.9023 523.6611 421.5664 524.1416 c424.2266 524.6187 426.0488 524.8735 427.0469 524.875 c428.1328 524.8735 428.8652 524.6523 429.2188 524.2349 c429.6387 523.7534 429.8281 522.6011 429.8301 520.8384 c429.8281 518.9502 429.6016 516.6733 429.1914 513.9502 c428.8047 511.5186 428.4199 509.7881 428.041 508.728 c427.4609 507.1021 424.9902 506.2949 420.6699 506.2983 c417.2402 506.292 413.2383 506.7461 408.5898 507.6665 c408.9082 508.9507 409.0723 511.9038 409.0723 516.4834 c409.0684 520.3262 408.9453 524.4302 408.75 528.8101 c408.5547 533.1133 408.3379 535.9956 408.0742 537.4976 c410.0332 537.625 411.7012 537.749 413.1074 537.8794 c416.4668 538.168 417.5137 538.4336 418.1621 538.5176 C418.0625 537.8105 417.7793 536.1738 417.1777 531.9854 cf/BBAccumRotation (-0.000000) XT*U*u1 D250.25 518.8701 m250.6016 518.9839 250.8906 519.6909 251.1484 521.001 c251.375 522.3081 251.498 523.7612 251.4961 525.3809 c251.498 529.0752 250.9199 531.3228 249.8008 532.0884 c248.1699 533.2036 244.7031 533.7437 239.3887 533.7437 c237.0508 533.7466 234.8125 533.6284 232.6641 533.4321 c230.6758 533.2266 229.5605 533.0576 229.334 532.8584 c229.4277 529.5938 229.4902 525.292 229.4922 520.0332 c229.4883 512.7261 229.332 508.2329 229.0156 506.4961 C234.3359 506.499 l234.3281 513.0698 234.2324 517.4175 234.0137 519.5498 c236.7891 518.6709 240.1211 518.2119 243.9414 518.2104 c246.8867 518.2104 249 518.4424 250.25 518.8701 cf/BBAccumRotation (-0.000000) XT0 D246.6445 529.6782 m246.9355 529.3911 247.0918 528.2852 247.0957 526.3491 c247.0898 523.7061 246.7422 522.2808 246.0684 522.0825 c244.8848 521.7144 243.6367 521.5151 242.3262 521.5151 c240.8125 521.5181 239.8223 521.8574 239.252 522.5078 c239.0859 522.71 238.9277 523.2808 238.7676 524.2153 c238.6094 525.1494 238.541 526.0576 238.541 526.9995 c238.5391 528.5674 238.7695 529.5049 239.248 529.7886 c240.0488 530.272 241.4258 530.5298 243.3105 530.5313 c244.9512 530.5298 246.0391 530.2471 246.6445 529.6782 cf/BBAccumRotation (-0.000000) XT*U*u1 D275.3457 535.3574 m274.9434 535.6196 273.8887 535.8931 272.1973 536.1167 c270.3652 536.3853 268.4707 536.54 266.541 536.5371 c261.9746 536.5386 258.7949 535.7764 257.0664 534.2881 c256.2168 533.564 255.7754 531.5483 255.7793 528.2314 c255.7773 525.6099 256.0508 522.5566 256.5547 519.1343 c257.0332 516.0093 257.5098 513.688 258.0176 512.1694 c258.2832 511.3667 259.1602 510.7163 260.6211 510.1841 c262.0762 509.6504 263.6719 509.3848 265.4629 509.3848 c268.877 509.3896 271.4512 510.2979 273.1055 512.1646 c274.3262 513.5405 275.377 515.8218 276.2227 519.0591 c277.0313 522.1382 277.4082 525.186 277.4102 528.1948 c277.4102 532.085 276.7324 534.4399 275.3457 535.3574 cf/BBAccumRotation (-0.000000) XT0 D269.4531 520.688 m269.1484 519.022 268.0684 518.1846 266.1699 518.1831 c265.1523 518.1846 264.1113 518.3672 263.0566 518.7935 c262.5488 518.9824 262.0684 520.084 261.6699 522.0645 c261.293 523.9312 261.1309 525.915 261.1328 527.9292 c261.1309 529.8716 261.332 531.2075 261.707 531.9351 c261.8398 532.1865 262.3789 532.3462 263.3262 532.3477 c263.8984 532.3491 264.8789 532.2739 266.3066 532.1206 c267.6895 532.0103 268.6738 531.9351 269.25 531.9316 c270.1289 531.9287 270.5703 530.9761 270.5742 529.1104 c270.5703 527.624 270.1992 524.8071 269.4531 520.688 cf/BBAccumRotation (-0.000000) XT*U*u1 D329.4551 536.7886 m328.0195 537.3364 325.6094 537.5269 322.2832 537.4302 c322.1211 537.4302 321.7383 535.4756 321.5684 535.4771 C320.6172 535.4175 319.1094 535.5122 317.0898 535.793 c314.8789 536.0879 313.3672 536.2456 312.6035 536.2456 c310.8496 536.249 309.7832 535.7642 309.4316 534.7651 c307.7031 529.873 306.8398 526.2817 306.8418 524.0078 c306.8438 521.7974 307.5449 519.9106 308.9824 518.3379 c309.5977 517.6631 311.418 517.252 314.4258 517.0557 c315.8809 516.9604 318.2441 516.896 321.5371 516.8989 c321.6465 516.8989 321.6699 516.3818 321.6738 515.3311 c321.6738 512.0879 321.3535 509.5918 320.7109 507.7661 c320.5137 507.1909 316.9355 506.9043 315.5684 506.9028 c315.082 506.9028 314.5273 506.9316 313.9961 507.0298 C313.4473 507.0942 313.2227 507.125 313.3164 507.1206 c313.416 507.1235 313.8027 507.8647 314.5332 509.3359 c315.2402 510.8071 315.5957 511.5786 315.5957 511.6753 C315.498 511.6782 313.0918 512.1216 312.0313 512.3442 c309.4902 512.8828 308.1855 513.2124 308.1523 513.1479 C307.7383 512.5986 307.543 511.5757 307.5449 510.1011 c307.5449 508.6011 307.7676 506.769 308.1484 504.5952 c308.5117 502.7051 308.6973 501.7402 308.793 501.7466 c309.9473 501.7773 313.0527 502.1973 318.1484 502.9878 c323.8125 503.8867 326.832 504.5679 327.1211 505.0142 C327.918 505.8135 328.3008 508.4736 328.2988 512.9224 c328.3027 514.6836 328.2344 516.9268 328.0859 519.6494 c327.9473 522.3726 328.3379 528.8696 328.6543 530.416 c329.166 533.0166 329.4512 535.1226 329.4551 536.7886 Cf/BBAccumRotation (-0.000000) XT0 D321.5723 519.6528 m320.1387 519.751 318.8555 520.0054 317.7031 520.4487 c317.2207 520.6436 316.7637 520.874 316.3809 521.0869 C315.9766 522.2129 315.7559 523.749 315.75 525.6694 c315.7539 528.7808 316.1309 530.7334 316.9063 531.542 C317.6387 532.0483 319.0078 532.2065 321.0566 532.082 C321.2188 532.0806 321.2188 531.5684 321.127 530.5757 c321.0547 529.8286 320.8105 524.3286 321.1582 522.6948 c321.4844 521.0918 321.6445 520.1377 321.6465 519.8442 c321.6484 519.7139 321.6055 519.6514 321.5723 519.6528 Cf/BBAccumRotation (-0.000000) XT*U*u1 D354.1016 526.7202 m354.1328 526.6836 354.1328 526.7188 354.1289 526.897 c354.1328 528.2271 353.8711 529.126 353.3652 531.6436 c352.6895 534.8252 352.0898 536.1953 351.1992 536.585 c349.5 537.3179 346.7129 537.5913 342.8945 537.5928 c338.3535 537.5928 335.6328 536.8945 334.7344 535.5322 c334.1563 534.6548 333.6777 532.7681 333.2891 529.9326 c332.9375 527.2744 332.7773 524.5127 332.7754 521.6104 c332.7773 517.5156 333.1309 514.9629 333.8008 513.9473 c334.6699 512.6831 337.7773 512.0557 343.123 512.0542 c344.8262 512.0542 346.7754 512.125 348.9844 512.2305 c349.793 512.2705 350.5605 512.3364 351.3594 512.3657 C353.0488 520.2524 l352.7578 520.3936 352.1758 520.4609 351.3164 520.4595 c349.5371 520.3398 345.1504 520.0239 v345.0527 520.0239 345.0195 519.9517 345.0195 519.7783 c345.0234 519.6729 345.3379 519.3735 345.4316 518.9854 c345.5293 518.6338 345.5078 518.1724 345.5098 518.062 c345.5098 517.8867 345.4707 517.8149 345.3789 517.8179 c345.0293 517.7764 344.6133 517.7793 344.1309 517.7793 c342.5625 517.7793 340.4785 517.8867 337.8828 518.0972 c337.3379 519.042 337.123 522.6289 337.1152 523.5063 c337.125 523.7148 337.123 523.9238 337.1563 524.1689 c337.9531 524.0957 338.8164 524.0649 339.7148 524.0664 c342.8594 524.0635 346.1543 524.4531 349.582 525.2183 c352.6855 525.918 354.1992 526.4058 354.1016 526.7202 cf/BBAccumRotation (-0.000000) XT0 D345.2598 527.7021 m345.0957 527.208 344.2949 526.7954 342.9199 526.481 c341.6426 526.2002 340.3262 526.062 338.9473 526.0591 c337.4746 526.0576 336.7461 526.3892 336.3223 526.6128 c335.0293 527.3247 335.6191 530.6968 335.748 530.9438 c336 531.4316 337.2207 531.6787 339.3965 531.6758 c340.6836 531.6772 341.8652 531.5742 342.9551 531.3965 c344.1367 531.1924 344.8457 530.979 345.1309 530.6631 c345.3809 530.3809 345.5176 530.7813 345.5156 529.8037 c345.5195 528.856 345.5176 528.4048 345.2598 527.6655 c345.2598 527.7021 Lf/BBAccumRotation (-0.000000) XT*U*u1 0.6 0 0.1 (SB Blue) 0 x380.5 565.1177 m379.1055 564.5884 374.7051 563.4058 373.6699 562.7017 C372.6953 562.5039 372.2344 562.7031 372 561.1201 C372.3086 560.2012 373.1055 559.7959 373.832 559.2837 c375.5371 558.0898 376.7656 556.5483 378.334 555.2842 c379.6133 553.8975 380.4219 551.1943 379.4199 549.1094 c378.6992 547.606 377.0586 546.6763 375.6699 546.6948 c371.5879 546.7437 369.1602 552.8203 368.9121 553.1133 C368.2031 555.146 367.3438 558.7651 366.3281 558.4492 C365.8262 558.0918 365.6758 556.8105 365.584 556.1968 c365.4688 554.9756 364.3594 552.2422 364.248 551.8647 c363.7148 550.1616 363.0918 548.7241 361.8281 547.5278 c360.0605 545.8462 358.0176 544.0435 355.3281 544.7798 c353.9551 544.915 352.1445 546.1978 351.7383 547.6948 c351.2422 549.9561 352.0449 552.5566 353.4902 554.1948 c355.4082 556.3657 359.334 558.3125 359.4902 558.5317 C360.7383 559.2803 362.9961 560.2012 363.2441 560.9482 c363.9688 563.125 360.4082 561.7012 Y359.6367 561.2671 355.541 560.7334 354.3262 560.6196 c351.7305 560.3696 349.0332 561.1382 346.9863 563.2876 C346.3457 564.2925 346.082 566.2852 346.5684 567.4497 c346.875 568.5483 348.0371 570.4766 349.8223 571.1206 C351.6191 571.374 352.4121 571.3755 V353.8008 571.248 355.5 570.541 355.6563 570.2876 C357.9883 569.1724 359.5488 567.1431 361.7461 566.0366 C362.4375 565.6289 363 565.9385 363.0762 566.6196 C362.9199 567.9775 361.3613 569.4546 361.0723 569.8735 c359.9688 572.0796 358.6484 575.7402 360.2441 578.041 C360.6738 578.8926 364.0605 581.938 366.998 579.7119 C369.873 578.0474 369.1152 572.5352 369.084 571.874 C368.9043 571.7407 368.3477 568.7124 367.6621 567.5371 C367.4824 566.9004 367.252 566.6426 367.5801 565.9521 C368.6074 565.1177 369.1172 565.8311 370 566.4526 c370.4648 566.8589 372.418 569.2861 372.916 570.208 C373.9414 571.5381 374.748 573.5557 376.0859 574.2871 C381.252 576.7925 383.543 572.9585 V384.4551 572.1655 384.5469 569.6128 384.2559 568.4546 C383.582 567.1904 380.916 565.248 380.5 565.1177 Cf/BBAccumRotation (-0.000000) XT1 D381.9668 572.1641 m381.1777 572.8296 380.498 573.2056 379.2949 573.2749 C375.8594 573.4741 374.6074 569.6265 372.5918 567.1167 c370.9531 565.2158 369.0684 563.2354 366.3984 564.564 C366.2031 564.7158 366.0254 564.814 366.0273 565.0332 C365.291 566.543 367.2832 570.7158 367.4395 571.6392 C367.3848 573.2285 367.6484 574.1689 367.3926 575.7861 c367.0801 577.0474 366.3633 578.4507 365.1367 578.5796 c363.6777 578.9219 362.5781 578.061 361.6289 576.7817 C360.4922 575.1172 362.1895 572.2222 362.3555 571.3462 C363.1973 569.2217 364.5098 568.0005 364.2109 565.6333 c364.0176 564.7495 363.2734 564.5288 362.5176 564.4595 C360.0547 564.7544 358.0996 567.0737 355.9766 568.4453 c354.3965 569.5806 351.9395 570.3706 350.4219 569.5391 C349.1133 568.7769 347.998 567.1138 348.1348 565.377 C348.4316 563.9595 349.2891 563.7188 350.1133 562.9624 C350.9277 562.5054 351.332 562.5405 351.8496 562.269 C352.2539 562.1587 353.4219 561.873 354.9238 561.9668 C356.3379 562.249 357.707 562.6216 358.9004 562.9854 c359.9121 563.1787 361.4414 563.6177 362.5293 563.4839 C363.166 563.3564 364.2031 563.731 364.6133 563.0972 c365.0234 562.2583 365.0586 561.1309 364.6602 560.3267 C364.0957 559.3804 360.9473 557.2295 359.3574 556.2813 c357.6895 555.4482 356.0645 554.3623 354.7793 552.8755 c353.6191 551.5161 353.3867 550.0039 353.5801 548.4253 C353.6602 547.4248 354.6133 546.7881 355.3633 546.5767 c357.459 545.9614 358.5332 546.9292 359.4863 547.8174 c362.291 550.4453 363.1504 552.9263 363.3711 553.6641 C363.6172 554.833 364.4199 557.0439 364.6016 557.4888 c364.8789 558.3276 365.0859 559.7686 366.0469 560.0537 C366.5801 560.1812 367.0508 560.1504 367.3262 559.9585 C368.3848 559.1592 368.8105 558.2603 369.1797 556.981 C371.9863 549.4346 374.7324 548.772 v375.6797 548.5371 377.0742 548.9468 377.6758 549.9146 C378.5918 552.8066 376.502 554.6704 374.8379 556.3257 c373.2559 558.377 370.0391 559.2129 370.1973 562.2998 C371.2656 564.4917 374.5488 564.5811 375.5117 565.2407 C376.0605 565.4429 379.0977 566.4619 379.5371 566.8975 C379.9746 567.1382 380.6719 567.4971 381.25 568.1123 C381.8047 568.6938 383.4492 570.3369 381.9668 572.1641 Cf/BBAccumRotation (-0.000000) XT*U0 D203.7598 498.1904 m245.4883 499.3623 l294.377 496.5337 l322.6992 496.5273 l340.2246 500.6187 l372.5566 498.2979 l408.4238 498.5801 l423.7285 499.5972 l427.9121 467.979 l421.4902 450.3291 l358.9199 453.9355 l293.7852 451.2969 l247.5273 449.5986 l209.8789 452.6133 l200.2383 457.2739 l205.0234 477.4995 l202.8164 489.0146 l203.7598 498.1904 lf/BBAccumRotation (0.019191) XTu0 0 1 0 (SB Yellow) 0 x225.1387 468.4346 m224.7949 467.8608 L225.0176 466.8208 L224.625 462.5342 L222.0801 459.5767 L216.0586 458.4766 L213.1426 459.5444 L211.9785 460.439 L210.8691 460.3838 L209.0684 461.0342 L209.4258 469.6895 L209.0684 471.0688 L215.2793 470.8784 L215.3359 468.2124 L215.6211 465.2715 L217.6797 465.2822 L218.6582 464.7251 L219.0059 470.1021 L218.1797 472.1763 L214.2676 473.8115 L213.3242 474.7061 L212.6367 474.5127 L209.9336 475.6328 L208.8027 483.1299 L209.6133 489.5562 L212.7559 491.8101 L217.2813 492.8057 L220.2461 491.6411 L220.7578 491.0659 L221.9648 490.9785 L224.1934 490.0962 L223.9941 482.7754 L224.2578 481.7383 L223.2344 481.7754 L218.5723 481.6387 L218.6367 484.0674 L218.4941 486.542 L215.625 486.3271 L214.9824 486.7949 L214.7227 481.605 L216.1035 480.0049 L223.2246 477.21 L225.332 470.2861 L225.1387 468.4346 lf/BBAccumRotation (-0.000000) XT264.8789 489.8555 m264.3027 475.7246 L264.5039 460.5249 L264.6914 458.8604 L258.5723 458.8569 L258.4277 460.0459 L252.4102 459.2837 L248.6992 462.9653 L248.7871 467.9067 L249.041 468.8105 L248.8242 470.1943 L249.0723 486.5894 L248.8945 492.6675 L254.8848 492.8071 L254.9805 486.396 L254.7246 485.3022 L255.002 483.6421 L255.2305 464.8691 L255.9551 465.4507 L257.8789 465.5107 L257.9395 468.7876 L258.4023 469.7876 L258.002 471.4507 L258.1328 476.9673 L257.7246 490.3633 L257.457 491.6445 L265.2012 491.5615 L264.8789 489.8555 lf/BBAccumRotation (-0.000000) XT303.0547 473.4297 m297.0332 473.0508 L297.002 476.3306 L297.416 478.0918 L297.0234 478.9893 L297.0176 485.3652 L295.7852 484.8804 L294.3691 484.7651 L294.1035 475.1172 L294.8945 461.4419 L294.9922 459.9648 L295.6055 457.9736 L288.8926 458.061 L288.502 474.7002 L288.8828 475.5576 L288.4375 477.2588 L288.1191 491.187 L292.3457 491.3145 L293.6797 491.6611 L293.6973 488.8584 L295.8652 490.48 L300.2617 490.3325 L303.207 487.1216 L303.0547 473.4297 lf/BBAccumRotation (-0.000000) XT382.1758 491.4434 m382.1504 489.728 L382.0469 480.5049 L381.9316 462.0693 L382.252 460.5493 L378.2773 460.6108 L377.5039 460.9897 L372.6699 460.709 L371.0117 470.1558 L371.0078 471.584 L370.4746 473.1489 L368.0605 486.8623 L368.1934 469.4702 L368.2246 465.9019 L367.9355 464.8081 L368.2891 463.2495 L368.3105 459.6777 L363.0996 459.5474 L363.1992 462.7783 L363.3867 482.5454 L363.7207 483.8833 L363.2383 485.2622 L362.7051 493.2871 L367.2793 493.1738 L368.2598 493.5571 L372.9688 493.3657 L374.0488 486.3882 L375.3906 478.75 L375.3125 477.9341 L375.6602 477.0811 L377.4531 466.833 L377.2031 488.1665 L376.8613 492.9224 L382.5469 493.1602 L382.1758 491.4434 lf/BBAccumRotation (-0.000000) XT400.6406 469.9429 m400.3945 468.8916 L400.6523 468.0864 L400.5938 459.7256 L394.7441 458.0576 L393.373 458.4707 L392.3438 459.2271 L391.4883 459.0288 L388.2246 459.9097 L387.8281 472.9355 L388.209 473.5522 L387.7656 475.1587 L387.748 477.73 L387.0215 477.3921 L385.3555 477.2817 L385.6426 478.8022 L385.4258 484.1211 L387.9531 483.8584 L387.9727 492.4697 L394.8594 492.5664 L394.5234 491.1367 L393.9863 483.3384 L396.8125 483.4551 L400.1953 483.3403 L400.0254 477.0132 L399.002 477.0562 L397.8418 477.4307 L397.0293 477.0884 L393.7402 477.1606 L393.5898 474.4038 L394.1758 465.3696 L394.4063 463.6636 L395.293 464.2432 L396.2305 464.4844 L396.1602 468.4375 L396.0117 470.9048 L395.6152 471.8984 L400.6738 471.6484 L400.6406 469.9429 lf/BBAccumRotation (-0.000000) XT420.3789 466.8481 m420.0391 466.2793 L420.2695 465.2266 L419.8672 460.9512 L417.3242 457.9902 L411.2988 456.8901 L408.3828 457.9629 L407.2246 458.8633 L406.1152 458.8066 L404.3027 459.4556 L404.6699 468.1001 L404.3105 469.481 L410.5137 469.2939 L410.5762 466.6304 L410.8652 463.6865 L412.916 463.7036 L413.9102 463.1421 L414.248 468.5161 L413.416 470.5991 L409.5098 472.2271 L408.5684 473.1196 L407.8789 472.9312 L405.1758 474.0479 L404.0488 481.5469 L404.8496 487.9717 L408.002 490.23 L412.5293 491.2163 L415.4863 490.0532 L416.0078 489.4902 L417.1992 489.4028 L419.4238 488.5176 L419.2402 481.1924 L419.5 480.1509 L418.4707 480.1938 L413.8105 480.0571 L413.877 482.4824 L413.7324 484.9512 L410.8711 484.7407 L410.2227 485.2085 L409.9629 480.0278 L411.3496 478.4248 L418.4688 475.6221 L420.5723 468.7017 L420.3789 466.8481 lf/BBAccumRotation (-0.000000) XT*u1 D245.5293 475.062 m244.1973 486.6938 L242.1895 491.333 L236.3613 492.9116 L231.3262 491.4434 L228.043 478.813 L228.4395 472.2148 L228.9199 471.4629 L228.584 469.8413 L228.8809 465.1333 L232.9902 459.2285 L236.9277 459.4937 L238.4648 459.8452 L238.0469 458.6943 L239.0156 454.7119 L242.3828 455.8779 L244.4375 455.8979 L242.5195 460.5371 L243.3809 464.7222 L243.252 465.6289 L243.9258 467.2964 l245.5293 475.062 Lf/BBAccumRotation (-0.000000) XT0 D238.75 482.5132 m238.418 481.4165 L238.5898 465.9756 L236.4102 465.2881 L234.6523 465.9893 L234.5352 474.7305 L235.1758 486.6216 L237.4414 486.3579 L238.373 486.8901 L238.4004 483.1743 l238.75 482.5132 Lf/BBAccumRotation (-0.000000) XT*U*u1 D285.1777 456.8491 m284.7441 458.0273 L284.6113 463.8276 L284.3516 464.4487 L284.6055 465.064 L284.2656 480.646 L284.3086 486.0234 L279.2598 491.02 L277.8945 491.0537 L277.4688 490.8218 L274.4336 491.124 L269.1797 488.9966 L269.3945 483.7173 L272.1699 484.5015 L277.8613 484.4004 L278.1152 479.2271 L275.1309 478.7729 L274.6172 478.0537 L273.4609 478.5659 L270.9785 478.2148 L268.0254 467.1675 L268.7305 465.3188 L269.4609 464.8032 L269.2559 463.895 L271.877 456.7446 L279.0566 458.0825 L279.2305 457.0806 L283.9863 456.8843 l285.1777 456.8491 Lf/BBAccumRotation (-0.000000) XT0 D278.0547 465.25 m274.543 465.7529 L274.8105 470.2632 L274.5762 472.2593 L275.7344 472.0308 L277.9531 472.4678 l278.0547 465.25 Lf/BBAccumRotation (-0.000000) XT*U*u1 D322.1484 482.3569 m318.4434 490.6411 L309.498 490.9556 L306.0156 482.3677 L306.0723 480.6123 L306.4707 479.3315 L306.1719 478.7134 L306.8047 464.3169 L309.1836 460.9575 L310.041 460.5874 L310.084 459.8774 L311.8223 457.4165 L320.3711 457.8169 L320.0996 465.8467 L318.8945 465.4556 L312.3496 466.4556 L312.4395 471.1563 L311.957 471.8633 L313.6738 472.0703 L319.6543 472.3525 L320.2324 474.7827 L320.2754 476.021 L320.8633 477.2617 l322.1484 482.3569 Lf/BBAccumRotation (-0.000000) XT0 D315.248 478.5981 m313.2734 478.3896 L312.043 478.3325 L312.5859 479.2871 L312.8477 484.71 L315.2031 484.4863 l315.248 478.5981 Lf/BBAccumRotation (-0.000000) XT*U*u1 D340.3242 475.9702 m339.8613 480.4819 L339.4297 481.6221 L339.6758 482.3369 L339.2598 486.7012 L334.7734 491.4648 L331.0527 491.2974 L330.1543 490.8174 L329.6816 491.2407 L324.6465 491.0107 L324.8105 479.8408 L325.1641 478.75 L324.8789 476.9951 L325.0586 465.6841 L324.6797 458.8755 L324.3008 457.6865 L331.6953 458.0811 L331.6797 460.5078 L331.416 461.6904 L331.666 462.3149 L331.5723 468.8184 L332.3906 468.0693 L336.1934 468.9072 L338.7793 471.4521 l340.3242 475.9702 Lf/BBAccumRotation (-0.000000) XT0 D334.1348 474.6875 m331.1875 474.4697 L331.0078 485.3101 L334.0508 485.6182 L333.8379 479.4404 l334.1348 474.6875 Lf/BBAccumRotation (-0.000000) XT*U*u1 D359.377 462.3843 m358.9395 463.5762 L358.8047 469.3706 L358.541 469.9839 L358.7891 470.6055 L358.459 486.1953 L358.502 491.5693 L353.4512 496.5625 L352.082 496.604 L351.6563 496.3511 L348.6211 496.667 L343.375 494.5332 L343.5938 489.2539 L346.3613 490.0488 L352.0527 489.9458 L352.3105 484.7715 L349.3125 484.3174 L348.8125 483.5996 L347.6465 484.1104 L345.1699 483.7559 L342.2188 472.7119 L342.9219 470.8599 L343.6445 470.3447 L343.4395 469.4424 L346.0664 462.2813 L353.2441 463.6235 L353.4199 462.625 L358.1738 462.4209 l359.377 462.3843 Lf/BBAccumRotation (-0.000000) XT0 D352.2402 470.7939 m348.7363 471.2866 L348.9961 475.8047 L348.7695 477.7988 L349.9258 477.5674 L352.1406 478.0122 l352.2402 470.7939 Lf/BBAccumRotation (-0.000000) XT*UU*u1 0.6 0 0.1 (SB Blue) 0 x437.916 524.0557 m438.9414 526.7158 L439.9238 526.7173 L439.9238 523.0981 L439.2754 523.0996 L439.2793 526.0405 L439.2617 526.0376 L438.1309 523.0967 L437.6875 523.0967 L436.5547 526.0405 L436.541 526.0405 L436.5371 523.0938 L435.8984 523.0981 L435.8984 526.7202 L436.8867 526.7173 L437.916 524.0557 lf/BBAccumRotation (-0.000000) XT435.2637 526.1895 m434.1426 526.1929 L434.1465 523.0967 L433.5117 523.0967 L433.5117 526.1895 L432.3945 526.1895 L432.3965 526.7188 L435.2676 526.7188 L435.2637 526.1895 lf/BBAccumRotation (-0.000000) XT*UULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAGM_Gradient /terminate get execAdobe_typography_AI5 /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF